// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/vesenv/all_api_groups.proto

/*
	Package vesenv is a generated protocol buffer package.

	It is generated from these files:
		ves.io/schema/vesenv/all_api_groups.proto
		ves.io/schema/vesenv/all_services.proto
		ves.io/schema/vesenv/options.proto
		ves.io/schema/vesenv/quota_resource_keys.proto

	It has these top-level messages:
		APIGroupChoice
		ServiceChoice
		BFSecretInfo
		BFSecretChoice
		ReEncryptSecretItemType
		ReEncryptSecretsType
		ServiceSlugInfo
		ServiceSlugChoice
		ServiceInfo
		NameToUid
		QuotaResourceKeyInfo
		APIGroupElementItem
		APIGroupElementInfo
		APIGroupNameMap
		QuotaResourceKeyChoice
*/
package vesenv

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import strings "strings"
import reflect "reflect"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// APIGroupChoice enumerates all the well-known api_group.Objects in a VES environment
type APIGroupChoice struct {
	// Types that are valid to be assigned to Choice:
	//	*APIGroupChoice_InfrastructureDemoAccessRead
	//	*APIGroupChoice_VesIoBillingRead
	//	*APIGroupChoice_VesIoBillingWrite
	//	*APIGroupChoice_VesIoGeneralRead
	//	*APIGroupChoice_VesIoGeneralWrite
	//	*APIGroupChoice_VesIoIaasCaasRead
	//	*APIGroupChoice_VesIoIaasCaasWrite
	//	*APIGroupChoice_VesIoInfraMonitorRead
	//	*APIGroupChoice_VesIoInfraMonitorWrite
	//	*APIGroupChoice_VesIoInfrastructureRead
	//	*APIGroupChoice_VesIoInfrastructureWrite
	//	*APIGroupChoice_VesIoInternalRead
	//	*APIGroupChoice_VesIoInternalWrite
	//	*APIGroupChoice_VesIoK8SRead
	//	*APIGroupChoice_VesIoK8SWrite
	//	*APIGroupChoice_VesIoLabelsRead
	//	*APIGroupChoice_VesIoLabelsWrite
	//	*APIGroupChoice_VesIoLocalK8SWrite
	//	*APIGroupChoice_VesIoMonitorRead
	//	*APIGroupChoice_VesIoMonitorWrite
	//	*APIGroupChoice_VesIoNetworkRead
	//	*APIGroupChoice_VesIoNetworkWrite
	//	*APIGroupChoice_VesIoProxyMonitorRead
	//	*APIGroupChoice_VesIoProxyMonitorWrite
	//	*APIGroupChoice_VesIoProxyRead
	//	*APIGroupChoice_VesIoProxySecurityRead
	//	*APIGroupChoice_VesIoProxySecurityWrite
	//	*APIGroupChoice_VesIoProxyWafRead
	//	*APIGroupChoice_VesIoProxyWafWrite
	//	*APIGroupChoice_VesIoProxyWrite
	//	*APIGroupChoice_VesIoSecretsRead
	//	*APIGroupChoice_VesIoSecretsWrite
	//	*APIGroupChoice_VesIoSystemSrv6NetworkSliceReadWrite
	//	*APIGroupChoice_VesIoSystemVirtualNetworkReadWrite
	//	*APIGroupChoice_VesIoUamAdminRead
	//	*APIGroupChoice_VesIoUamAdminWrite
	//	*APIGroupChoice_VesIoUamRead
	//	*APIGroupChoice_VesIoUamWrite
	//	*APIGroupChoice_VesIoVirtualSitesRead
	//	*APIGroupChoice_VesIoVirtualSitesWrite
	//	*APIGroupChoice_VesIoVoltShareRead
	//	*APIGroupChoice_VesIoVoltShareWrite
	//	*APIGroupChoice_VesIoWebAccessRead
	//	*APIGroupChoice_VesIoWebAccessWrite
	Choice isAPIGroupChoice_Choice `protobuf_oneof:"choice"`
}

func (m *APIGroupChoice) Reset()                    { *m = APIGroupChoice{} }
func (*APIGroupChoice) ProtoMessage()               {}
func (*APIGroupChoice) Descriptor() ([]byte, []int) { return fileDescriptorAllApiGroups, []int{0} }

type isAPIGroupChoice_Choice interface {
	isAPIGroupChoice_Choice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type APIGroupChoice_InfrastructureDemoAccessRead struct {
	InfrastructureDemoAccessRead bool `protobuf:"varint,1,opt,name=infrastructure_demo_access_read,json=infrastructureDemoAccessRead,proto3,oneof"`
}
type APIGroupChoice_VesIoBillingRead struct {
	VesIoBillingRead bool `protobuf:"varint,2,opt,name=ves_io_billing_read,json=vesIoBillingRead,proto3,oneof"`
}
type APIGroupChoice_VesIoBillingWrite struct {
	VesIoBillingWrite bool `protobuf:"varint,3,opt,name=ves_io_billing_write,json=vesIoBillingWrite,proto3,oneof"`
}
type APIGroupChoice_VesIoGeneralRead struct {
	VesIoGeneralRead bool `protobuf:"varint,4,opt,name=ves_io_general_read,json=vesIoGeneralRead,proto3,oneof"`
}
type APIGroupChoice_VesIoGeneralWrite struct {
	VesIoGeneralWrite bool `protobuf:"varint,5,opt,name=ves_io_general_write,json=vesIoGeneralWrite,proto3,oneof"`
}
type APIGroupChoice_VesIoIaasCaasRead struct {
	VesIoIaasCaasRead bool `protobuf:"varint,6,opt,name=ves_io_iaas_caas_read,json=vesIoIaasCaasRead,proto3,oneof"`
}
type APIGroupChoice_VesIoIaasCaasWrite struct {
	VesIoIaasCaasWrite bool `protobuf:"varint,7,opt,name=ves_io_iaas_caas_write,json=vesIoIaasCaasWrite,proto3,oneof"`
}
type APIGroupChoice_VesIoInfraMonitorRead struct {
	VesIoInfraMonitorRead bool `protobuf:"varint,8,opt,name=ves_io_infra_monitor_read,json=vesIoInfraMonitorRead,proto3,oneof"`
}
type APIGroupChoice_VesIoInfraMonitorWrite struct {
	VesIoInfraMonitorWrite bool `protobuf:"varint,9,opt,name=ves_io_infra_monitor_write,json=vesIoInfraMonitorWrite,proto3,oneof"`
}
type APIGroupChoice_VesIoInfrastructureRead struct {
	VesIoInfrastructureRead bool `protobuf:"varint,10,opt,name=ves_io_infrastructure_read,json=vesIoInfrastructureRead,proto3,oneof"`
}
type APIGroupChoice_VesIoInfrastructureWrite struct {
	VesIoInfrastructureWrite bool `protobuf:"varint,11,opt,name=ves_io_infrastructure_write,json=vesIoInfrastructureWrite,proto3,oneof"`
}
type APIGroupChoice_VesIoInternalRead struct {
	VesIoInternalRead bool `protobuf:"varint,12,opt,name=ves_io_internal_read,json=vesIoInternalRead,proto3,oneof"`
}
type APIGroupChoice_VesIoInternalWrite struct {
	VesIoInternalWrite bool `protobuf:"varint,13,opt,name=ves_io_internal_write,json=vesIoInternalWrite,proto3,oneof"`
}
type APIGroupChoice_VesIoK8SRead struct {
	VesIoK8SRead bool `protobuf:"varint,14,opt,name=ves_io_k8s_read,json=vesIoK8sRead,proto3,oneof"`
}
type APIGroupChoice_VesIoK8SWrite struct {
	VesIoK8SWrite bool `protobuf:"varint,15,opt,name=ves_io_k8s_write,json=vesIoK8sWrite,proto3,oneof"`
}
type APIGroupChoice_VesIoLabelsRead struct {
	VesIoLabelsRead bool `protobuf:"varint,16,opt,name=ves_io_labels_read,json=vesIoLabelsRead,proto3,oneof"`
}
type APIGroupChoice_VesIoLabelsWrite struct {
	VesIoLabelsWrite bool `protobuf:"varint,17,opt,name=ves_io_labels_write,json=vesIoLabelsWrite,proto3,oneof"`
}
type APIGroupChoice_VesIoLocalK8SWrite struct {
	VesIoLocalK8SWrite bool `protobuf:"varint,18,opt,name=ves_io_local_k8s_write,json=vesIoLocalK8sWrite,proto3,oneof"`
}
type APIGroupChoice_VesIoMonitorRead struct {
	VesIoMonitorRead bool `protobuf:"varint,19,opt,name=ves_io_monitor_read,json=vesIoMonitorRead,proto3,oneof"`
}
type APIGroupChoice_VesIoMonitorWrite struct {
	VesIoMonitorWrite bool `protobuf:"varint,20,opt,name=ves_io_monitor_write,json=vesIoMonitorWrite,proto3,oneof"`
}
type APIGroupChoice_VesIoNetworkRead struct {
	VesIoNetworkRead bool `protobuf:"varint,21,opt,name=ves_io_network_read,json=vesIoNetworkRead,proto3,oneof"`
}
type APIGroupChoice_VesIoNetworkWrite struct {
	VesIoNetworkWrite bool `protobuf:"varint,22,opt,name=ves_io_network_write,json=vesIoNetworkWrite,proto3,oneof"`
}
type APIGroupChoice_VesIoProxyMonitorRead struct {
	VesIoProxyMonitorRead bool `protobuf:"varint,23,opt,name=ves_io_proxy_monitor_read,json=vesIoProxyMonitorRead,proto3,oneof"`
}
type APIGroupChoice_VesIoProxyMonitorWrite struct {
	VesIoProxyMonitorWrite bool `protobuf:"varint,24,opt,name=ves_io_proxy_monitor_write,json=vesIoProxyMonitorWrite,proto3,oneof"`
}
type APIGroupChoice_VesIoProxyRead struct {
	VesIoProxyRead bool `protobuf:"varint,25,opt,name=ves_io_proxy_read,json=vesIoProxyRead,proto3,oneof"`
}
type APIGroupChoice_VesIoProxySecurityRead struct {
	VesIoProxySecurityRead bool `protobuf:"varint,26,opt,name=ves_io_proxy_security_read,json=vesIoProxySecurityRead,proto3,oneof"`
}
type APIGroupChoice_VesIoProxySecurityWrite struct {
	VesIoProxySecurityWrite bool `protobuf:"varint,27,opt,name=ves_io_proxy_security_write,json=vesIoProxySecurityWrite,proto3,oneof"`
}
type APIGroupChoice_VesIoProxyWafRead struct {
	VesIoProxyWafRead bool `protobuf:"varint,28,opt,name=ves_io_proxy_waf_read,json=vesIoProxyWafRead,proto3,oneof"`
}
type APIGroupChoice_VesIoProxyWafWrite struct {
	VesIoProxyWafWrite bool `protobuf:"varint,29,opt,name=ves_io_proxy_waf_write,json=vesIoProxyWafWrite,proto3,oneof"`
}
type APIGroupChoice_VesIoProxyWrite struct {
	VesIoProxyWrite bool `protobuf:"varint,30,opt,name=ves_io_proxy_write,json=vesIoProxyWrite,proto3,oneof"`
}
type APIGroupChoice_VesIoSecretsRead struct {
	VesIoSecretsRead bool `protobuf:"varint,31,opt,name=ves_io_secrets_read,json=vesIoSecretsRead,proto3,oneof"`
}
type APIGroupChoice_VesIoSecretsWrite struct {
	VesIoSecretsWrite bool `protobuf:"varint,32,opt,name=ves_io_secrets_write,json=vesIoSecretsWrite,proto3,oneof"`
}
type APIGroupChoice_VesIoSystemSrv6NetworkSliceReadWrite struct {
	VesIoSystemSrv6NetworkSliceReadWrite bool `protobuf:"varint,33,opt,name=ves_io_system_srv6_network_slice_read_write,json=vesIoSystemSrv6NetworkSliceReadWrite,proto3,oneof"`
}
type APIGroupChoice_VesIoSystemVirtualNetworkReadWrite struct {
	VesIoSystemVirtualNetworkReadWrite bool `protobuf:"varint,34,opt,name=ves_io_system_virtual_network_read_write,json=vesIoSystemVirtualNetworkReadWrite,proto3,oneof"`
}
type APIGroupChoice_VesIoUamAdminRead struct {
	VesIoUamAdminRead bool `protobuf:"varint,35,opt,name=ves_io_uam_admin_read,json=vesIoUamAdminRead,proto3,oneof"`
}
type APIGroupChoice_VesIoUamAdminWrite struct {
	VesIoUamAdminWrite bool `protobuf:"varint,36,opt,name=ves_io_uam_admin_write,json=vesIoUamAdminWrite,proto3,oneof"`
}
type APIGroupChoice_VesIoUamRead struct {
	VesIoUamRead bool `protobuf:"varint,37,opt,name=ves_io_uam_read,json=vesIoUamRead,proto3,oneof"`
}
type APIGroupChoice_VesIoUamWrite struct {
	VesIoUamWrite bool `protobuf:"varint,38,opt,name=ves_io_uam_write,json=vesIoUamWrite,proto3,oneof"`
}
type APIGroupChoice_VesIoVirtualSitesRead struct {
	VesIoVirtualSitesRead bool `protobuf:"varint,39,opt,name=ves_io_virtual_sites_read,json=vesIoVirtualSitesRead,proto3,oneof"`
}
type APIGroupChoice_VesIoVirtualSitesWrite struct {
	VesIoVirtualSitesWrite bool `protobuf:"varint,40,opt,name=ves_io_virtual_sites_write,json=vesIoVirtualSitesWrite,proto3,oneof"`
}
type APIGroupChoice_VesIoVoltShareRead struct {
	VesIoVoltShareRead bool `protobuf:"varint,41,opt,name=ves_io_volt_share_read,json=vesIoVoltShareRead,proto3,oneof"`
}
type APIGroupChoice_VesIoVoltShareWrite struct {
	VesIoVoltShareWrite bool `protobuf:"varint,42,opt,name=ves_io_volt_share_write,json=vesIoVoltShareWrite,proto3,oneof"`
}
type APIGroupChoice_VesIoWebAccessRead struct {
	VesIoWebAccessRead bool `protobuf:"varint,43,opt,name=ves_io_web_access_read,json=vesIoWebAccessRead,proto3,oneof"`
}
type APIGroupChoice_VesIoWebAccessWrite struct {
	VesIoWebAccessWrite bool `protobuf:"varint,44,opt,name=ves_io_web_access_write,json=vesIoWebAccessWrite,proto3,oneof"`
}

func (*APIGroupChoice_InfrastructureDemoAccessRead) isAPIGroupChoice_Choice()         {}
func (*APIGroupChoice_VesIoBillingRead) isAPIGroupChoice_Choice()                     {}
func (*APIGroupChoice_VesIoBillingWrite) isAPIGroupChoice_Choice()                    {}
func (*APIGroupChoice_VesIoGeneralRead) isAPIGroupChoice_Choice()                     {}
func (*APIGroupChoice_VesIoGeneralWrite) isAPIGroupChoice_Choice()                    {}
func (*APIGroupChoice_VesIoIaasCaasRead) isAPIGroupChoice_Choice()                    {}
func (*APIGroupChoice_VesIoIaasCaasWrite) isAPIGroupChoice_Choice()                   {}
func (*APIGroupChoice_VesIoInfraMonitorRead) isAPIGroupChoice_Choice()                {}
func (*APIGroupChoice_VesIoInfraMonitorWrite) isAPIGroupChoice_Choice()               {}
func (*APIGroupChoice_VesIoInfrastructureRead) isAPIGroupChoice_Choice()              {}
func (*APIGroupChoice_VesIoInfrastructureWrite) isAPIGroupChoice_Choice()             {}
func (*APIGroupChoice_VesIoInternalRead) isAPIGroupChoice_Choice()                    {}
func (*APIGroupChoice_VesIoInternalWrite) isAPIGroupChoice_Choice()                   {}
func (*APIGroupChoice_VesIoK8SRead) isAPIGroupChoice_Choice()                         {}
func (*APIGroupChoice_VesIoK8SWrite) isAPIGroupChoice_Choice()                        {}
func (*APIGroupChoice_VesIoLabelsRead) isAPIGroupChoice_Choice()                      {}
func (*APIGroupChoice_VesIoLabelsWrite) isAPIGroupChoice_Choice()                     {}
func (*APIGroupChoice_VesIoLocalK8SWrite) isAPIGroupChoice_Choice()                   {}
func (*APIGroupChoice_VesIoMonitorRead) isAPIGroupChoice_Choice()                     {}
func (*APIGroupChoice_VesIoMonitorWrite) isAPIGroupChoice_Choice()                    {}
func (*APIGroupChoice_VesIoNetworkRead) isAPIGroupChoice_Choice()                     {}
func (*APIGroupChoice_VesIoNetworkWrite) isAPIGroupChoice_Choice()                    {}
func (*APIGroupChoice_VesIoProxyMonitorRead) isAPIGroupChoice_Choice()                {}
func (*APIGroupChoice_VesIoProxyMonitorWrite) isAPIGroupChoice_Choice()               {}
func (*APIGroupChoice_VesIoProxyRead) isAPIGroupChoice_Choice()                       {}
func (*APIGroupChoice_VesIoProxySecurityRead) isAPIGroupChoice_Choice()               {}
func (*APIGroupChoice_VesIoProxySecurityWrite) isAPIGroupChoice_Choice()              {}
func (*APIGroupChoice_VesIoProxyWafRead) isAPIGroupChoice_Choice()                    {}
func (*APIGroupChoice_VesIoProxyWafWrite) isAPIGroupChoice_Choice()                   {}
func (*APIGroupChoice_VesIoProxyWrite) isAPIGroupChoice_Choice()                      {}
func (*APIGroupChoice_VesIoSecretsRead) isAPIGroupChoice_Choice()                     {}
func (*APIGroupChoice_VesIoSecretsWrite) isAPIGroupChoice_Choice()                    {}
func (*APIGroupChoice_VesIoSystemSrv6NetworkSliceReadWrite) isAPIGroupChoice_Choice() {}
func (*APIGroupChoice_VesIoSystemVirtualNetworkReadWrite) isAPIGroupChoice_Choice()   {}
func (*APIGroupChoice_VesIoUamAdminRead) isAPIGroupChoice_Choice()                    {}
func (*APIGroupChoice_VesIoUamAdminWrite) isAPIGroupChoice_Choice()                   {}
func (*APIGroupChoice_VesIoUamRead) isAPIGroupChoice_Choice()                         {}
func (*APIGroupChoice_VesIoUamWrite) isAPIGroupChoice_Choice()                        {}
func (*APIGroupChoice_VesIoVirtualSitesRead) isAPIGroupChoice_Choice()                {}
func (*APIGroupChoice_VesIoVirtualSitesWrite) isAPIGroupChoice_Choice()               {}
func (*APIGroupChoice_VesIoVoltShareRead) isAPIGroupChoice_Choice()                   {}
func (*APIGroupChoice_VesIoVoltShareWrite) isAPIGroupChoice_Choice()                  {}
func (*APIGroupChoice_VesIoWebAccessRead) isAPIGroupChoice_Choice()                   {}
func (*APIGroupChoice_VesIoWebAccessWrite) isAPIGroupChoice_Choice()                  {}

func (m *APIGroupChoice) GetChoice() isAPIGroupChoice_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *APIGroupChoice) GetInfrastructureDemoAccessRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_InfrastructureDemoAccessRead); ok {
		return x.InfrastructureDemoAccessRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoBillingRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoBillingRead); ok {
		return x.VesIoBillingRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoBillingWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoBillingWrite); ok {
		return x.VesIoBillingWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoGeneralRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoGeneralRead); ok {
		return x.VesIoGeneralRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoGeneralWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoGeneralWrite); ok {
		return x.VesIoGeneralWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoIaasCaasRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoIaasCaasRead); ok {
		return x.VesIoIaasCaasRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoIaasCaasWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoIaasCaasWrite); ok {
		return x.VesIoIaasCaasWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoInfraMonitorRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoInfraMonitorRead); ok {
		return x.VesIoInfraMonitorRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoInfraMonitorWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoInfraMonitorWrite); ok {
		return x.VesIoInfraMonitorWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoInfrastructureRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoInfrastructureRead); ok {
		return x.VesIoInfrastructureRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoInfrastructureWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoInfrastructureWrite); ok {
		return x.VesIoInfrastructureWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoInternalRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoInternalRead); ok {
		return x.VesIoInternalRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoInternalWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoInternalWrite); ok {
		return x.VesIoInternalWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoK8SRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoK8SRead); ok {
		return x.VesIoK8SRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoK8SWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoK8SWrite); ok {
		return x.VesIoK8SWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoLabelsRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoLabelsRead); ok {
		return x.VesIoLabelsRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoLabelsWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoLabelsWrite); ok {
		return x.VesIoLabelsWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoLocalK8SWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoLocalK8SWrite); ok {
		return x.VesIoLocalK8SWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoMonitorRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoMonitorRead); ok {
		return x.VesIoMonitorRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoMonitorWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoMonitorWrite); ok {
		return x.VesIoMonitorWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoNetworkRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoNetworkRead); ok {
		return x.VesIoNetworkRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoNetworkWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoNetworkWrite); ok {
		return x.VesIoNetworkWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoProxyMonitorRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoProxyMonitorRead); ok {
		return x.VesIoProxyMonitorRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoProxyMonitorWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoProxyMonitorWrite); ok {
		return x.VesIoProxyMonitorWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoProxyRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoProxyRead); ok {
		return x.VesIoProxyRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoProxySecurityRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoProxySecurityRead); ok {
		return x.VesIoProxySecurityRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoProxySecurityWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoProxySecurityWrite); ok {
		return x.VesIoProxySecurityWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoProxyWafRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoProxyWafRead); ok {
		return x.VesIoProxyWafRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoProxyWafWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoProxyWafWrite); ok {
		return x.VesIoProxyWafWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoProxyWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoProxyWrite); ok {
		return x.VesIoProxyWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoSecretsRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoSecretsRead); ok {
		return x.VesIoSecretsRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoSecretsWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoSecretsWrite); ok {
		return x.VesIoSecretsWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoSystemSrv6NetworkSliceReadWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoSystemSrv6NetworkSliceReadWrite); ok {
		return x.VesIoSystemSrv6NetworkSliceReadWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoSystemVirtualNetworkReadWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoSystemVirtualNetworkReadWrite); ok {
		return x.VesIoSystemVirtualNetworkReadWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoUamAdminRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoUamAdminRead); ok {
		return x.VesIoUamAdminRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoUamAdminWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoUamAdminWrite); ok {
		return x.VesIoUamAdminWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoUamRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoUamRead); ok {
		return x.VesIoUamRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoUamWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoUamWrite); ok {
		return x.VesIoUamWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoVirtualSitesRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoVirtualSitesRead); ok {
		return x.VesIoVirtualSitesRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoVirtualSitesWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoVirtualSitesWrite); ok {
		return x.VesIoVirtualSitesWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoVoltShareRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoVoltShareRead); ok {
		return x.VesIoVoltShareRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoVoltShareWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoVoltShareWrite); ok {
		return x.VesIoVoltShareWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoWebAccessRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoWebAccessRead); ok {
		return x.VesIoWebAccessRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoWebAccessWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoWebAccessWrite); ok {
		return x.VesIoWebAccessWrite
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*APIGroupChoice) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _APIGroupChoice_OneofMarshaler, _APIGroupChoice_OneofUnmarshaler, _APIGroupChoice_OneofSizer, []interface{}{
		(*APIGroupChoice_InfrastructureDemoAccessRead)(nil),
		(*APIGroupChoice_VesIoBillingRead)(nil),
		(*APIGroupChoice_VesIoBillingWrite)(nil),
		(*APIGroupChoice_VesIoGeneralRead)(nil),
		(*APIGroupChoice_VesIoGeneralWrite)(nil),
		(*APIGroupChoice_VesIoIaasCaasRead)(nil),
		(*APIGroupChoice_VesIoIaasCaasWrite)(nil),
		(*APIGroupChoice_VesIoInfraMonitorRead)(nil),
		(*APIGroupChoice_VesIoInfraMonitorWrite)(nil),
		(*APIGroupChoice_VesIoInfrastructureRead)(nil),
		(*APIGroupChoice_VesIoInfrastructureWrite)(nil),
		(*APIGroupChoice_VesIoInternalRead)(nil),
		(*APIGroupChoice_VesIoInternalWrite)(nil),
		(*APIGroupChoice_VesIoK8SRead)(nil),
		(*APIGroupChoice_VesIoK8SWrite)(nil),
		(*APIGroupChoice_VesIoLabelsRead)(nil),
		(*APIGroupChoice_VesIoLabelsWrite)(nil),
		(*APIGroupChoice_VesIoLocalK8SWrite)(nil),
		(*APIGroupChoice_VesIoMonitorRead)(nil),
		(*APIGroupChoice_VesIoMonitorWrite)(nil),
		(*APIGroupChoice_VesIoNetworkRead)(nil),
		(*APIGroupChoice_VesIoNetworkWrite)(nil),
		(*APIGroupChoice_VesIoProxyMonitorRead)(nil),
		(*APIGroupChoice_VesIoProxyMonitorWrite)(nil),
		(*APIGroupChoice_VesIoProxyRead)(nil),
		(*APIGroupChoice_VesIoProxySecurityRead)(nil),
		(*APIGroupChoice_VesIoProxySecurityWrite)(nil),
		(*APIGroupChoice_VesIoProxyWafRead)(nil),
		(*APIGroupChoice_VesIoProxyWafWrite)(nil),
		(*APIGroupChoice_VesIoProxyWrite)(nil),
		(*APIGroupChoice_VesIoSecretsRead)(nil),
		(*APIGroupChoice_VesIoSecretsWrite)(nil),
		(*APIGroupChoice_VesIoSystemSrv6NetworkSliceReadWrite)(nil),
		(*APIGroupChoice_VesIoSystemVirtualNetworkReadWrite)(nil),
		(*APIGroupChoice_VesIoUamAdminRead)(nil),
		(*APIGroupChoice_VesIoUamAdminWrite)(nil),
		(*APIGroupChoice_VesIoUamRead)(nil),
		(*APIGroupChoice_VesIoUamWrite)(nil),
		(*APIGroupChoice_VesIoVirtualSitesRead)(nil),
		(*APIGroupChoice_VesIoVirtualSitesWrite)(nil),
		(*APIGroupChoice_VesIoVoltShareRead)(nil),
		(*APIGroupChoice_VesIoVoltShareWrite)(nil),
		(*APIGroupChoice_VesIoWebAccessRead)(nil),
		(*APIGroupChoice_VesIoWebAccessWrite)(nil),
	}
}

func _APIGroupChoice_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*APIGroupChoice)
	// choice
	switch x := m.Choice.(type) {
	case *APIGroupChoice_InfrastructureDemoAccessRead:
		t := uint64(0)
		if x.InfrastructureDemoAccessRead {
			t = 1
		}
		_ = b.EncodeVarint(1<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoBillingRead:
		t := uint64(0)
		if x.VesIoBillingRead {
			t = 1
		}
		_ = b.EncodeVarint(2<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoBillingWrite:
		t := uint64(0)
		if x.VesIoBillingWrite {
			t = 1
		}
		_ = b.EncodeVarint(3<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoGeneralRead:
		t := uint64(0)
		if x.VesIoGeneralRead {
			t = 1
		}
		_ = b.EncodeVarint(4<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoGeneralWrite:
		t := uint64(0)
		if x.VesIoGeneralWrite {
			t = 1
		}
		_ = b.EncodeVarint(5<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoIaasCaasRead:
		t := uint64(0)
		if x.VesIoIaasCaasRead {
			t = 1
		}
		_ = b.EncodeVarint(6<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoIaasCaasWrite:
		t := uint64(0)
		if x.VesIoIaasCaasWrite {
			t = 1
		}
		_ = b.EncodeVarint(7<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoInfraMonitorRead:
		t := uint64(0)
		if x.VesIoInfraMonitorRead {
			t = 1
		}
		_ = b.EncodeVarint(8<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoInfraMonitorWrite:
		t := uint64(0)
		if x.VesIoInfraMonitorWrite {
			t = 1
		}
		_ = b.EncodeVarint(9<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoInfrastructureRead:
		t := uint64(0)
		if x.VesIoInfrastructureRead {
			t = 1
		}
		_ = b.EncodeVarint(10<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoInfrastructureWrite:
		t := uint64(0)
		if x.VesIoInfrastructureWrite {
			t = 1
		}
		_ = b.EncodeVarint(11<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoInternalRead:
		t := uint64(0)
		if x.VesIoInternalRead {
			t = 1
		}
		_ = b.EncodeVarint(12<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoInternalWrite:
		t := uint64(0)
		if x.VesIoInternalWrite {
			t = 1
		}
		_ = b.EncodeVarint(13<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoK8SRead:
		t := uint64(0)
		if x.VesIoK8SRead {
			t = 1
		}
		_ = b.EncodeVarint(14<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoK8SWrite:
		t := uint64(0)
		if x.VesIoK8SWrite {
			t = 1
		}
		_ = b.EncodeVarint(15<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoLabelsRead:
		t := uint64(0)
		if x.VesIoLabelsRead {
			t = 1
		}
		_ = b.EncodeVarint(16<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoLabelsWrite:
		t := uint64(0)
		if x.VesIoLabelsWrite {
			t = 1
		}
		_ = b.EncodeVarint(17<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoLocalK8SWrite:
		t := uint64(0)
		if x.VesIoLocalK8SWrite {
			t = 1
		}
		_ = b.EncodeVarint(18<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoMonitorRead:
		t := uint64(0)
		if x.VesIoMonitorRead {
			t = 1
		}
		_ = b.EncodeVarint(19<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoMonitorWrite:
		t := uint64(0)
		if x.VesIoMonitorWrite {
			t = 1
		}
		_ = b.EncodeVarint(20<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoNetworkRead:
		t := uint64(0)
		if x.VesIoNetworkRead {
			t = 1
		}
		_ = b.EncodeVarint(21<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoNetworkWrite:
		t := uint64(0)
		if x.VesIoNetworkWrite {
			t = 1
		}
		_ = b.EncodeVarint(22<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoProxyMonitorRead:
		t := uint64(0)
		if x.VesIoProxyMonitorRead {
			t = 1
		}
		_ = b.EncodeVarint(23<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoProxyMonitorWrite:
		t := uint64(0)
		if x.VesIoProxyMonitorWrite {
			t = 1
		}
		_ = b.EncodeVarint(24<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoProxyRead:
		t := uint64(0)
		if x.VesIoProxyRead {
			t = 1
		}
		_ = b.EncodeVarint(25<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoProxySecurityRead:
		t := uint64(0)
		if x.VesIoProxySecurityRead {
			t = 1
		}
		_ = b.EncodeVarint(26<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoProxySecurityWrite:
		t := uint64(0)
		if x.VesIoProxySecurityWrite {
			t = 1
		}
		_ = b.EncodeVarint(27<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoProxyWafRead:
		t := uint64(0)
		if x.VesIoProxyWafRead {
			t = 1
		}
		_ = b.EncodeVarint(28<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoProxyWafWrite:
		t := uint64(0)
		if x.VesIoProxyWafWrite {
			t = 1
		}
		_ = b.EncodeVarint(29<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoProxyWrite:
		t := uint64(0)
		if x.VesIoProxyWrite {
			t = 1
		}
		_ = b.EncodeVarint(30<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoSecretsRead:
		t := uint64(0)
		if x.VesIoSecretsRead {
			t = 1
		}
		_ = b.EncodeVarint(31<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoSecretsWrite:
		t := uint64(0)
		if x.VesIoSecretsWrite {
			t = 1
		}
		_ = b.EncodeVarint(32<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoSystemSrv6NetworkSliceReadWrite:
		t := uint64(0)
		if x.VesIoSystemSrv6NetworkSliceReadWrite {
			t = 1
		}
		_ = b.EncodeVarint(33<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoSystemVirtualNetworkReadWrite:
		t := uint64(0)
		if x.VesIoSystemVirtualNetworkReadWrite {
			t = 1
		}
		_ = b.EncodeVarint(34<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoUamAdminRead:
		t := uint64(0)
		if x.VesIoUamAdminRead {
			t = 1
		}
		_ = b.EncodeVarint(35<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoUamAdminWrite:
		t := uint64(0)
		if x.VesIoUamAdminWrite {
			t = 1
		}
		_ = b.EncodeVarint(36<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoUamRead:
		t := uint64(0)
		if x.VesIoUamRead {
			t = 1
		}
		_ = b.EncodeVarint(37<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoUamWrite:
		t := uint64(0)
		if x.VesIoUamWrite {
			t = 1
		}
		_ = b.EncodeVarint(38<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoVirtualSitesRead:
		t := uint64(0)
		if x.VesIoVirtualSitesRead {
			t = 1
		}
		_ = b.EncodeVarint(39<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoVirtualSitesWrite:
		t := uint64(0)
		if x.VesIoVirtualSitesWrite {
			t = 1
		}
		_ = b.EncodeVarint(40<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoVoltShareRead:
		t := uint64(0)
		if x.VesIoVoltShareRead {
			t = 1
		}
		_ = b.EncodeVarint(41<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoVoltShareWrite:
		t := uint64(0)
		if x.VesIoVoltShareWrite {
			t = 1
		}
		_ = b.EncodeVarint(42<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoWebAccessRead:
		t := uint64(0)
		if x.VesIoWebAccessRead {
			t = 1
		}
		_ = b.EncodeVarint(43<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case *APIGroupChoice_VesIoWebAccessWrite:
		t := uint64(0)
		if x.VesIoWebAccessWrite {
			t = 1
		}
		_ = b.EncodeVarint(44<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("APIGroupChoice.Choice has unexpected type %T", x)
	}
	return nil
}

func _APIGroupChoice_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*APIGroupChoice)
	switch tag {
	case 1: // choice.infrastructure_demo_access_read
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_InfrastructureDemoAccessRead{x != 0}
		return true, err
	case 2: // choice.ves_io_billing_read
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoBillingRead{x != 0}
		return true, err
	case 3: // choice.ves_io_billing_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoBillingWrite{x != 0}
		return true, err
	case 4: // choice.ves_io_general_read
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoGeneralRead{x != 0}
		return true, err
	case 5: // choice.ves_io_general_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoGeneralWrite{x != 0}
		return true, err
	case 6: // choice.ves_io_iaas_caas_read
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoIaasCaasRead{x != 0}
		return true, err
	case 7: // choice.ves_io_iaas_caas_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoIaasCaasWrite{x != 0}
		return true, err
	case 8: // choice.ves_io_infra_monitor_read
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoInfraMonitorRead{x != 0}
		return true, err
	case 9: // choice.ves_io_infra_monitor_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoInfraMonitorWrite{x != 0}
		return true, err
	case 10: // choice.ves_io_infrastructure_read
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoInfrastructureRead{x != 0}
		return true, err
	case 11: // choice.ves_io_infrastructure_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoInfrastructureWrite{x != 0}
		return true, err
	case 12: // choice.ves_io_internal_read
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoInternalRead{x != 0}
		return true, err
	case 13: // choice.ves_io_internal_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoInternalWrite{x != 0}
		return true, err
	case 14: // choice.ves_io_k8s_read
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoK8SRead{x != 0}
		return true, err
	case 15: // choice.ves_io_k8s_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoK8SWrite{x != 0}
		return true, err
	case 16: // choice.ves_io_labels_read
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoLabelsRead{x != 0}
		return true, err
	case 17: // choice.ves_io_labels_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoLabelsWrite{x != 0}
		return true, err
	case 18: // choice.ves_io_local_k8s_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoLocalK8SWrite{x != 0}
		return true, err
	case 19: // choice.ves_io_monitor_read
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoMonitorRead{x != 0}
		return true, err
	case 20: // choice.ves_io_monitor_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoMonitorWrite{x != 0}
		return true, err
	case 21: // choice.ves_io_network_read
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoNetworkRead{x != 0}
		return true, err
	case 22: // choice.ves_io_network_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoNetworkWrite{x != 0}
		return true, err
	case 23: // choice.ves_io_proxy_monitor_read
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoProxyMonitorRead{x != 0}
		return true, err
	case 24: // choice.ves_io_proxy_monitor_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoProxyMonitorWrite{x != 0}
		return true, err
	case 25: // choice.ves_io_proxy_read
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoProxyRead{x != 0}
		return true, err
	case 26: // choice.ves_io_proxy_security_read
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoProxySecurityRead{x != 0}
		return true, err
	case 27: // choice.ves_io_proxy_security_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoProxySecurityWrite{x != 0}
		return true, err
	case 28: // choice.ves_io_proxy_waf_read
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoProxyWafRead{x != 0}
		return true, err
	case 29: // choice.ves_io_proxy_waf_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoProxyWafWrite{x != 0}
		return true, err
	case 30: // choice.ves_io_proxy_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoProxyWrite{x != 0}
		return true, err
	case 31: // choice.ves_io_secrets_read
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoSecretsRead{x != 0}
		return true, err
	case 32: // choice.ves_io_secrets_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoSecretsWrite{x != 0}
		return true, err
	case 33: // choice.ves_io_system_srv6_network_slice_read_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoSystemSrv6NetworkSliceReadWrite{x != 0}
		return true, err
	case 34: // choice.ves_io_system_virtual_network_read_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoSystemVirtualNetworkReadWrite{x != 0}
		return true, err
	case 35: // choice.ves_io_uam_admin_read
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoUamAdminRead{x != 0}
		return true, err
	case 36: // choice.ves_io_uam_admin_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoUamAdminWrite{x != 0}
		return true, err
	case 37: // choice.ves_io_uam_read
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoUamRead{x != 0}
		return true, err
	case 38: // choice.ves_io_uam_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoUamWrite{x != 0}
		return true, err
	case 39: // choice.ves_io_virtual_sites_read
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoVirtualSitesRead{x != 0}
		return true, err
	case 40: // choice.ves_io_virtual_sites_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoVirtualSitesWrite{x != 0}
		return true, err
	case 41: // choice.ves_io_volt_share_read
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoVoltShareRead{x != 0}
		return true, err
	case 42: // choice.ves_io_volt_share_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoVoltShareWrite{x != 0}
		return true, err
	case 43: // choice.ves_io_web_access_read
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoWebAccessRead{x != 0}
		return true, err
	case 44: // choice.ves_io_web_access_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &APIGroupChoice_VesIoWebAccessWrite{x != 0}
		return true, err
	default:
		return false, nil
	}
}

func _APIGroupChoice_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*APIGroupChoice)
	// choice
	switch x := m.Choice.(type) {
	case *APIGroupChoice_InfrastructureDemoAccessRead:
		n += proto.SizeVarint(1<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoBillingRead:
		n += proto.SizeVarint(2<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoBillingWrite:
		n += proto.SizeVarint(3<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoGeneralRead:
		n += proto.SizeVarint(4<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoGeneralWrite:
		n += proto.SizeVarint(5<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoIaasCaasRead:
		n += proto.SizeVarint(6<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoIaasCaasWrite:
		n += proto.SizeVarint(7<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoInfraMonitorRead:
		n += proto.SizeVarint(8<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoInfraMonitorWrite:
		n += proto.SizeVarint(9<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoInfrastructureRead:
		n += proto.SizeVarint(10<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoInfrastructureWrite:
		n += proto.SizeVarint(11<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoInternalRead:
		n += proto.SizeVarint(12<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoInternalWrite:
		n += proto.SizeVarint(13<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoK8SRead:
		n += proto.SizeVarint(14<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoK8SWrite:
		n += proto.SizeVarint(15<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoLabelsRead:
		n += proto.SizeVarint(16<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoLabelsWrite:
		n += proto.SizeVarint(17<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoLocalK8SWrite:
		n += proto.SizeVarint(18<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoMonitorRead:
		n += proto.SizeVarint(19<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoMonitorWrite:
		n += proto.SizeVarint(20<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoNetworkRead:
		n += proto.SizeVarint(21<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoNetworkWrite:
		n += proto.SizeVarint(22<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoProxyMonitorRead:
		n += proto.SizeVarint(23<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoProxyMonitorWrite:
		n += proto.SizeVarint(24<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoProxyRead:
		n += proto.SizeVarint(25<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoProxySecurityRead:
		n += proto.SizeVarint(26<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoProxySecurityWrite:
		n += proto.SizeVarint(27<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoProxyWafRead:
		n += proto.SizeVarint(28<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoProxyWafWrite:
		n += proto.SizeVarint(29<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoProxyWrite:
		n += proto.SizeVarint(30<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoSecretsRead:
		n += proto.SizeVarint(31<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoSecretsWrite:
		n += proto.SizeVarint(32<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoSystemSrv6NetworkSliceReadWrite:
		n += proto.SizeVarint(33<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoSystemVirtualNetworkReadWrite:
		n += proto.SizeVarint(34<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoUamAdminRead:
		n += proto.SizeVarint(35<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoUamAdminWrite:
		n += proto.SizeVarint(36<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoUamRead:
		n += proto.SizeVarint(37<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoUamWrite:
		n += proto.SizeVarint(38<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoVirtualSitesRead:
		n += proto.SizeVarint(39<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoVirtualSitesWrite:
		n += proto.SizeVarint(40<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoVoltShareRead:
		n += proto.SizeVarint(41<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoVoltShareWrite:
		n += proto.SizeVarint(42<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoWebAccessRead:
		n += proto.SizeVarint(43<<3 | proto.WireVarint)
		n += 1
	case *APIGroupChoice_VesIoWebAccessWrite:
		n += proto.SizeVarint(44<<3 | proto.WireVarint)
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*APIGroupChoice)(nil), "ves.io.schema.vesenv.APIGroupChoice")
}
func (this *APIGroupChoice) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice)
	if !ok {
		that2, ok := that.(APIGroupChoice)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.Choice == nil {
		if this.Choice != nil {
			return false
		}
	} else if this.Choice == nil {
		return false
	} else if !this.Choice.Equal(that1.Choice) {
		return false
	}
	return true
}
func (this *APIGroupChoice_InfrastructureDemoAccessRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_InfrastructureDemoAccessRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_InfrastructureDemoAccessRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.InfrastructureDemoAccessRead != that1.InfrastructureDemoAccessRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoBillingRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoBillingRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoBillingRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoBillingRead != that1.VesIoBillingRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoBillingWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoBillingWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoBillingWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoBillingWrite != that1.VesIoBillingWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoGeneralRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoGeneralRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoGeneralRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoGeneralRead != that1.VesIoGeneralRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoGeneralWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoGeneralWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoGeneralWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoGeneralWrite != that1.VesIoGeneralWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoIaasCaasRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoIaasCaasRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoIaasCaasRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoIaasCaasRead != that1.VesIoIaasCaasRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoIaasCaasWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoIaasCaasWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoIaasCaasWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoIaasCaasWrite != that1.VesIoIaasCaasWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoInfraMonitorRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoInfraMonitorRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoInfraMonitorRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoInfraMonitorRead != that1.VesIoInfraMonitorRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoInfraMonitorWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoInfraMonitorWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoInfraMonitorWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoInfraMonitorWrite != that1.VesIoInfraMonitorWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoInfrastructureRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoInfrastructureRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoInfrastructureRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoInfrastructureRead != that1.VesIoInfrastructureRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoInfrastructureWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoInfrastructureWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoInfrastructureWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoInfrastructureWrite != that1.VesIoInfrastructureWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoInternalRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoInternalRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoInternalRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoInternalRead != that1.VesIoInternalRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoInternalWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoInternalWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoInternalWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoInternalWrite != that1.VesIoInternalWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoK8SRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoK8SRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoK8SRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoK8SRead != that1.VesIoK8SRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoK8SWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoK8SWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoK8SWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoK8SWrite != that1.VesIoK8SWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoLabelsRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoLabelsRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoLabelsRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoLabelsRead != that1.VesIoLabelsRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoLabelsWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoLabelsWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoLabelsWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoLabelsWrite != that1.VesIoLabelsWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoLocalK8SWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoLocalK8SWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoLocalK8SWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoLocalK8SWrite != that1.VesIoLocalK8SWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoMonitorRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoMonitorRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoMonitorRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoMonitorRead != that1.VesIoMonitorRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoMonitorWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoMonitorWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoMonitorWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoMonitorWrite != that1.VesIoMonitorWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoNetworkRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoNetworkRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoNetworkRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoNetworkRead != that1.VesIoNetworkRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoNetworkWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoNetworkWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoNetworkWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoNetworkWrite != that1.VesIoNetworkWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoProxyMonitorRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoProxyMonitorRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoProxyMonitorRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoProxyMonitorRead != that1.VesIoProxyMonitorRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoProxyMonitorWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoProxyMonitorWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoProxyMonitorWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoProxyMonitorWrite != that1.VesIoProxyMonitorWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoProxyRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoProxyRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoProxyRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoProxyRead != that1.VesIoProxyRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoProxySecurityRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoProxySecurityRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoProxySecurityRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoProxySecurityRead != that1.VesIoProxySecurityRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoProxySecurityWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoProxySecurityWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoProxySecurityWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoProxySecurityWrite != that1.VesIoProxySecurityWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoProxyWafRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoProxyWafRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoProxyWafRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoProxyWafRead != that1.VesIoProxyWafRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoProxyWafWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoProxyWafWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoProxyWafWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoProxyWafWrite != that1.VesIoProxyWafWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoProxyWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoProxyWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoProxyWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoProxyWrite != that1.VesIoProxyWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoSecretsRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoSecretsRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoSecretsRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoSecretsRead != that1.VesIoSecretsRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoSecretsWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoSecretsWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoSecretsWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoSecretsWrite != that1.VesIoSecretsWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoSystemSrv6NetworkSliceReadWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoSystemSrv6NetworkSliceReadWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoSystemSrv6NetworkSliceReadWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoSystemSrv6NetworkSliceReadWrite != that1.VesIoSystemSrv6NetworkSliceReadWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoSystemVirtualNetworkReadWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoSystemVirtualNetworkReadWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoSystemVirtualNetworkReadWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoSystemVirtualNetworkReadWrite != that1.VesIoSystemVirtualNetworkReadWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoUamAdminRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoUamAdminRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoUamAdminRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoUamAdminRead != that1.VesIoUamAdminRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoUamAdminWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoUamAdminWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoUamAdminWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoUamAdminWrite != that1.VesIoUamAdminWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoUamRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoUamRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoUamRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoUamRead != that1.VesIoUamRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoUamWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoUamWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoUamWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoUamWrite != that1.VesIoUamWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoVirtualSitesRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoVirtualSitesRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoVirtualSitesRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoVirtualSitesRead != that1.VesIoVirtualSitesRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoVirtualSitesWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoVirtualSitesWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoVirtualSitesWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoVirtualSitesWrite != that1.VesIoVirtualSitesWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoVoltShareRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoVoltShareRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoVoltShareRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoVoltShareRead != that1.VesIoVoltShareRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoVoltShareWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoVoltShareWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoVoltShareWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoVoltShareWrite != that1.VesIoVoltShareWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoWebAccessRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoWebAccessRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoWebAccessRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoWebAccessRead != that1.VesIoWebAccessRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoWebAccessWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoWebAccessWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoWebAccessWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoWebAccessWrite != that1.VesIoWebAccessWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 48)
	s = append(s, "&vesenv.APIGroupChoice{")
	if this.Choice != nil {
		s = append(s, "Choice: "+fmt.Sprintf("%#v", this.Choice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *APIGroupChoice_InfrastructureDemoAccessRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_InfrastructureDemoAccessRead{` +
		`InfrastructureDemoAccessRead:` + fmt.Sprintf("%#v", this.InfrastructureDemoAccessRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoBillingRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoBillingRead{` +
		`VesIoBillingRead:` + fmt.Sprintf("%#v", this.VesIoBillingRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoBillingWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoBillingWrite{` +
		`VesIoBillingWrite:` + fmt.Sprintf("%#v", this.VesIoBillingWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoGeneralRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoGeneralRead{` +
		`VesIoGeneralRead:` + fmt.Sprintf("%#v", this.VesIoGeneralRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoGeneralWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoGeneralWrite{` +
		`VesIoGeneralWrite:` + fmt.Sprintf("%#v", this.VesIoGeneralWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoIaasCaasRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoIaasCaasRead{` +
		`VesIoIaasCaasRead:` + fmt.Sprintf("%#v", this.VesIoIaasCaasRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoIaasCaasWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoIaasCaasWrite{` +
		`VesIoIaasCaasWrite:` + fmt.Sprintf("%#v", this.VesIoIaasCaasWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoInfraMonitorRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoInfraMonitorRead{` +
		`VesIoInfraMonitorRead:` + fmt.Sprintf("%#v", this.VesIoInfraMonitorRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoInfraMonitorWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoInfraMonitorWrite{` +
		`VesIoInfraMonitorWrite:` + fmt.Sprintf("%#v", this.VesIoInfraMonitorWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoInfrastructureRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoInfrastructureRead{` +
		`VesIoInfrastructureRead:` + fmt.Sprintf("%#v", this.VesIoInfrastructureRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoInfrastructureWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoInfrastructureWrite{` +
		`VesIoInfrastructureWrite:` + fmt.Sprintf("%#v", this.VesIoInfrastructureWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoInternalRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoInternalRead{` +
		`VesIoInternalRead:` + fmt.Sprintf("%#v", this.VesIoInternalRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoInternalWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoInternalWrite{` +
		`VesIoInternalWrite:` + fmt.Sprintf("%#v", this.VesIoInternalWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoK8SRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoK8SRead{` +
		`VesIoK8SRead:` + fmt.Sprintf("%#v", this.VesIoK8SRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoK8SWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoK8SWrite{` +
		`VesIoK8SWrite:` + fmt.Sprintf("%#v", this.VesIoK8SWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoLabelsRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoLabelsRead{` +
		`VesIoLabelsRead:` + fmt.Sprintf("%#v", this.VesIoLabelsRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoLabelsWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoLabelsWrite{` +
		`VesIoLabelsWrite:` + fmt.Sprintf("%#v", this.VesIoLabelsWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoLocalK8SWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoLocalK8SWrite{` +
		`VesIoLocalK8SWrite:` + fmt.Sprintf("%#v", this.VesIoLocalK8SWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoMonitorRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoMonitorRead{` +
		`VesIoMonitorRead:` + fmt.Sprintf("%#v", this.VesIoMonitorRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoMonitorWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoMonitorWrite{` +
		`VesIoMonitorWrite:` + fmt.Sprintf("%#v", this.VesIoMonitorWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoNetworkRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoNetworkRead{` +
		`VesIoNetworkRead:` + fmt.Sprintf("%#v", this.VesIoNetworkRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoNetworkWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoNetworkWrite{` +
		`VesIoNetworkWrite:` + fmt.Sprintf("%#v", this.VesIoNetworkWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoProxyMonitorRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoProxyMonitorRead{` +
		`VesIoProxyMonitorRead:` + fmt.Sprintf("%#v", this.VesIoProxyMonitorRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoProxyMonitorWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoProxyMonitorWrite{` +
		`VesIoProxyMonitorWrite:` + fmt.Sprintf("%#v", this.VesIoProxyMonitorWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoProxyRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoProxyRead{` +
		`VesIoProxyRead:` + fmt.Sprintf("%#v", this.VesIoProxyRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoProxySecurityRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoProxySecurityRead{` +
		`VesIoProxySecurityRead:` + fmt.Sprintf("%#v", this.VesIoProxySecurityRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoProxySecurityWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoProxySecurityWrite{` +
		`VesIoProxySecurityWrite:` + fmt.Sprintf("%#v", this.VesIoProxySecurityWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoProxyWafRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoProxyWafRead{` +
		`VesIoProxyWafRead:` + fmt.Sprintf("%#v", this.VesIoProxyWafRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoProxyWafWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoProxyWafWrite{` +
		`VesIoProxyWafWrite:` + fmt.Sprintf("%#v", this.VesIoProxyWafWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoProxyWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoProxyWrite{` +
		`VesIoProxyWrite:` + fmt.Sprintf("%#v", this.VesIoProxyWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoSecretsRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoSecretsRead{` +
		`VesIoSecretsRead:` + fmt.Sprintf("%#v", this.VesIoSecretsRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoSecretsWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoSecretsWrite{` +
		`VesIoSecretsWrite:` + fmt.Sprintf("%#v", this.VesIoSecretsWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoSystemSrv6NetworkSliceReadWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoSystemSrv6NetworkSliceReadWrite{` +
		`VesIoSystemSrv6NetworkSliceReadWrite:` + fmt.Sprintf("%#v", this.VesIoSystemSrv6NetworkSliceReadWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoSystemVirtualNetworkReadWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoSystemVirtualNetworkReadWrite{` +
		`VesIoSystemVirtualNetworkReadWrite:` + fmt.Sprintf("%#v", this.VesIoSystemVirtualNetworkReadWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoUamAdminRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoUamAdminRead{` +
		`VesIoUamAdminRead:` + fmt.Sprintf("%#v", this.VesIoUamAdminRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoUamAdminWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoUamAdminWrite{` +
		`VesIoUamAdminWrite:` + fmt.Sprintf("%#v", this.VesIoUamAdminWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoUamRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoUamRead{` +
		`VesIoUamRead:` + fmt.Sprintf("%#v", this.VesIoUamRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoUamWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoUamWrite{` +
		`VesIoUamWrite:` + fmt.Sprintf("%#v", this.VesIoUamWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoVirtualSitesRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoVirtualSitesRead{` +
		`VesIoVirtualSitesRead:` + fmt.Sprintf("%#v", this.VesIoVirtualSitesRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoVirtualSitesWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoVirtualSitesWrite{` +
		`VesIoVirtualSitesWrite:` + fmt.Sprintf("%#v", this.VesIoVirtualSitesWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoVoltShareRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoVoltShareRead{` +
		`VesIoVoltShareRead:` + fmt.Sprintf("%#v", this.VesIoVoltShareRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoVoltShareWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoVoltShareWrite{` +
		`VesIoVoltShareWrite:` + fmt.Sprintf("%#v", this.VesIoVoltShareWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoWebAccessRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoWebAccessRead{` +
		`VesIoWebAccessRead:` + fmt.Sprintf("%#v", this.VesIoWebAccessRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoWebAccessWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoWebAccessWrite{` +
		`VesIoWebAccessWrite:` + fmt.Sprintf("%#v", this.VesIoWebAccessWrite) + `}`}, ", ")
	return s
}
func valueToGoStringAllApiGroups(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *APIGroupChoice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *APIGroupChoice) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Choice != nil {
		nn1, err := m.Choice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn1
	}
	return i, nil
}

func (m *APIGroupChoice_InfrastructureDemoAccessRead) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x8
	i++
	if m.InfrastructureDemoAccessRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoBillingRead) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x10
	i++
	if m.VesIoBillingRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoBillingWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x18
	i++
	if m.VesIoBillingWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoGeneralRead) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x20
	i++
	if m.VesIoGeneralRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoGeneralWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x28
	i++
	if m.VesIoGeneralWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoIaasCaasRead) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x30
	i++
	if m.VesIoIaasCaasRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoIaasCaasWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x38
	i++
	if m.VesIoIaasCaasWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoInfraMonitorRead) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x40
	i++
	if m.VesIoInfraMonitorRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoInfraMonitorWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x48
	i++
	if m.VesIoInfraMonitorWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoInfrastructureRead) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x50
	i++
	if m.VesIoInfrastructureRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoInfrastructureWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x58
	i++
	if m.VesIoInfrastructureWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoInternalRead) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x60
	i++
	if m.VesIoInternalRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoInternalWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x68
	i++
	if m.VesIoInternalWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoK8SRead) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x70
	i++
	if m.VesIoK8SRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoK8SWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x78
	i++
	if m.VesIoK8SWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoLabelsRead) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x80
	i++
	dAtA[i] = 0x1
	i++
	if m.VesIoLabelsRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoLabelsWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x88
	i++
	dAtA[i] = 0x1
	i++
	if m.VesIoLabelsWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoLocalK8SWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x90
	i++
	dAtA[i] = 0x1
	i++
	if m.VesIoLocalK8SWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoMonitorRead) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x98
	i++
	dAtA[i] = 0x1
	i++
	if m.VesIoMonitorRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoMonitorWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xa0
	i++
	dAtA[i] = 0x1
	i++
	if m.VesIoMonitorWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoNetworkRead) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xa8
	i++
	dAtA[i] = 0x1
	i++
	if m.VesIoNetworkRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoNetworkWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xb0
	i++
	dAtA[i] = 0x1
	i++
	if m.VesIoNetworkWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoProxyMonitorRead) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xb8
	i++
	dAtA[i] = 0x1
	i++
	if m.VesIoProxyMonitorRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoProxyMonitorWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xc0
	i++
	dAtA[i] = 0x1
	i++
	if m.VesIoProxyMonitorWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoProxyRead) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xc8
	i++
	dAtA[i] = 0x1
	i++
	if m.VesIoProxyRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoProxySecurityRead) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xd0
	i++
	dAtA[i] = 0x1
	i++
	if m.VesIoProxySecurityRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoProxySecurityWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xd8
	i++
	dAtA[i] = 0x1
	i++
	if m.VesIoProxySecurityWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoProxyWafRead) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xe0
	i++
	dAtA[i] = 0x1
	i++
	if m.VesIoProxyWafRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoProxyWafWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xe8
	i++
	dAtA[i] = 0x1
	i++
	if m.VesIoProxyWafWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoProxyWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xf0
	i++
	dAtA[i] = 0x1
	i++
	if m.VesIoProxyWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoSecretsRead) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xf8
	i++
	dAtA[i] = 0x1
	i++
	if m.VesIoSecretsRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoSecretsWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x80
	i++
	dAtA[i] = 0x2
	i++
	if m.VesIoSecretsWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoSystemSrv6NetworkSliceReadWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x88
	i++
	dAtA[i] = 0x2
	i++
	if m.VesIoSystemSrv6NetworkSliceReadWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoSystemVirtualNetworkReadWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x90
	i++
	dAtA[i] = 0x2
	i++
	if m.VesIoSystemVirtualNetworkReadWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoUamAdminRead) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x98
	i++
	dAtA[i] = 0x2
	i++
	if m.VesIoUamAdminRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoUamAdminWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xa0
	i++
	dAtA[i] = 0x2
	i++
	if m.VesIoUamAdminWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoUamRead) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xa8
	i++
	dAtA[i] = 0x2
	i++
	if m.VesIoUamRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoUamWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xb0
	i++
	dAtA[i] = 0x2
	i++
	if m.VesIoUamWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoVirtualSitesRead) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xb8
	i++
	dAtA[i] = 0x2
	i++
	if m.VesIoVirtualSitesRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoVirtualSitesWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xc0
	i++
	dAtA[i] = 0x2
	i++
	if m.VesIoVirtualSitesWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoVoltShareRead) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xc8
	i++
	dAtA[i] = 0x2
	i++
	if m.VesIoVoltShareRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoVoltShareWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xd0
	i++
	dAtA[i] = 0x2
	i++
	if m.VesIoVoltShareWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoWebAccessRead) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xd8
	i++
	dAtA[i] = 0x2
	i++
	if m.VesIoWebAccessRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *APIGroupChoice_VesIoWebAccessWrite) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xe0
	i++
	dAtA[i] = 0x2
	i++
	if m.VesIoWebAccessWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func encodeVarintAllApiGroups(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *APIGroupChoice) Size() (n int) {
	var l int
	_ = l
	if m.Choice != nil {
		n += m.Choice.Size()
	}
	return n
}

func (m *APIGroupChoice_InfrastructureDemoAccessRead) Size() (n int) {
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoBillingRead) Size() (n int) {
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoBillingWrite) Size() (n int) {
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoGeneralRead) Size() (n int) {
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoGeneralWrite) Size() (n int) {
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoIaasCaasRead) Size() (n int) {
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoIaasCaasWrite) Size() (n int) {
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoInfraMonitorRead) Size() (n int) {
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoInfraMonitorWrite) Size() (n int) {
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoInfrastructureRead) Size() (n int) {
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoInfrastructureWrite) Size() (n int) {
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoInternalRead) Size() (n int) {
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoInternalWrite) Size() (n int) {
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoK8SRead) Size() (n int) {
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoK8SWrite) Size() (n int) {
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoLabelsRead) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoLabelsWrite) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoLocalK8SWrite) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoMonitorRead) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoMonitorWrite) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoNetworkRead) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoNetworkWrite) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoProxyMonitorRead) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoProxyMonitorWrite) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoProxyRead) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoProxySecurityRead) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoProxySecurityWrite) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoProxyWafRead) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoProxyWafWrite) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoProxyWrite) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoSecretsRead) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoSecretsWrite) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoSystemSrv6NetworkSliceReadWrite) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoSystemVirtualNetworkReadWrite) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoUamAdminRead) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoUamAdminWrite) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoUamRead) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoUamWrite) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoVirtualSitesRead) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoVirtualSitesWrite) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoVoltShareRead) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoVoltShareWrite) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoWebAccessRead) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoWebAccessWrite) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}

func sovAllApiGroups(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozAllApiGroups(x uint64) (n int) {
	return sovAllApiGroups(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *APIGroupChoice) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice{`,
		`Choice:` + fmt.Sprintf("%v", this.Choice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_InfrastructureDemoAccessRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_InfrastructureDemoAccessRead{`,
		`InfrastructureDemoAccessRead:` + fmt.Sprintf("%v", this.InfrastructureDemoAccessRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoBillingRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoBillingRead{`,
		`VesIoBillingRead:` + fmt.Sprintf("%v", this.VesIoBillingRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoBillingWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoBillingWrite{`,
		`VesIoBillingWrite:` + fmt.Sprintf("%v", this.VesIoBillingWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoGeneralRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoGeneralRead{`,
		`VesIoGeneralRead:` + fmt.Sprintf("%v", this.VesIoGeneralRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoGeneralWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoGeneralWrite{`,
		`VesIoGeneralWrite:` + fmt.Sprintf("%v", this.VesIoGeneralWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoIaasCaasRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoIaasCaasRead{`,
		`VesIoIaasCaasRead:` + fmt.Sprintf("%v", this.VesIoIaasCaasRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoIaasCaasWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoIaasCaasWrite{`,
		`VesIoIaasCaasWrite:` + fmt.Sprintf("%v", this.VesIoIaasCaasWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoInfraMonitorRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoInfraMonitorRead{`,
		`VesIoInfraMonitorRead:` + fmt.Sprintf("%v", this.VesIoInfraMonitorRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoInfraMonitorWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoInfraMonitorWrite{`,
		`VesIoInfraMonitorWrite:` + fmt.Sprintf("%v", this.VesIoInfraMonitorWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoInfrastructureRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoInfrastructureRead{`,
		`VesIoInfrastructureRead:` + fmt.Sprintf("%v", this.VesIoInfrastructureRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoInfrastructureWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoInfrastructureWrite{`,
		`VesIoInfrastructureWrite:` + fmt.Sprintf("%v", this.VesIoInfrastructureWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoInternalRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoInternalRead{`,
		`VesIoInternalRead:` + fmt.Sprintf("%v", this.VesIoInternalRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoInternalWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoInternalWrite{`,
		`VesIoInternalWrite:` + fmt.Sprintf("%v", this.VesIoInternalWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoK8SRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoK8SRead{`,
		`VesIoK8SRead:` + fmt.Sprintf("%v", this.VesIoK8SRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoK8SWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoK8SWrite{`,
		`VesIoK8SWrite:` + fmt.Sprintf("%v", this.VesIoK8SWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoLabelsRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoLabelsRead{`,
		`VesIoLabelsRead:` + fmt.Sprintf("%v", this.VesIoLabelsRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoLabelsWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoLabelsWrite{`,
		`VesIoLabelsWrite:` + fmt.Sprintf("%v", this.VesIoLabelsWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoLocalK8SWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoLocalK8SWrite{`,
		`VesIoLocalK8SWrite:` + fmt.Sprintf("%v", this.VesIoLocalK8SWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoMonitorRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoMonitorRead{`,
		`VesIoMonitorRead:` + fmt.Sprintf("%v", this.VesIoMonitorRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoMonitorWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoMonitorWrite{`,
		`VesIoMonitorWrite:` + fmt.Sprintf("%v", this.VesIoMonitorWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoNetworkRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoNetworkRead{`,
		`VesIoNetworkRead:` + fmt.Sprintf("%v", this.VesIoNetworkRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoNetworkWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoNetworkWrite{`,
		`VesIoNetworkWrite:` + fmt.Sprintf("%v", this.VesIoNetworkWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoProxyMonitorRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoProxyMonitorRead{`,
		`VesIoProxyMonitorRead:` + fmt.Sprintf("%v", this.VesIoProxyMonitorRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoProxyMonitorWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoProxyMonitorWrite{`,
		`VesIoProxyMonitorWrite:` + fmt.Sprintf("%v", this.VesIoProxyMonitorWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoProxyRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoProxyRead{`,
		`VesIoProxyRead:` + fmt.Sprintf("%v", this.VesIoProxyRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoProxySecurityRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoProxySecurityRead{`,
		`VesIoProxySecurityRead:` + fmt.Sprintf("%v", this.VesIoProxySecurityRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoProxySecurityWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoProxySecurityWrite{`,
		`VesIoProxySecurityWrite:` + fmt.Sprintf("%v", this.VesIoProxySecurityWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoProxyWafRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoProxyWafRead{`,
		`VesIoProxyWafRead:` + fmt.Sprintf("%v", this.VesIoProxyWafRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoProxyWafWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoProxyWafWrite{`,
		`VesIoProxyWafWrite:` + fmt.Sprintf("%v", this.VesIoProxyWafWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoProxyWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoProxyWrite{`,
		`VesIoProxyWrite:` + fmt.Sprintf("%v", this.VesIoProxyWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoSecretsRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoSecretsRead{`,
		`VesIoSecretsRead:` + fmt.Sprintf("%v", this.VesIoSecretsRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoSecretsWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoSecretsWrite{`,
		`VesIoSecretsWrite:` + fmt.Sprintf("%v", this.VesIoSecretsWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoSystemSrv6NetworkSliceReadWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoSystemSrv6NetworkSliceReadWrite{`,
		`VesIoSystemSrv6NetworkSliceReadWrite:` + fmt.Sprintf("%v", this.VesIoSystemSrv6NetworkSliceReadWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoSystemVirtualNetworkReadWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoSystemVirtualNetworkReadWrite{`,
		`VesIoSystemVirtualNetworkReadWrite:` + fmt.Sprintf("%v", this.VesIoSystemVirtualNetworkReadWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoUamAdminRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoUamAdminRead{`,
		`VesIoUamAdminRead:` + fmt.Sprintf("%v", this.VesIoUamAdminRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoUamAdminWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoUamAdminWrite{`,
		`VesIoUamAdminWrite:` + fmt.Sprintf("%v", this.VesIoUamAdminWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoUamRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoUamRead{`,
		`VesIoUamRead:` + fmt.Sprintf("%v", this.VesIoUamRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoUamWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoUamWrite{`,
		`VesIoUamWrite:` + fmt.Sprintf("%v", this.VesIoUamWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoVirtualSitesRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoVirtualSitesRead{`,
		`VesIoVirtualSitesRead:` + fmt.Sprintf("%v", this.VesIoVirtualSitesRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoVirtualSitesWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoVirtualSitesWrite{`,
		`VesIoVirtualSitesWrite:` + fmt.Sprintf("%v", this.VesIoVirtualSitesWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoVoltShareRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoVoltShareRead{`,
		`VesIoVoltShareRead:` + fmt.Sprintf("%v", this.VesIoVoltShareRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoVoltShareWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoVoltShareWrite{`,
		`VesIoVoltShareWrite:` + fmt.Sprintf("%v", this.VesIoVoltShareWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoWebAccessRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoWebAccessRead{`,
		`VesIoWebAccessRead:` + fmt.Sprintf("%v", this.VesIoWebAccessRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoWebAccessWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoWebAccessWrite{`,
		`VesIoWebAccessWrite:` + fmt.Sprintf("%v", this.VesIoWebAccessWrite) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringAllApiGroups(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *APIGroupChoice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAllApiGroups
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: APIGroupChoice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: APIGroupChoice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InfrastructureDemoAccessRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_InfrastructureDemoAccessRead{b}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoBillingRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoBillingRead{b}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoBillingWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoBillingWrite{b}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoGeneralRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoGeneralRead{b}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoGeneralWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoGeneralWrite{b}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoIaasCaasRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoIaasCaasRead{b}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoIaasCaasWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoIaasCaasWrite{b}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoInfraMonitorRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoInfraMonitorRead{b}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoInfraMonitorWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoInfraMonitorWrite{b}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoInfrastructureRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoInfrastructureRead{b}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoInfrastructureWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoInfrastructureWrite{b}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoInternalRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoInternalRead{b}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoInternalWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoInternalWrite{b}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoK8SRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoK8SRead{b}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoK8SWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoK8SWrite{b}
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoLabelsRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoLabelsRead{b}
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoLabelsWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoLabelsWrite{b}
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoLocalK8SWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoLocalK8SWrite{b}
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoMonitorRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoMonitorRead{b}
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoMonitorWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoMonitorWrite{b}
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoNetworkRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoNetworkRead{b}
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoNetworkWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoNetworkWrite{b}
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoProxyMonitorRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoProxyMonitorRead{b}
		case 24:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoProxyMonitorWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoProxyMonitorWrite{b}
		case 25:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoProxyRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoProxyRead{b}
		case 26:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoProxySecurityRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoProxySecurityRead{b}
		case 27:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoProxySecurityWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoProxySecurityWrite{b}
		case 28:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoProxyWafRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoProxyWafRead{b}
		case 29:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoProxyWafWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoProxyWafWrite{b}
		case 30:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoProxyWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoProxyWrite{b}
		case 31:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoSecretsRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoSecretsRead{b}
		case 32:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoSecretsWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoSecretsWrite{b}
		case 33:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoSystemSrv6NetworkSliceReadWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoSystemSrv6NetworkSliceReadWrite{b}
		case 34:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoSystemVirtualNetworkReadWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoSystemVirtualNetworkReadWrite{b}
		case 35:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoUamAdminRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoUamAdminRead{b}
		case 36:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoUamAdminWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoUamAdminWrite{b}
		case 37:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoUamRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoUamRead{b}
		case 38:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoUamWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoUamWrite{b}
		case 39:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoVirtualSitesRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoVirtualSitesRead{b}
		case 40:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoVirtualSitesWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoVirtualSitesWrite{b}
		case 41:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoVoltShareRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoVoltShareRead{b}
		case 42:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoVoltShareWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoVoltShareWrite{b}
		case 43:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoWebAccessRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoWebAccessRead{b}
		case 44:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoWebAccessWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoWebAccessWrite{b}
		default:
			iNdEx = preIndex
			skippy, err := skipAllApiGroups(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAllApiGroups
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAllApiGroups(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAllApiGroups
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthAllApiGroups
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowAllApiGroups
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipAllApiGroups(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthAllApiGroups = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAllApiGroups   = fmt.Errorf("proto: integer overflow")
)

func init() {
	proto.RegisterFile("ves.io/schema/vesenv/all_api_groups.proto", fileDescriptorAllApiGroups)
}

var fileDescriptorAllApiGroups = []byte{
	// 2452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x98, 0xb9, 0x93, 0x5c, 0x57,
	0xf5, 0xc7, 0xa7, 0x7f, 0x8b, 0x7f, 0xfe, 0x35, 0xde, 0x34, 0xde, 0xda, 0x0b, 0x63, 0x23, 0x04,
	0x78, 0xe1, 0x48, 0x77, 0x5f, 0xf0, 0x86, 0x24, 0x40, 0x32, 0x36, 0x94, 0x4b, 0x83, 0xad, 0x2a,
	0x92, 0xa9, 0x73, 0xb7, 0x71, 0xa3, 0x99, 0xe9, 0xa9, 0xee, 0x9e, 0x91, 0x5c, 0x24, 0x50, 0x05,
	0x05, 0x21, 0x01, 0x7f, 0x04, 0x01, 0x21, 0x59, 0x67, 0x1d, 0x11, 0x3a, 0x24, 0x44, 0x43, 0x42,
	0xe8, 0x3f, 0x81, 0xba, 0xf7, 0xbe, 0xd7, 0xaf, 0xbb, 0xf5, 0x9c, 0x4c, 0x4d, 0x55, 0x9f, 0x73,
	0x3f, 0xe7, 0x7b, 0xde, 0x3d, 0xcb, 0x7b, 0xc3, 0x37, 0xcf, 0xe3, 0xec, 0xea, 0x78, 0x72, 0x6d,
	0xe6, 0x3f, 0x8f, 0xc7, 0x78, 0xed, 0x3c, 0xce, 0xe2, 0xc9, 0xf9, 0x35, 0x3c, 0x3a, 0x3a, 0xc0,
	0xd3, 0xf1, 0xc1, 0xe1, 0x74, 0x72, 0x76, 0x3a, 0xbb, 0x7a, 0x3a, 0x9d, 0xcc, 0x27, 0xbb, 0xcf,
	0x55, 0xd3, 0xab, 0xd5, 0xf4, 0x6a, 0x35, 0x7d, 0xf9, 0x72, 0xef, 0x01, 0x93, 0xd3, 0xf9, 0x78,
	0x72, 0xd2, 0x78, 0x5e, 0x7e, 0xf8, 0xd6, 0xf0, 0xa9, 0xeb, 0x9f, 0x7c, 0x78, 0x2b, 0x9f, 0x76,
	0xf3, 0xf3, 0xc9, 0xd8, 0xc7, 0xdd, 0x3f, 0x0f, 0x86, 0xaf, 0x8d, 0x4f, 0xd2, 0x14, 0x67, 0xf3,
	0xe9, 0x99, 0x9f, 0x9f, 0x4d, 0xe3, 0x41, 0x88, 0xc7, 0x93, 0x03, 0xf4, 0x3e, 0xce, 0x66, 0x07,
	0xd3, 0x88, 0x61, 0x34, 0x78, 0x7d, 0xf0, 0xc6, 0xe3, 0x37, 0x3e, 0x5a, 0x2e, 0x46, 0xb7, 0xb6,
	0x8d, 0x21, 0x1b, 0x43, 0x35, 0x86, 0x6c, 0xbc, 0x7b, 0x45, 0x1b, 0xb4, 0x82, 0x2a, 0x07, 0x44,
	0x72, 0x03, 0x82, 0xa9, 0x04, 0x36, 0xff, 0x87, 0x9c, 0x11, 0x6b, 0x93, 0x4c, 0x46, 0xa9, 0xdb,
	0x3b, 0x77, 0x5e, 0xdd, 0x3c, 0xe8, 0x47, 0xf1, 0x78, 0x72, 0xbd, 0x1c, 0x73, 0x27, 0x9f, 0x72,
	0x3a, 0x7c, 0xf6, 0x3c, 0xce, 0x0e, 0xc6, 0x93, 0x03, 0x37, 0x3e, 0x3a, 0x1a, 0x9f, 0x1c, 0xd6,
	0x48, 0xfe, 0xab, 0x44, 0xf2, 0xc1, 0x72, 0x31, 0x7a, 0xa7, 0x18, 0xc0, 0x78, 0x02, 0x8d, 0x41,
	0x43, 0x17, 0x5a, 0x7b, 0xe3, 0x55, 0x04, 0x12, 0x18, 0x82, 0x70, 0xde, 0x83, 0xa5, 0x22, 0x81,
	0xe2, 0x84, 0x38, 0x4e, 0x3d, 0x2a, 0x13, 0x6e, 0xef, 0xdc, 0x79, 0xe6, 0x3c, 0xce, 0x3e, 0x9c,
	0xdc, 0xa8, 0xae, 0x85, 0x38, 0x1b, 0x3e, 0xb7, 0x45, 0xbc, 0x3f, 0x1d, 0xcf, 0xe3, 0xe8, 0xbf,
	0x0b, 0xf2, 0x87, 0xcb, 0xc5, 0xe8, 0xdd, 0x62, 0xb1, 0x8e, 0x2c, 0x16, 0xbb, 0x57, 0x78, 0xd0,
	0x2e, 0xa9, 0xa8, 0x20, 0x3a, 0xc9, 0x40, 0x44, 0x83, 0xe0, 0x98, 0x53, 0xe0, 0x83, 0x51, 0x2c,
	0x68, 0xa1, 0x03, 0x31, 0xb7, 0x77, 0xee, 0x5c, 0x5a, 0x67, 0xde, 0x2d, 0xae, 0x9d, 0xcc, 0xc3,
	0x78, 0x12, 0xa7, 0x78, 0x54, 0x65, 0xfe, 0x4f, 0x8f, 0xcc, 0xc6, 0xa0, 0x91, 0x49, 0xa8, 0x40,
	0x4a, 0x85, 0x04, 0xe4, 0x2a, 0x65, 0x24, 0x03, 0x34, 0x52, 0x82, 0x76, 0x48, 0x42, 0xf2, 0x42,
	0x7a, 0xc7, 0x57, 0x32, 0x6f, 0x55, 0xd7, 0x2d, 0x99, 0x2d, 0xb1, 0xca, 0xfc, 0xdf, 0x1e, 0x99,
	0x2d, 0xb2, 0x91, 0xa9, 0x99, 0x21, 0x04, 0x13, 0x81, 0xa8, 0x79, 0x04, 0x21, 0x9c, 0x05, 0xc7,
	0xa4, 0x85, 0x48, 0x92, 0x48, 0x36, 0xa0, 0x20, 0x85, 0x79, 0x69, 0x9d, 0x59, 0x65, 0x9e, 0x0d,
	0x9f, 0x6f, 0xa0, 0x63, 0xc4, 0xd9, 0x81, 0xcf, 0x7f, 0x8a, 0xd0, 0xc7, 0x0a, 0xf5, 0xfa, 0x72,
	0x31, 0x7a, 0xaf, 0x98, 0x64, 0x6a, 0x36, 0x81, 0x6c, 0xd2, 0x48, 0x35, 0x42, 0x32, 0x46, 0x84,
	0x02, 0x41, 0x82, 0x03, 0x61, 0x59, 0x00, 0x2b, 0xad, 0x05, 0xc3, 0x68, 0xa4, 0x41, 0x2a, 0x34,
	0x29, 0xad, 0xb0, 0x1f, 0x22, 0xce, 0x6e, 0x22, 0xd6, 0x4b, 0xf4, 0x60, 0xf8, 0xc2, 0x23, 0xd8,
	0xaa, 0xf6, 0xff, 0x0a, 0xf7, 0xc6, 0x72, 0x31, 0x7a, 0xbf, 0xd8, 0x6c, 0x72, 0xdb, 0xc7, 0x1a,
	0x29, 0x26, 0x26, 0x0d, 0x10, 0x66, 0x05, 0x08, 0x8f, 0x04, 0x5c, 0xb4, 0x14, 0x94, 0x56, 0xc2,
	0x29, 0x6f, 0x94, 0xa5, 0xf4, 0xf6, 0xce, 0x9d, 0xdd, 0x0d, 0x70, 0x15, 0xfc, 0xdb, 0xc1, 0xf0,
	0xa5, 0x16, 0x9d, 0xaf, 0xf9, 0xc1, 0xf1, 0xe4, 0x64, 0x3c, 0x9f, 0x4c, 0xab, 0xea, 0xc7, 0x0b,
	0xfd, 0xc7, 0xcb, 0xc5, 0xe8, 0x7a, 0x31, 0x2b, 0xf4, 0x6c, 0x06, 0x8d, 0x59, 0xa3, 0xdc, 0x59,
	0xe7, 0xad, 0x70, 0x1a, 0x48, 0xd2, 0x06, 0x04, 0xca, 0x08, 0x46, 0xea, 0x00, 0xde, 0x2b, 0x92,
	0x22, 0x2a, 0x64, 0x24, 0x07, 0xf0, 0x7c, 0x0d, 0x20, 0x1f, 0xf0, 0xb3, 0xea, 0x5f, 0xd4, 0xff,
	0x6e, 0x30, 0x7c, 0xb9, 0x37, 0x86, 0x9a, 0x82, 0xff, 0x2f, 0x41, 0xfc, 0x64, 0xb9, 0x18, 0xdd,
	0x28, 0x76, 0x8f, 0x06, 0xd1, 0xa6, 0x41, 0x50, 0x2d, 0x59, 0xa0, 0xa0, 0x99, 0x61, 0x20, 0x42,
	0x34, 0x80, 0x3a, 0x50, 0x88, 0x4a, 0xa9, 0x48, 0xad, 0x0e, 0x34, 0xe4, 0xc7, 0xfe, 0xc2, 0x23,
	0x51, 0xd4, 0x54, 0xfc, 0x7e, 0x2b, 0x8c, 0xae, 0xcf, 0x94, 0x5c, 0x0c, 0xbf, 0x2e, 0x8c, 0xae,
	0xc5, 0xd4, 0x64, 0x78, 0x4b, 0x0d, 0x93, 0x29, 0x81, 0xe3, 0x4c, 0x80, 0xe0, 0x96, 0x81, 0x25,
	0x31, 0x01, 0x26, 0x25, 0xbc, 0x0e, 0xdc, 0x6a, 0x99, 0xdb, 0xca, 0x8b, 0x5d, 0x18, 0xab, 0x13,
	0x4a, 0x3a, 0xfe, 0x38, 0x18, 0xbe, 0xd2, 0x1f, 0x47, 0xcd, 0xc7, 0x37, 0x4a, 0x20, 0xb7, 0x96,
	0x8b, 0xd1, 0xcd, 0x62, 0xd8, 0x13, 0x48, 0x5b, 0x07, 0x56, 0x13, 0x74, 0x4e, 0x82, 0x30, 0x26,
	0x82, 0x48, 0x9c, 0x83, 0xe3, 0x49, 0x81, 0x62, 0xcc, 0x04, 0x9d, 0xbc, 0x0e, 0x49, 0xdf, 0xde,
	0xb9, 0x33, 0xea, 0x89, 0xa4, 0xa6, 0xa4, 0xab, 0xc1, 0xf1, 0xc9, 0x3c, 0x4e, 0x4f, 0xda, 0xb2,
	0x7f, 0xa2, 0xa7, 0x06, 0x5b, 0x8b, 0xb6, 0x18, 0xd0, 0x72, 0xe9, 0x79, 0x80, 0xa0, 0x53, 0x02,
	0xc1, 0xa2, 0x06, 0x27, 0x38, 0x01, 0xc3, 0xad, 0x43, 0x6e, 0xb4, 0x49, 0x36, 0x76, 0xc5, 0xd0,
	0xf8, 0x16, 0xfd, 0xe7, 0x5d, 0x0d, 0xb6, 0xd0, 0x2a, 0xfc, 0xc9, 0xbe, 0x1a, 0x6c, 0xa9, 0x8d,
	0x64, 0x13, 0x2d, 0xe1, 0x4a, 0x72, 0x70, 0xd6, 0x3b, 0x10, 0x41, 0x39, 0x40, 0x46, 0x34, 0x44,
	0xed, 0x19, 0xd5, 0x41, 0x6a, 0x4f, 0x59, 0x57, 0x0a, 0x8d, 0x73, 0x15, 0x1b, 0x86, 0x4f, 0x37,
	0xdc, 0x7b, 0xa6, 0xa9, 0xfa, 0xa7, 0x0a, 0xf1, 0x9d, 0xe5, 0x62, 0xa4, 0xcb, 0x8f, 0x99, 0x78,
	0xcf, 0xac, 0xea, 0xdd, 0xe4, 0xc6, 0xe6, 0x0c, 0x58, 0xa5, 0x1c, 0x08, 0x69, 0x3c, 0x60, 0xbe,
	0xf5, 0x4a, 0x72, 0x95, 0xb8, 0x50, 0x56, 0x33, 0x72, 0x7b, 0xe7, 0xce, 0x13, 0x85, 0xf5, 0x91,
	0xa9, 0xa5, 0x7e, 0x38, 0x7c, 0x66, 0x8d, 0x52, 0x85, 0x3d, 0x5d, 0x30, 0xef, 0x2e, 0x17, 0x23,
	0x53, 0x7e, 0x6d, 0x31, 0x8d, 0x26, 0xab, 0x14, 0x37, 0x5a, 0x79, 0x08, 0x94, 0x27, 0x10, 0x89,
	0x18, 0x70, 0x31, 0x7a, 0xd0, 0x29, 0xd2, 0x44, 0x42, 0xb0, 0xd6, 0xe4, 0x0b, 0xf5, 0x64, 0xcb,
	0xa9, 0x72, 0x8e, 0x87, 0xbb, 0x0d, 0xe8, 0x08, 0x5d, 0x3c, 0x6a, 0x14, 0x3d, 0x53, 0x50, 0xef,
	0x2f, 0x17, 0xa3, 0x1f, 0x94, 0xdf, 0x33, 0xaa, 0xfe, 0xde, 0xde, 0x5e, 0x2d, 0x68, 0x8c, 0x26,
	0x80, 0x50, 0x86, 0x83, 0x70, 0x2e, 0x80, 0x91, 0x8c, 0x42, 0x30, 0x82, 0x63, 0x72, 0x68, 0xa4,
	0xcf, 0x63, 0xe9, 0xe9, 0x02, 0xfb, 0xb8, 0x78, 0x6e, 0xcd, 0xc1, 0x06, 0x57, 0xa5, 0x5d, 0xea,
	0x19, 0x10, 0x0d, 0xaf, 0x51, 0xc7, 0x84, 0xd5, 0x8a, 0x53, 0x02, 0x4c, 0xa2, 0x05, 0x61, 0x92,
	0x00, 0xa7, 0x91, 0x03, 0xaa, 0xa8, 0x28, 0xf1, 0x22, 0x06, 0x21, 0x57, 0x03, 0xa2, 0x02, 0xab,
	0xc0, 0xae, 0x69, 0x1e, 0x4d, 0x3c, 0x1e, 0xad, 0xe5, 0x73, 0xb7, 0xa7, 0x69, 0x16, 0x9b, 0xf5,
	0xac, 0x7a, 0x67, 0x9c, 0x60, 0x29, 0x41, 0xd2, 0x49, 0x82, 0x08, 0x84, 0x00, 0x1a, 0xc6, 0xc1,
	0x10, 0x62, 0xa2, 0x33, 0xca, 0x09, 0x54, 0xab, 0x9b, 0xf2, 0x71, 0xf6, 0x5e, 0xa5, 0xb6, 0xd3,
	0xba, 0xd1, 0x2d, 0x9f, 0xed, 0xd1, 0xba, 0xd9, 0x27, 0x63, 0xb0, 0x29, 0x58, 0x8d, 0x60, 0x1d,
	0x61, 0x20, 0x1c, 0xb5, 0x80, 0x52, 0x09, 0xd0, 0x51, 0x7a, 0x83, 0x4c, 0xc6, 0x20, 0x71, 0xa5,
	0x75, 0xbd, 0x45, 0x76, 0x85, 0xb8, 0xd9, 0x1b, 0x9f, 0xeb, 0x29, 0xc4, 0xad, 0xae, 0x98, 0x48,
	0x20, 0x96, 0x46, 0x06, 0x46, 0x2a, 0x0e, 0xc2, 0x72, 0x05, 0x4e, 0xc5, 0x08, 0x5a, 0x68, 0x9f,
	0xbc, 0x48, 0xdc, 0x39, 0xb1, 0x2a, 0xc4, 0x8d, 0x86, 0xd8, 0xc9, 0x3c, 0x89, 0xf3, 0xfb, 0x93,
	0xe9, 0xbd, 0x2a, 0xf3, 0xf9, 0x1e, 0x99, 0x8d, 0x41, 0x7b, 0x87, 0x54, 0x32, 0xd1, 0x50, 0x84,
	0x84, 0x59, 0xa6, 0x96, 0x1a, 0x6c, 0xd2, 0x09, 0x28, 0x11, 0x2a, 0x12, 0x62, 0xa4, 0xe0, 0x6e,
	0x25, 0xf3, 0xe7, 0xd5, 0x75, 0x4b, 0x66, 0x4b, 0xac, 0x32, 0x5f, 0xe8, 0x91, 0xd9, 0x22, 0xdb,
	0x6b, 0xe4, 0x02, 0x49, 0x96, 0x51, 0x30, 0xc1, 0x38, 0x10, 0x4a, 0x78, 0x40, 0xcb, 0x24, 0x08,
	0x87, 0xde, 0x24, 0xc3, 0xa4, 0x49, 0xdd, 0xcc, 0x6f, 0x98, 0x8f, 0x8c, 0xc0, 0xd3, 0xe9, 0xe4,
	0xc1, 0x17, 0x9b, 0x0f, 0xf5, 0xc5, 0x9e, 0x11, 0x58, 0xcc, 0xb6, 0x1e, 0x2d, 0x8b, 0xc2, 0x06,
	0xeb, 0x59, 0x9e, 0x79, 0x0c, 0x04, 0x65, 0x02, 0xac, 0xb3, 0x08, 0x36, 0xc9, 0xe0, 0x8c, 0x35,
	0xe8, 0xbd, 0x5d, 0x8d, 0xc0, 0x4f, 0xf2, 0x01, 0x5f, 0x33, 0x02, 0x37, 0x63, 0xa8, 0xfa, 0x47,
	0x3d, 0xb3, 0x67, 0x33, 0x88, 0x26, 0x0b, 0x48, 0x58, 0xb4, 0xc9, 0x7b, 0x40, 0x42, 0x2d, 0x08,
	0xed, 0x1d, 0x38, 0xc2, 0x18, 0x20, 0x27, 0x32, 0x48, 0x47, 0x31, 0x2a, 0xb9, 0x1a, 0x81, 0xeb,
	0x51, 0xd4, 0x54, 0xfc, 0x6a, 0x78, 0x69, 0x23, 0x8a, 0x92, 0x81, 0x97, 0x0a, 0xfc, 0xbd, 0xe5,
	0x62, 0x64, 0xcb, 0xcf, 0x1d, 0xbc, 0x2a, 0xb7, 0x52, 0x87, 0xa8, 0x39, 0x42, 0x30, 0x81, 0x81,
	0x50, 0x68, 0x01, 0x59, 0x50, 0x40, 0xad, 0x24, 0x2a, 0x78, 0xea, 0x7d, 0xcc, 0xcc, 0xa7, 0x3a,
	0x66, 0xbf, 0xe4, 0x59, 0xf4, 0x67, 0xd3, 0xf1, 0xbc, 0xa1, 0xbe, 0xfc, 0xb5, 0x92, 0x5b, 0xbb,
	0xf6, 0xb2, 0xf9, 0xe4, 0x02, 0x15, 0x0e, 0xa4, 0xd2, 0x01, 0x04, 0x49, 0x14, 0x2c, 0x75, 0x12,
	0x12, 0x63, 0x92, 0x70, 0xd4, 0x31, 0x38, 0xb6, 0x29, 0x79, 0xbf, 0x39, 0xa0, 0x84, 0xf1, 0x87,
	0x6e, 0xda, 0x6e, 0x85, 0x51, 0x53, 0xff, 0x4a, 0xcf, 0xb4, 0xdd, 0x8a, 0xa3, 0x6d, 0x28, 0xd6,
	0x04, 0xa9, 0x25, 0x05, 0x85, 0x9c, 0x82, 0xd0, 0x02, 0xc1, 0xc4, 0x98, 0x40, 0x1b, 0x1a, 0x8c,
	0x8d, 0x42, 0x2b, 0x82, 0xab, 0xb9, 0xbf, 0x11, 0xc8, 0xf6, 0xee, 0x59, 0x03, 0xb9, 0x8f, 0xa9,
	0xa6, 0xe2, 0xd5, 0x9e, 0xb9, 0x57, 0x43, 0xb8, 0x8f, 0xa9, 0xc9, 0x02, 0x77, 0x11, 0x29, 0xca,
	0x04, 0x5c, 0x86, 0x08, 0x42, 0x47, 0x01, 0x46, 0x07, 0x04, 0x16, 0x92, 0x73, 0xc6, 0x60, 0xa2,
	0xac, 0x1b, 0xb7, 0x05, 0x7e, 0x17, 0xd3, 0xd6, 0xee, 0xd9, 0x61, 0xab, 0xf4, 0x6f, 0xf6, 0xb4,
	0xd1, 0x8e, 0xdb, 0xa8, 0x26, 0xd2, 0x08, 0xa9, 0x14, 0x01, 0xe1, 0x02, 0x82, 0x88, 0x22, 0x81,
	0x61, 0x92, 0x82, 0x89, 0xd2, 0xd0, 0x40, 0x98, 0x26, 0xa5, 0xee, 0x76, 0x37, 0xc0, 0xdb, 0x13,
	0xaa, 0x21, 0x17, 0xea, 0x5e, 0xcf, 0x84, 0x6a, 0xa8, 0x95, 0xa8, 0x18, 0xaa, 0xc8, 0x94, 0x02,
	0xe7, 0x3c, 0x01, 0x21, 0x59, 0x5e, 0xf3, 0x52, 0x00, 0x92, 0xe7, 0x14, 0x4b, 0x1e, 0x53, 0xea,
	0x26, 0x54, 0x25, 0x6e, 0xb5, 0xb3, 0x59, 0xf4, 0xd3, 0x38, 0x6f, 0x26, 0xe2, 0x6b, 0x3d, 0xed,
	0xac, 0x31, 0x68, 0x72, 0x4b, 0x43, 0x4a, 0x4a, 0x90, 0xbc, 0x54, 0x3b, 0x03, 0xc2, 0x19, 0x0e,
	0x4e, 0x4a, 0x04, 0x25, 0x3c, 0xca, 0xe8, 0x6c, 0x52, 0x65, 0x95, 0xa9, 0xed, 0x6c, 0xbf, 0xba,
	0x6e, 0xb5, 0xb3, 0x96, 0x58, 0x25, 0xbe, 0xde, 0xd3, 0xce, 0x5a, 0x64, 0x23, 0x32, 0x52, 0xa6,
	0x09, 0x4a, 0x03, 0x8c, 0x52, 0x05, 0xc2, 0x31, 0x07, 0xc6, 0x3a, 0x02, 0xce, 0x19, 0x6b, 0x35,
	0x55, 0x0e, 0xbd, 0x5e, 0x3d, 0xcf, 0x86, 0x59, 0x65, 0xfe, 0x6d, 0x30, 0x7c, 0xbb, 0xa5, 0x7e,
	0x31, 0x9b, 0xc7, 0xe3, 0x83, 0xd9, 0xf4, 0x5c, 0xad, 0x1a, 0xea, 0xec, 0x68, 0xec, 0xeb, 0x46,
	0xdb, 0x04, 0xf3, 0xad, 0x12, 0xcc, 0xdd, 0xe5, 0x62, 0xb4, 0x5f, 0x1c, 0x4b, 0x30, 0xc5, 0x11,
	0xb2, 0xe3, 0xaa, 0xcf, 0x16, 0xc7, 0x92, 0x91, 0xd5, 0x7a, 0x29, 0x94, 0x65, 0xd6, 0x79, 0x70,
	0x65, 0xc7, 0x4c, 0x3c, 0x82, 0x89, 0xd6, 0x40, 0x08, 0x8c, 0x4b, 0x8c, 0x3e, 0x70, 0x91, 0xb7,
	0xfe, 0x2b, 0x35, 0xc6, 0x72, 0xe4, 0xfe, 0xf4, 0x5c, 0x35, 0xcd, 0x77, 0x3f, 0x9f, 0x97, 0xd3,
	0x54, 0xc3, 0xfe, 0xeb, 0x60, 0xf8, 0xc6, 0x66, 0xd8, 0xe7, 0xe3, 0xe9, 0xfc, 0x0c, 0x8f, 0x36,
	0x86, 0x4f, 0x13, 0xf3, 0xe5, 0x12, 0xf3, 0x2f, 0x96, 0x8b, 0xd1, 0x27, 0xc5, 0x6b, 0x2d, 0xe6,
	0xc6, 0x6b, 0x63, 0x22, 0xb5, 0x01, 0x3b, 0xed, 0xb9, 0x40, 0x16, 0x21, 0x45, 0xf4, 0x20, 0x38,
	0x8d, 0x80, 0x0c, 0x19, 0xb8, 0xe0, 0x23, 0x0f, 0x44, 0x61, 0x14, 0xf9, 0x05, 0xed, 0xf2, 0x5a,
	0xc0, 0x9f, 0xd5, 0xe3, 0xd6, 0x86, 0xd4, 0x76, 0xb1, 0x9e, 0xe1, 0xf1, 0x01, 0x86, 0xe3, 0xf1,
	0x49, 0xbd, 0x4e, 0xdf, 0xee, 0x29, 0xd6, 0x33, 0x3c, 0x86, 0x62, 0xd2, 0x2e, 0x8e, 0x3c, 0x12,
	0xf4, 0x81, 0x83, 0x72, 0x9a, 0xe6, 0x85, 0x8e, 0x81, 0xd5, 0x0a, 0x01, 0xad, 0xe4, 0x8c, 0x1b,
	0xc1, 0x1c, 0xed, 0x46, 0xf2, 0xa7, 0x78, 0x7c, 0x3d, 0xfb, 0x6e, 0x15, 0x6b, 0x87, 0xad, 0x29,
	0xb9, 0xd2, 0x53, 0xac, 0x1d, 0xb7, 0xdd, 0x05, 0x28, 0x89, 0x49, 0x1a, 0x03, 0x5a, 0xe7, 0x2e,
	0x41, 0xbd, 0x04, 0xa3, 0x59, 0x80, 0xa4, 0x43, 0x90, 0x81, 0x7b, 0x47, 0x55, 0xb7, 0x1d, 0xb7,
	0xe0, 0xed, 0xed, 0x38, 0x93, 0x8b, 0xd4, 0xef, 0xf4, 0x6c, 0xc7, 0x19, 0xd9, 0xec, 0x3a, 0x49,
	0xa1, 0xf2, 0x96, 0x43, 0x08, 0x52, 0xe5, 0x81, 0xa8, 0xc1, 0xe6, 0xe5, 0x4e, 0x3b, 0x2a, 0x94,
	0x4c, 0x82, 0x27, 0xd7, 0x6d, 0xc7, 0x9f, 0xe2, 0xf1, 0xd6, 0x76, 0x9c, 0x29, 0x55, 0xd9, 0x77,
	0x7b, 0xb6, 0xe3, 0x8c, 0x69, 0xdb, 0x41, 0xf4, 0x54, 0x1a, 0x65, 0x21, 0x24, 0x92, 0xdb, 0x81,
	0x30, 0x60, 0x22, 0xe1, 0x10, 0x9c, 0x37, 0x28, 0xa2, 0x0d, 0x52, 0xe0, 0x6a, 0x3b, 0xfe, 0x14,
	0x8f, 0x1f, 0x19, 0xfa, 0xed, 0x3d, 0x9b, 0x8d, 0xe7, 0xb1, 0xe9, 0x09, 0xdf, 0xeb, 0x19, 0xfa,
	0xed, 0xc5, 0x2a, 0x66, 0x8d, 0xc6, 0xc0, 0x88, 0x94, 0xc9, 0x05, 0x60, 0x8c, 0x79, 0x10, 0x92,
	0x52, 0x30, 0x9a, 0x2b, 0x30, 0x24, 0x46, 0x64, 0x52, 0x19, 0xa5, 0xe5, 0x6a, 0xe8, 0x37, 0x57,
	0x69, 0x3f, 0xfb, 0x6f, 0x4f, 0xc0, 0xcd, 0x18, 0xaa, 0xee, 0x37, 0x7a, 0x26, 0xe0, 0x66, 0x10,
	0x4d, 0x06, 0xa4, 0xf0, 0x82, 0xd1, 0x48, 0x81, 0x2a, 0x9b, 0x40, 0xa8, 0xc0, 0xc0, 0x04, 0x2e,
	0x81, 0x05, 0x41, 0x85, 0x94, 0xd2, 0x99, 0x64, 0x56, 0x13, 0x70, 0x3d, 0x8a, 0xed, 0x3d, 0xfa,
	0x7c, 0x72, 0x34, 0x3f, 0x98, 0x7d, 0x8e, 0xed, 0x2b, 0xef, 0x9b, 0x3d, 0x77, 0x2a, 0xdb, 0x40,
	0xb1, 0x69, 0x9f, 0xb3, 0x4e, 0xda, 0x0a, 0x9f, 0x57, 0x3c, 0xca, 0xea, 0x9b, 0xa6, 0xe5, 0x4c,
	0x42, 0x30, 0x32, 0x3a, 0xea, 0x39, 0xc7, 0xa0, 0x57, 0x77, 0xea, 0xb3, 0xc9, 0xd1, 0x7c, 0x3f,
	0x3b, 0x97, 0x04, 0xfc, 0x7a, 0xf8, 0xe2, 0xa3, 0xe4, 0x2a, 0xfe, 0xad, 0x82, 0xbe, 0xb9, 0x5c,
	0x8c, 0x3e, 0x28, 0x46, 0x5b, 0xe8, 0xf6, 0x8d, 0x9f, 0x33, 0xa2, 0x99, 0x53, 0xa0, 0x44, 0x48,
	0x79, 0x02, 0x69, 0x40, 0xc2, 0x09, 0xa0, 0xb0, 0xc6, 0x38, 0x91, 0xd7, 0xae, 0x5c, 0xd0, 0xcf,
	0x6e, 0xb2, 0xb7, 0x65, 0xdf, 0x8f, 0x6e, 0xe3, 0x2b, 0xe2, 0xdb, 0x3d, 0xb2, 0xef, 0x47, 0xb7,
	0xf9, 0xf1, 0xd0, 0xe8, 0x64, 0x7d, 0xb4, 0x08, 0x84, 0x10, 0x0d, 0xc2, 0x78, 0x07, 0x56, 0x3a,
	0x06, 0xca, 0x58, 0xa7, 0x12, 0xa5, 0x32, 0xa5, 0xee, 0xf5, 0xe1, 0x6e, 0x74, 0x6b, 0x9f, 0x0c,
	0x3b, 0xd9, 0x6b, 0xe4, 0x2a, 0xfb, 0xfb, 0x3d, 0xb2, 0xd7, 0xd0, 0x8d, 0xec, 0x40, 0x95, 0x20,
	0x01, 0x3d, 0xf8, 0x14, 0x45, 0xee, 0x1f, 0x2e, 0xbf, 0xb5, 0x50, 0xd0, 0x32, 0x2a, 0x1b, 0x28,
	0x95, 0x96, 0xba, 0x95, 0xec, 0x15, 0xbb, 0xc8, 0xbe, 0xf1, 0xf8, 0xf0, 0x31, 0x5f, 0x3e, 0xa8,
	0xde, 0x78, 0xf0, 0xe5, 0xc3, 0xbd, 0x9d, 0x7f, 0x3c, 0xdc, 0xdb, 0xf9, 0xea, 0xe1, 0xde, 0xe0,
	0x37, 0x17, 0x7b, 0x83, 0xbf, 0x5c, 0xec, 0x0d, 0xfe, 0x7e, 0xb1, 0x37, 0xf8, 0xf2, 0x62, 0x6f,
	0xf0, 0xcf, 0x8b, 0xbd, 0xc1, 0xbf, 0x2f, 0xf6, 0x76, 0xbe, 0xba, 0xd8, 0x1b, 0xfc, 0xe9, 0x5f,
	0x7b, 0x3b, 0xbf, 0xfc, 0xe9, 0xe1, 0xe4, 0xf4, 0xde, 0xe1, 0xd5, 0xfc, 0x0c, 0xe2, 0x74, 0x8a,
	0x57, 0xcf, 0x66, 0xd7, 0xca, 0x3f, 0x69, 0x32, 0x3d, 0xce, 0xf3, 0xf9, 0x7c, 0x1c, 0xe2, 0x14,
	0xda, 0x9f, 0xaf, 0x9d, 0xba, 0xc3, 0xc9, 0xb5, 0xf8, 0x60, 0xde, 0x7c, 0xe4, 0xdd, 0xf8, 0xd6,
	0xeb, 0x1e, 0x2b, 0x1f, 0x79, 0xf9, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x41, 0x5f, 0x71, 0xd0,
	0x4b, 0x16, 0x00, 0x00,
}
