// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/k8s_cluster/types.proto

package k8s_cluster

import proto "github.com/gogo/protobuf/proto"
import golang_proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
import ves_io_schema4 "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
import _ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
import _ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
import ves_io_schema_views "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/views"

import strings "strings"
import reflect "reflect"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Argo CD configuration
//
// x-displayName: "Argo CD configuration"
// description
// Parameters for Argo Continuous Deployment(CD) application
type ApplicationArgoCDType struct {
	// K8s YAML
	//
	// x-displayName: "K8s YAML"
	// K8s YAML for ClusterRole
	GeneratedYaml string `protobuf:"bytes,1001,opt,name=generated_yaml,json=generatedYaml,proto3" json:"generated_yaml,omitempty"`
}

func (m *ApplicationArgoCDType) Reset()                    { *m = ApplicationArgoCDType{} }
func (*ApplicationArgoCDType) ProtoMessage()               {}
func (*ApplicationArgoCDType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{0} }

func (m *ApplicationArgoCDType) GetGeneratedYaml() string {
	if m != nil {
		return m.GeneratedYaml
	}
	return ""
}

// K8s Dashboard configuration
//
// x-displayName: "K8s Dashboard configuration"
// description
// Parameters for K8s dashboard
type ApplicationDashboardType struct {
	// K8s YAML
	//
	// x-displayName: "K8s YAML"
	// K8s YAML for ClusterRole
	GeneratedYaml string `protobuf:"bytes,1001,opt,name=generated_yaml,json=generatedYaml,proto3" json:"generated_yaml,omitempty"`
}

func (m *ApplicationDashboardType) Reset()                    { *m = ApplicationDashboardType{} }
func (*ApplicationDashboardType) ProtoMessage()               {}
func (*ApplicationDashboardType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{1} }

func (m *ApplicationDashboardType) GetGeneratedYaml() string {
	if m != nil {
		return m.GeneratedYaml
	}
	return ""
}

// Cluster Wide Application
//
// x-displayName: "Cluster Wide Application"
// Cluster wide application configuration
type ClusterWideAppType struct {
	// Select Cluster Wide Application
	//
	// x-displayName: "Select Cluster Wide Application"
	// x-required
	// Select cluster wide application to be configured
	//
	// Types that are valid to be assigned to AppChoice:
	//	*ClusterWideAppType_ArgoCd
	//	*ClusterWideAppType_Dashboard
	AppChoice isClusterWideAppType_AppChoice `protobuf_oneof:"app_choice"`
}

func (m *ClusterWideAppType) Reset()                    { *m = ClusterWideAppType{} }
func (*ClusterWideAppType) ProtoMessage()               {}
func (*ClusterWideAppType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{2} }

type isClusterWideAppType_AppChoice interface {
	isClusterWideAppType_AppChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type ClusterWideAppType_ArgoCd struct {
	ArgoCd *ApplicationArgoCDType `protobuf:"bytes,2,opt,name=argo_cd,json=argoCd,oneof"`
}
type ClusterWideAppType_Dashboard struct {
	Dashboard *ApplicationDashboardType `protobuf:"bytes,3,opt,name=dashboard,oneof"`
}

func (*ClusterWideAppType_ArgoCd) isClusterWideAppType_AppChoice()    {}
func (*ClusterWideAppType_Dashboard) isClusterWideAppType_AppChoice() {}

func (m *ClusterWideAppType) GetAppChoice() isClusterWideAppType_AppChoice {
	if m != nil {
		return m.AppChoice
	}
	return nil
}

func (m *ClusterWideAppType) GetArgoCd() *ApplicationArgoCDType {
	if x, ok := m.GetAppChoice().(*ClusterWideAppType_ArgoCd); ok {
		return x.ArgoCd
	}
	return nil
}

func (m *ClusterWideAppType) GetDashboard() *ApplicationDashboardType {
	if x, ok := m.GetAppChoice().(*ClusterWideAppType_Dashboard); ok {
		return x.Dashboard
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ClusterWideAppType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ClusterWideAppType_OneofMarshaler, _ClusterWideAppType_OneofUnmarshaler, _ClusterWideAppType_OneofSizer, []interface{}{
		(*ClusterWideAppType_ArgoCd)(nil),
		(*ClusterWideAppType_Dashboard)(nil),
	}
}

func _ClusterWideAppType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ClusterWideAppType)
	// app_choice
	switch x := m.AppChoice.(type) {
	case *ClusterWideAppType_ArgoCd:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ArgoCd); err != nil {
			return err
		}
	case *ClusterWideAppType_Dashboard:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Dashboard); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ClusterWideAppType.AppChoice has unexpected type %T", x)
	}
	return nil
}

func _ClusterWideAppType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ClusterWideAppType)
	switch tag {
	case 2: // app_choice.argo_cd
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ApplicationArgoCDType)
		err := b.DecodeMessage(msg)
		m.AppChoice = &ClusterWideAppType_ArgoCd{msg}
		return true, err
	case 3: // app_choice.dashboard
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ApplicationDashboardType)
		err := b.DecodeMessage(msg)
		m.AppChoice = &ClusterWideAppType_Dashboard{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ClusterWideAppType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ClusterWideAppType)
	// app_choice
	switch x := m.AppChoice.(type) {
	case *ClusterWideAppType_ArgoCd:
		s := proto.Size(x.ArgoCd)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ClusterWideAppType_Dashboard:
		s := proto.Size(x.Dashboard)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Cluster Wide Application List
//
// x-displayName: "Cluster Wide Application List"
// List of cluster wide applications
type ClusterWideAppListType struct {
	// Cluster Wide Application List
	//
	// x-displayName: "Cluster Wide Application List"
	// x-required
	// List of cluster wide applications
	ClusterWideApps []*ClusterWideAppType `protobuf:"bytes,1,rep,name=cluster_wide_apps,json=clusterWideApps" json:"cluster_wide_apps,omitempty"`
}

func (m *ClusterWideAppListType) Reset()                    { *m = ClusterWideAppListType{} }
func (*ClusterWideAppListType) ProtoMessage()               {}
func (*ClusterWideAppListType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{3} }

func (m *ClusterWideAppListType) GetClusterWideApps() []*ClusterWideAppType {
	if m != nil {
		return m.ClusterWideApps
	}
	return nil
}

// Local Access Configuration
//
// x-displayName: "Local Access Configuration"
// Parameters required to enable local access
type LocalAccessConfigType struct {
	// Local Domain
	//
	// x-displayName: "Local Domain"
	// x-required
	// x-example: "example.com"
	// Local K8s API server will be accessible at <site name>.<local domain>.
	LocalDomain string `protobuf:"bytes,1,opt,name=local_domain,json=localDomain,proto3" json:"local_domain,omitempty"`
	// Select port for API server
	//
	// x-displayName: "Port for K8s API Server"
	// x-required
	// Select default or custom port for API server.
	//
	// Types that are valid to be assigned to PortChoice:
	//	*LocalAccessConfigType_DefaultPort
	//	*LocalAccessConfigType_Port
	PortChoice isLocalAccessConfigType_PortChoice `protobuf_oneof:"port_choice"`
}

func (m *LocalAccessConfigType) Reset()                    { *m = LocalAccessConfigType{} }
func (*LocalAccessConfigType) ProtoMessage()               {}
func (*LocalAccessConfigType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{4} }

type isLocalAccessConfigType_PortChoice interface {
	isLocalAccessConfigType_PortChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type LocalAccessConfigType_DefaultPort struct {
	DefaultPort *ves_io_schema4.Empty `protobuf:"bytes,3,opt,name=default_port,json=defaultPort,oneof"`
}
type LocalAccessConfigType_Port struct {
	Port uint32 `protobuf:"varint,4,opt,name=port,proto3,oneof"`
}

func (*LocalAccessConfigType_DefaultPort) isLocalAccessConfigType_PortChoice() {}
func (*LocalAccessConfigType_Port) isLocalAccessConfigType_PortChoice()        {}

func (m *LocalAccessConfigType) GetPortChoice() isLocalAccessConfigType_PortChoice {
	if m != nil {
		return m.PortChoice
	}
	return nil
}

func (m *LocalAccessConfigType) GetLocalDomain() string {
	if m != nil {
		return m.LocalDomain
	}
	return ""
}

func (m *LocalAccessConfigType) GetDefaultPort() *ves_io_schema4.Empty {
	if x, ok := m.GetPortChoice().(*LocalAccessConfigType_DefaultPort); ok {
		return x.DefaultPort
	}
	return nil
}

func (m *LocalAccessConfigType) GetPort() uint32 {
	if x, ok := m.GetPortChoice().(*LocalAccessConfigType_Port); ok {
		return x.Port
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*LocalAccessConfigType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _LocalAccessConfigType_OneofMarshaler, _LocalAccessConfigType_OneofUnmarshaler, _LocalAccessConfigType_OneofSizer, []interface{}{
		(*LocalAccessConfigType_DefaultPort)(nil),
		(*LocalAccessConfigType_Port)(nil),
	}
}

func _LocalAccessConfigType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*LocalAccessConfigType)
	// port_choice
	switch x := m.PortChoice.(type) {
	case *LocalAccessConfigType_DefaultPort:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DefaultPort); err != nil {
			return err
		}
	case *LocalAccessConfigType_Port:
		_ = b.EncodeVarint(4<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Port))
	case nil:
	default:
		return fmt.Errorf("LocalAccessConfigType.PortChoice has unexpected type %T", x)
	}
	return nil
}

func _LocalAccessConfigType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*LocalAccessConfigType)
	switch tag {
	case 3: // port_choice.default_port
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.PortChoice = &LocalAccessConfigType_DefaultPort{msg}
		return true, err
	case 4: // port_choice.port
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.PortChoice = &LocalAccessConfigType_Port{uint32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _LocalAccessConfigType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*LocalAccessConfigType)
	// port_choice
	switch x := m.PortChoice.(type) {
	case *LocalAccessConfigType_DefaultPort:
		s := proto.Size(x.DefaultPort)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *LocalAccessConfigType_Port:
		n += proto.SizeVarint(4<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Port))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Pod Security Policy List
//
// x-displayName: "Pod Security Policy List"
// List of active Pod security policies for a K8s cluster
type PodSecurityPolicyListType struct {
	// Pod Security Policy List
	//
	// x-displayName: "Pod Security Policy List"
	// x-required
	// List of active Pod security policies for a K8s cluster
	PodSecurityPolicies []*ves_io_schema_views.ObjectRefType `protobuf:"bytes,1,rep,name=pod_security_policies,json=podSecurityPolicies" json:"pod_security_policies,omitempty"`
}

func (m *PodSecurityPolicyListType) Reset()                    { *m = PodSecurityPolicyListType{} }
func (*PodSecurityPolicyListType) ProtoMessage()               {}
func (*PodSecurityPolicyListType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{5} }

func (m *PodSecurityPolicyListType) GetPodSecurityPolicies() []*ves_io_schema_views.ObjectRefType {
	if m != nil {
		return m.PodSecurityPolicies
	}
	return nil
}

// Cluster Role List
//
// x-displayName: "Cluster Role List"
// List of active cluster role list for a K8s cluster
type ClusterRoleListType struct {
	// Cluster Role List
	//
	// x-displayName: "Cluster Role List"
	// x-required
	// List of active cluster role list for a K8s cluster
	ClusterRoles []*ves_io_schema_views.ObjectRefType `protobuf:"bytes,1,rep,name=cluster_roles,json=clusterRoles" json:"cluster_roles,omitempty"`
}

func (m *ClusterRoleListType) Reset()                    { *m = ClusterRoleListType{} }
func (*ClusterRoleListType) ProtoMessage()               {}
func (*ClusterRoleListType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{6} }

func (m *ClusterRoleListType) GetClusterRoles() []*ves_io_schema_views.ObjectRefType {
	if m != nil {
		return m.ClusterRoles
	}
	return nil
}

// Cluster Role Binding List
//
// x-displayName: "Cluster Role Binding List"
// List of active cluster role binding list for a K8s cluster
type ClusterRoleBindingListType struct {
	// Cluster Role Binding List
	//
	// x-displayName: "Cluster Role Binding List"
	// x-required
	// List of active cluster role binding list for a K8s cluster
	ClusterRoleBindings []*ves_io_schema_views.ObjectRefType `protobuf:"bytes,1,rep,name=cluster_role_bindings,json=clusterRoleBindings" json:"cluster_role_bindings,omitempty"`
}

func (m *ClusterRoleBindingListType) Reset()                    { *m = ClusterRoleBindingListType{} }
func (*ClusterRoleBindingListType) ProtoMessage()               {}
func (*ClusterRoleBindingListType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{7} }

func (m *ClusterRoleBindingListType) GetClusterRoleBindings() []*ves_io_schema_views.ObjectRefType {
	if m != nil {
		return m.ClusterRoleBindings
	}
	return nil
}

// GlobalSpecType
//
// x-displayName: "Global Configuration Specification"
// Configuration specification for K8s Cluster
type GlobalSpecType struct {
	// Site Local Access
	//
	// x-displayName: "Site Local Access"
	// x-required
	// Enable/Disable choice for local access to the site K8s API server
	//
	// Types that are valid to be assigned to LocalAccessChoice:
	//	*GlobalSpecType_NoLocalAccess
	//	*GlobalSpecType_LocalAccessConfig
	LocalAccessChoice isGlobalSpecType_LocalAccessChoice `protobuf_oneof:"local_access_choice"`
	// VoltConsole Access
	//
	// x-displayName: "VoltConsole Access"
	// x-required
	// Enable/Disable choice for VoltConsole access to site K8s API server
	//
	// Types that are valid to be assigned to GlobalAccessChoice:
	//	*GlobalSpecType_NoGlobalAccess
	//	*GlobalSpecType_GlobalAccessEnable
	GlobalAccessChoice isGlobalSpecType_GlobalAccessChoice `protobuf_oneof:"global_access_choice"`
	// POD Security Policies
	//
	// x-displayName: "POD Security Policies"
	// x-required
	// Select pod security policies for this K8s cluster
	//
	// Types that are valid to be assigned to PodSecurityPolicyChoice:
	//	*GlobalSpecType_UseDefaultPsp
	//	*GlobalSpecType_UseCustomPspList
	PodSecurityPolicyChoice isGlobalSpecType_PodSecurityPolicyChoice `protobuf_oneof:"pod_security_policy_choice"`
	// K8s Cluster Role
	//
	// x-displayName: "K8s Cluster Roles"
	// x-required
	// Select K8s Cluster Role for this K8s cluster
	//
	// Types that are valid to be assigned to ClusterRoleChoice:
	//	*GlobalSpecType_UseDefaultClusterRoles
	//	*GlobalSpecType_UseCustomClusterRoleList
	ClusterRoleChoice isGlobalSpecType_ClusterRoleChoice `protobuf_oneof:"cluster_role_choice"`
	// K8s Cluster Role Binding
	//
	// x-displayName: "K8s Cluster Role Bindings"
	// x-required
	// Select K8s Cluster Role bindings for this K8s cluster
	//
	// Types that are valid to be assigned to ClusterRoleBindingsChoice:
	//	*GlobalSpecType_UseDefaultClusterRoleBindings
	//	*GlobalSpecType_UseCustomClusterRoleBindings
	ClusterRoleBindingsChoice isGlobalSpecType_ClusterRoleBindingsChoice `protobuf_oneof:"cluster_role_bindings_choice"`
	// K8s Cluster Wide Application
	//
	// x-displayName: "K8s Cluster Wide Applications"
	// x-required
	// Select K8s Cluster wide applications to be deployed
	//
	// Types that are valid to be assigned to AppsChoice:
	//	*GlobalSpecType_NoClusterWideApps
	//	*GlobalSpecType_ClusterWideAppList
	AppsChoice isGlobalSpecType_AppsChoice `protobuf_oneof:"apps_choice"`
	// view_internal
	//
	// x-displayName: "View Internal"
	// Reference to view internal object
	ViewInternal *ves_io_schema_views.ObjectRefType `protobuf:"bytes,1000,opt,name=view_internal,json=viewInternal" json:"view_internal,omitempty"`
	// Internal Cluster Role Binding List
	//
	// x-displayName: "Internal Cluster Role Binding LIst"
	// Internal Cluster Role binding List default + custom
	FinalClusterRoleBindings []*ves_io_schema_views.ObjectRefType `protobuf:"bytes,1001,rep,name=final_cluster_role_bindings,json=finalClusterRoleBindings" json:"final_cluster_role_bindings,omitempty"`
	// Internal Cluster Role List
	//
	// x-displayName: "Internal Cluster Role LIst"
	// Internal Cluster Role List default + custom
	FinalClusterRoles []*ves_io_schema_views.ObjectRefType `protobuf:"bytes,1002,rep,name=final_cluster_roles,json=finalClusterRoles" json:"final_cluster_roles,omitempty"`
	// Internal Pod Security Policy List
	//
	// x-displayName: "Internal Pod Security Policy  LIst"
	// Internal Pod Security Policy List is default or custom
	FinalPodSecurityPolicies []*ves_io_schema_views.ObjectRefType `protobuf:"bytes,1003,rep,name=final_pod_security_policies,json=finalPodSecurityPolicies" json:"final_pod_security_policies,omitempty"`
}

func (m *GlobalSpecType) Reset()                    { *m = GlobalSpecType{} }
func (*GlobalSpecType) ProtoMessage()               {}
func (*GlobalSpecType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{8} }

type isGlobalSpecType_LocalAccessChoice interface {
	isGlobalSpecType_LocalAccessChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGlobalSpecType_GlobalAccessChoice interface {
	isGlobalSpecType_GlobalAccessChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGlobalSpecType_PodSecurityPolicyChoice interface {
	isGlobalSpecType_PodSecurityPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGlobalSpecType_ClusterRoleChoice interface {
	isGlobalSpecType_ClusterRoleChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGlobalSpecType_ClusterRoleBindingsChoice interface {
	isGlobalSpecType_ClusterRoleBindingsChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGlobalSpecType_AppsChoice interface {
	isGlobalSpecType_AppsChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type GlobalSpecType_NoLocalAccess struct {
	NoLocalAccess *ves_io_schema4.Empty `protobuf:"bytes,2,opt,name=no_local_access,json=noLocalAccess,oneof"`
}
type GlobalSpecType_LocalAccessConfig struct {
	LocalAccessConfig *LocalAccessConfigType `protobuf:"bytes,3,opt,name=local_access_config,json=localAccessConfig,oneof"`
}
type GlobalSpecType_NoGlobalAccess struct {
	NoGlobalAccess *ves_io_schema4.Empty `protobuf:"bytes,5,opt,name=no_global_access,json=noGlobalAccess,oneof"`
}
type GlobalSpecType_GlobalAccessEnable struct {
	GlobalAccessEnable *ves_io_schema4.Empty `protobuf:"bytes,6,opt,name=global_access_enable,json=globalAccessEnable,oneof"`
}
type GlobalSpecType_UseDefaultPsp struct {
	UseDefaultPsp *ves_io_schema4.Empty `protobuf:"bytes,8,opt,name=use_default_psp,json=useDefaultPsp,oneof"`
}
type GlobalSpecType_UseCustomPspList struct {
	UseCustomPspList *PodSecurityPolicyListType `protobuf:"bytes,9,opt,name=use_custom_psp_list,json=useCustomPspList,oneof"`
}
type GlobalSpecType_UseDefaultClusterRoles struct {
	UseDefaultClusterRoles *ves_io_schema4.Empty `protobuf:"bytes,11,opt,name=use_default_cluster_roles,json=useDefaultClusterRoles,oneof"`
}
type GlobalSpecType_UseCustomClusterRoleList struct {
	UseCustomClusterRoleList *ClusterRoleListType `protobuf:"bytes,12,opt,name=use_custom_cluster_role_list,json=useCustomClusterRoleList,oneof"`
}
type GlobalSpecType_UseDefaultClusterRoleBindings struct {
	UseDefaultClusterRoleBindings *ves_io_schema4.Empty `protobuf:"bytes,14,opt,name=use_default_cluster_role_bindings,json=useDefaultClusterRoleBindings,oneof"`
}
type GlobalSpecType_UseCustomClusterRoleBindings struct {
	UseCustomClusterRoleBindings *ClusterRoleBindingListType `protobuf:"bytes,15,opt,name=use_custom_cluster_role_bindings,json=useCustomClusterRoleBindings,oneof"`
}
type GlobalSpecType_NoClusterWideApps struct {
	NoClusterWideApps *ves_io_schema4.Empty `protobuf:"bytes,17,opt,name=no_cluster_wide_apps,json=noClusterWideApps,oneof"`
}
type GlobalSpecType_ClusterWideAppList struct {
	ClusterWideAppList *ClusterWideAppListType `protobuf:"bytes,18,opt,name=cluster_wide_app_list,json=clusterWideAppList,oneof"`
}

func (*GlobalSpecType_NoLocalAccess) isGlobalSpecType_LocalAccessChoice()                         {}
func (*GlobalSpecType_LocalAccessConfig) isGlobalSpecType_LocalAccessChoice()                     {}
func (*GlobalSpecType_NoGlobalAccess) isGlobalSpecType_GlobalAccessChoice()                       {}
func (*GlobalSpecType_GlobalAccessEnable) isGlobalSpecType_GlobalAccessChoice()                   {}
func (*GlobalSpecType_UseDefaultPsp) isGlobalSpecType_PodSecurityPolicyChoice()                   {}
func (*GlobalSpecType_UseCustomPspList) isGlobalSpecType_PodSecurityPolicyChoice()                {}
func (*GlobalSpecType_UseDefaultClusterRoles) isGlobalSpecType_ClusterRoleChoice()                {}
func (*GlobalSpecType_UseCustomClusterRoleList) isGlobalSpecType_ClusterRoleChoice()              {}
func (*GlobalSpecType_UseDefaultClusterRoleBindings) isGlobalSpecType_ClusterRoleBindingsChoice() {}
func (*GlobalSpecType_UseCustomClusterRoleBindings) isGlobalSpecType_ClusterRoleBindingsChoice()  {}
func (*GlobalSpecType_NoClusterWideApps) isGlobalSpecType_AppsChoice()                            {}
func (*GlobalSpecType_ClusterWideAppList) isGlobalSpecType_AppsChoice()                           {}

func (m *GlobalSpecType) GetLocalAccessChoice() isGlobalSpecType_LocalAccessChoice {
	if m != nil {
		return m.LocalAccessChoice
	}
	return nil
}
func (m *GlobalSpecType) GetGlobalAccessChoice() isGlobalSpecType_GlobalAccessChoice {
	if m != nil {
		return m.GlobalAccessChoice
	}
	return nil
}
func (m *GlobalSpecType) GetPodSecurityPolicyChoice() isGlobalSpecType_PodSecurityPolicyChoice {
	if m != nil {
		return m.PodSecurityPolicyChoice
	}
	return nil
}
func (m *GlobalSpecType) GetClusterRoleChoice() isGlobalSpecType_ClusterRoleChoice {
	if m != nil {
		return m.ClusterRoleChoice
	}
	return nil
}
func (m *GlobalSpecType) GetClusterRoleBindingsChoice() isGlobalSpecType_ClusterRoleBindingsChoice {
	if m != nil {
		return m.ClusterRoleBindingsChoice
	}
	return nil
}
func (m *GlobalSpecType) GetAppsChoice() isGlobalSpecType_AppsChoice {
	if m != nil {
		return m.AppsChoice
	}
	return nil
}

func (m *GlobalSpecType) GetNoLocalAccess() *ves_io_schema4.Empty {
	if x, ok := m.GetLocalAccessChoice().(*GlobalSpecType_NoLocalAccess); ok {
		return x.NoLocalAccess
	}
	return nil
}

func (m *GlobalSpecType) GetLocalAccessConfig() *LocalAccessConfigType {
	if x, ok := m.GetLocalAccessChoice().(*GlobalSpecType_LocalAccessConfig); ok {
		return x.LocalAccessConfig
	}
	return nil
}

func (m *GlobalSpecType) GetNoGlobalAccess() *ves_io_schema4.Empty {
	if x, ok := m.GetGlobalAccessChoice().(*GlobalSpecType_NoGlobalAccess); ok {
		return x.NoGlobalAccess
	}
	return nil
}

func (m *GlobalSpecType) GetGlobalAccessEnable() *ves_io_schema4.Empty {
	if x, ok := m.GetGlobalAccessChoice().(*GlobalSpecType_GlobalAccessEnable); ok {
		return x.GlobalAccessEnable
	}
	return nil
}

func (m *GlobalSpecType) GetUseDefaultPsp() *ves_io_schema4.Empty {
	if x, ok := m.GetPodSecurityPolicyChoice().(*GlobalSpecType_UseDefaultPsp); ok {
		return x.UseDefaultPsp
	}
	return nil
}

func (m *GlobalSpecType) GetUseCustomPspList() *PodSecurityPolicyListType {
	if x, ok := m.GetPodSecurityPolicyChoice().(*GlobalSpecType_UseCustomPspList); ok {
		return x.UseCustomPspList
	}
	return nil
}

func (m *GlobalSpecType) GetUseDefaultClusterRoles() *ves_io_schema4.Empty {
	if x, ok := m.GetClusterRoleChoice().(*GlobalSpecType_UseDefaultClusterRoles); ok {
		return x.UseDefaultClusterRoles
	}
	return nil
}

func (m *GlobalSpecType) GetUseCustomClusterRoleList() *ClusterRoleListType {
	if x, ok := m.GetClusterRoleChoice().(*GlobalSpecType_UseCustomClusterRoleList); ok {
		return x.UseCustomClusterRoleList
	}
	return nil
}

func (m *GlobalSpecType) GetUseDefaultClusterRoleBindings() *ves_io_schema4.Empty {
	if x, ok := m.GetClusterRoleBindingsChoice().(*GlobalSpecType_UseDefaultClusterRoleBindings); ok {
		return x.UseDefaultClusterRoleBindings
	}
	return nil
}

func (m *GlobalSpecType) GetUseCustomClusterRoleBindings() *ClusterRoleBindingListType {
	if x, ok := m.GetClusterRoleBindingsChoice().(*GlobalSpecType_UseCustomClusterRoleBindings); ok {
		return x.UseCustomClusterRoleBindings
	}
	return nil
}

func (m *GlobalSpecType) GetNoClusterWideApps() *ves_io_schema4.Empty {
	if x, ok := m.GetAppsChoice().(*GlobalSpecType_NoClusterWideApps); ok {
		return x.NoClusterWideApps
	}
	return nil
}

func (m *GlobalSpecType) GetClusterWideAppList() *ClusterWideAppListType {
	if x, ok := m.GetAppsChoice().(*GlobalSpecType_ClusterWideAppList); ok {
		return x.ClusterWideAppList
	}
	return nil
}

func (m *GlobalSpecType) GetViewInternal() *ves_io_schema_views.ObjectRefType {
	if m != nil {
		return m.ViewInternal
	}
	return nil
}

func (m *GlobalSpecType) GetFinalClusterRoleBindings() []*ves_io_schema_views.ObjectRefType {
	if m != nil {
		return m.FinalClusterRoleBindings
	}
	return nil
}

func (m *GlobalSpecType) GetFinalClusterRoles() []*ves_io_schema_views.ObjectRefType {
	if m != nil {
		return m.FinalClusterRoles
	}
	return nil
}

func (m *GlobalSpecType) GetFinalPodSecurityPolicies() []*ves_io_schema_views.ObjectRefType {
	if m != nil {
		return m.FinalPodSecurityPolicies
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GlobalSpecType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GlobalSpecType_OneofMarshaler, _GlobalSpecType_OneofUnmarshaler, _GlobalSpecType_OneofSizer, []interface{}{
		(*GlobalSpecType_NoLocalAccess)(nil),
		(*GlobalSpecType_LocalAccessConfig)(nil),
		(*GlobalSpecType_NoGlobalAccess)(nil),
		(*GlobalSpecType_GlobalAccessEnable)(nil),
		(*GlobalSpecType_UseDefaultPsp)(nil),
		(*GlobalSpecType_UseCustomPspList)(nil),
		(*GlobalSpecType_UseDefaultClusterRoles)(nil),
		(*GlobalSpecType_UseCustomClusterRoleList)(nil),
		(*GlobalSpecType_UseDefaultClusterRoleBindings)(nil),
		(*GlobalSpecType_UseCustomClusterRoleBindings)(nil),
		(*GlobalSpecType_NoClusterWideApps)(nil),
		(*GlobalSpecType_ClusterWideAppList)(nil),
	}
}

func _GlobalSpecType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GlobalSpecType)
	// local_access_choice
	switch x := m.LocalAccessChoice.(type) {
	case *GlobalSpecType_NoLocalAccess:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoLocalAccess); err != nil {
			return err
		}
	case *GlobalSpecType_LocalAccessConfig:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LocalAccessConfig); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GlobalSpecType.LocalAccessChoice has unexpected type %T", x)
	}
	// global_access_choice
	switch x := m.GlobalAccessChoice.(type) {
	case *GlobalSpecType_NoGlobalAccess:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoGlobalAccess); err != nil {
			return err
		}
	case *GlobalSpecType_GlobalAccessEnable:
		_ = b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GlobalAccessEnable); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GlobalSpecType.GlobalAccessChoice has unexpected type %T", x)
	}
	// pod_security_policy_choice
	switch x := m.PodSecurityPolicyChoice.(type) {
	case *GlobalSpecType_UseDefaultPsp:
		_ = b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseDefaultPsp); err != nil {
			return err
		}
	case *GlobalSpecType_UseCustomPspList:
		_ = b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseCustomPspList); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GlobalSpecType.PodSecurityPolicyChoice has unexpected type %T", x)
	}
	// cluster_role_choice
	switch x := m.ClusterRoleChoice.(type) {
	case *GlobalSpecType_UseDefaultClusterRoles:
		_ = b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseDefaultClusterRoles); err != nil {
			return err
		}
	case *GlobalSpecType_UseCustomClusterRoleList:
		_ = b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseCustomClusterRoleList); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GlobalSpecType.ClusterRoleChoice has unexpected type %T", x)
	}
	// cluster_role_bindings_choice
	switch x := m.ClusterRoleBindingsChoice.(type) {
	case *GlobalSpecType_UseDefaultClusterRoleBindings:
		_ = b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseDefaultClusterRoleBindings); err != nil {
			return err
		}
	case *GlobalSpecType_UseCustomClusterRoleBindings:
		_ = b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseCustomClusterRoleBindings); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GlobalSpecType.ClusterRoleBindingsChoice has unexpected type %T", x)
	}
	// apps_choice
	switch x := m.AppsChoice.(type) {
	case *GlobalSpecType_NoClusterWideApps:
		_ = b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoClusterWideApps); err != nil {
			return err
		}
	case *GlobalSpecType_ClusterWideAppList:
		_ = b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ClusterWideAppList); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GlobalSpecType.AppsChoice has unexpected type %T", x)
	}
	return nil
}

func _GlobalSpecType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GlobalSpecType)
	switch tag {
	case 2: // local_access_choice.no_local_access
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.LocalAccessChoice = &GlobalSpecType_NoLocalAccess{msg}
		return true, err
	case 3: // local_access_choice.local_access_config
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LocalAccessConfigType)
		err := b.DecodeMessage(msg)
		m.LocalAccessChoice = &GlobalSpecType_LocalAccessConfig{msg}
		return true, err
	case 5: // global_access_choice.no_global_access
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.GlobalAccessChoice = &GlobalSpecType_NoGlobalAccess{msg}
		return true, err
	case 6: // global_access_choice.global_access_enable
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.GlobalAccessChoice = &GlobalSpecType_GlobalAccessEnable{msg}
		return true, err
	case 8: // pod_security_policy_choice.use_default_psp
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.PodSecurityPolicyChoice = &GlobalSpecType_UseDefaultPsp{msg}
		return true, err
	case 9: // pod_security_policy_choice.use_custom_psp_list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PodSecurityPolicyListType)
		err := b.DecodeMessage(msg)
		m.PodSecurityPolicyChoice = &GlobalSpecType_UseCustomPspList{msg}
		return true, err
	case 11: // cluster_role_choice.use_default_cluster_roles
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.ClusterRoleChoice = &GlobalSpecType_UseDefaultClusterRoles{msg}
		return true, err
	case 12: // cluster_role_choice.use_custom_cluster_role_list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ClusterRoleListType)
		err := b.DecodeMessage(msg)
		m.ClusterRoleChoice = &GlobalSpecType_UseCustomClusterRoleList{msg}
		return true, err
	case 14: // cluster_role_bindings_choice.use_default_cluster_role_bindings
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.ClusterRoleBindingsChoice = &GlobalSpecType_UseDefaultClusterRoleBindings{msg}
		return true, err
	case 15: // cluster_role_bindings_choice.use_custom_cluster_role_bindings
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ClusterRoleBindingListType)
		err := b.DecodeMessage(msg)
		m.ClusterRoleBindingsChoice = &GlobalSpecType_UseCustomClusterRoleBindings{msg}
		return true, err
	case 17: // apps_choice.no_cluster_wide_apps
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.AppsChoice = &GlobalSpecType_NoClusterWideApps{msg}
		return true, err
	case 18: // apps_choice.cluster_wide_app_list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ClusterWideAppListType)
		err := b.DecodeMessage(msg)
		m.AppsChoice = &GlobalSpecType_ClusterWideAppList{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GlobalSpecType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GlobalSpecType)
	// local_access_choice
	switch x := m.LocalAccessChoice.(type) {
	case *GlobalSpecType_NoLocalAccess:
		s := proto.Size(x.NoLocalAccess)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GlobalSpecType_LocalAccessConfig:
		s := proto.Size(x.LocalAccessConfig)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// global_access_choice
	switch x := m.GlobalAccessChoice.(type) {
	case *GlobalSpecType_NoGlobalAccess:
		s := proto.Size(x.NoGlobalAccess)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GlobalSpecType_GlobalAccessEnable:
		s := proto.Size(x.GlobalAccessEnable)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// pod_security_policy_choice
	switch x := m.PodSecurityPolicyChoice.(type) {
	case *GlobalSpecType_UseDefaultPsp:
		s := proto.Size(x.UseDefaultPsp)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GlobalSpecType_UseCustomPspList:
		s := proto.Size(x.UseCustomPspList)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// cluster_role_choice
	switch x := m.ClusterRoleChoice.(type) {
	case *GlobalSpecType_UseDefaultClusterRoles:
		s := proto.Size(x.UseDefaultClusterRoles)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GlobalSpecType_UseCustomClusterRoleList:
		s := proto.Size(x.UseCustomClusterRoleList)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// cluster_role_bindings_choice
	switch x := m.ClusterRoleBindingsChoice.(type) {
	case *GlobalSpecType_UseDefaultClusterRoleBindings:
		s := proto.Size(x.UseDefaultClusterRoleBindings)
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GlobalSpecType_UseCustomClusterRoleBindings:
		s := proto.Size(x.UseCustomClusterRoleBindings)
		n += proto.SizeVarint(15<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// apps_choice
	switch x := m.AppsChoice.(type) {
	case *GlobalSpecType_NoClusterWideApps:
		s := proto.Size(x.NoClusterWideApps)
		n += proto.SizeVarint(17<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GlobalSpecType_ClusterWideAppList:
		s := proto.Size(x.ClusterWideAppList)
		n += proto.SizeVarint(18<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Create k8s_cluster
//
// x-displayName: "Create Configuration Specification"
// Create k8s_cluster will create the object in the storage backend for namespace metadata.namespace
type CreateSpecType struct {
	// Types that are valid to be assigned to LocalAccessChoice:
	//	*CreateSpecType_NoLocalAccess
	//	*CreateSpecType_LocalAccessConfig
	LocalAccessChoice isCreateSpecType_LocalAccessChoice `protobuf_oneof:"local_access_choice"`
	// Types that are valid to be assigned to GlobalAccessChoice:
	//	*CreateSpecType_NoGlobalAccess
	//	*CreateSpecType_GlobalAccessEnable
	GlobalAccessChoice isCreateSpecType_GlobalAccessChoice `protobuf_oneof:"global_access_choice"`
	// Types that are valid to be assigned to PodSecurityPolicyChoice:
	//	*CreateSpecType_UseDefaultPsp
	//	*CreateSpecType_UseCustomPspList
	PodSecurityPolicyChoice isCreateSpecType_PodSecurityPolicyChoice `protobuf_oneof:"pod_security_policy_choice"`
	// Types that are valid to be assigned to ClusterRoleChoice:
	//	*CreateSpecType_UseDefaultClusterRoles
	//	*CreateSpecType_UseCustomClusterRoleList
	ClusterRoleChoice isCreateSpecType_ClusterRoleChoice `protobuf_oneof:"cluster_role_choice"`
	// Types that are valid to be assigned to ClusterRoleBindingsChoice:
	//	*CreateSpecType_UseDefaultClusterRoleBindings
	//	*CreateSpecType_UseCustomClusterRoleBindings
	ClusterRoleBindingsChoice isCreateSpecType_ClusterRoleBindingsChoice `protobuf_oneof:"cluster_role_bindings_choice"`
}

func (m *CreateSpecType) Reset()                    { *m = CreateSpecType{} }
func (*CreateSpecType) ProtoMessage()               {}
func (*CreateSpecType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{9} }

type isCreateSpecType_LocalAccessChoice interface {
	isCreateSpecType_LocalAccessChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isCreateSpecType_GlobalAccessChoice interface {
	isCreateSpecType_GlobalAccessChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isCreateSpecType_PodSecurityPolicyChoice interface {
	isCreateSpecType_PodSecurityPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isCreateSpecType_ClusterRoleChoice interface {
	isCreateSpecType_ClusterRoleChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isCreateSpecType_ClusterRoleBindingsChoice interface {
	isCreateSpecType_ClusterRoleBindingsChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type CreateSpecType_NoLocalAccess struct {
	NoLocalAccess *ves_io_schema4.Empty `protobuf:"bytes,2,opt,name=no_local_access,json=noLocalAccess,oneof"`
}
type CreateSpecType_LocalAccessConfig struct {
	LocalAccessConfig *LocalAccessConfigType `protobuf:"bytes,3,opt,name=local_access_config,json=localAccessConfig,oneof"`
}
type CreateSpecType_NoGlobalAccess struct {
	NoGlobalAccess *ves_io_schema4.Empty `protobuf:"bytes,5,opt,name=no_global_access,json=noGlobalAccess,oneof"`
}
type CreateSpecType_GlobalAccessEnable struct {
	GlobalAccessEnable *ves_io_schema4.Empty `protobuf:"bytes,6,opt,name=global_access_enable,json=globalAccessEnable,oneof"`
}
type CreateSpecType_UseDefaultPsp struct {
	UseDefaultPsp *ves_io_schema4.Empty `protobuf:"bytes,8,opt,name=use_default_psp,json=useDefaultPsp,oneof"`
}
type CreateSpecType_UseCustomPspList struct {
	UseCustomPspList *PodSecurityPolicyListType `protobuf:"bytes,9,opt,name=use_custom_psp_list,json=useCustomPspList,oneof"`
}
type CreateSpecType_UseDefaultClusterRoles struct {
	UseDefaultClusterRoles *ves_io_schema4.Empty `protobuf:"bytes,11,opt,name=use_default_cluster_roles,json=useDefaultClusterRoles,oneof"`
}
type CreateSpecType_UseCustomClusterRoleList struct {
	UseCustomClusterRoleList *ClusterRoleListType `protobuf:"bytes,12,opt,name=use_custom_cluster_role_list,json=useCustomClusterRoleList,oneof"`
}
type CreateSpecType_UseDefaultClusterRoleBindings struct {
	UseDefaultClusterRoleBindings *ves_io_schema4.Empty `protobuf:"bytes,14,opt,name=use_default_cluster_role_bindings,json=useDefaultClusterRoleBindings,oneof"`
}
type CreateSpecType_UseCustomClusterRoleBindings struct {
	UseCustomClusterRoleBindings *ClusterRoleBindingListType `protobuf:"bytes,15,opt,name=use_custom_cluster_role_bindings,json=useCustomClusterRoleBindings,oneof"`
}

func (*CreateSpecType_NoLocalAccess) isCreateSpecType_LocalAccessChoice()                         {}
func (*CreateSpecType_LocalAccessConfig) isCreateSpecType_LocalAccessChoice()                     {}
func (*CreateSpecType_NoGlobalAccess) isCreateSpecType_GlobalAccessChoice()                       {}
func (*CreateSpecType_GlobalAccessEnable) isCreateSpecType_GlobalAccessChoice()                   {}
func (*CreateSpecType_UseDefaultPsp) isCreateSpecType_PodSecurityPolicyChoice()                   {}
func (*CreateSpecType_UseCustomPspList) isCreateSpecType_PodSecurityPolicyChoice()                {}
func (*CreateSpecType_UseDefaultClusterRoles) isCreateSpecType_ClusterRoleChoice()                {}
func (*CreateSpecType_UseCustomClusterRoleList) isCreateSpecType_ClusterRoleChoice()              {}
func (*CreateSpecType_UseDefaultClusterRoleBindings) isCreateSpecType_ClusterRoleBindingsChoice() {}
func (*CreateSpecType_UseCustomClusterRoleBindings) isCreateSpecType_ClusterRoleBindingsChoice()  {}

func (m *CreateSpecType) GetLocalAccessChoice() isCreateSpecType_LocalAccessChoice {
	if m != nil {
		return m.LocalAccessChoice
	}
	return nil
}
func (m *CreateSpecType) GetGlobalAccessChoice() isCreateSpecType_GlobalAccessChoice {
	if m != nil {
		return m.GlobalAccessChoice
	}
	return nil
}
func (m *CreateSpecType) GetPodSecurityPolicyChoice() isCreateSpecType_PodSecurityPolicyChoice {
	if m != nil {
		return m.PodSecurityPolicyChoice
	}
	return nil
}
func (m *CreateSpecType) GetClusterRoleChoice() isCreateSpecType_ClusterRoleChoice {
	if m != nil {
		return m.ClusterRoleChoice
	}
	return nil
}
func (m *CreateSpecType) GetClusterRoleBindingsChoice() isCreateSpecType_ClusterRoleBindingsChoice {
	if m != nil {
		return m.ClusterRoleBindingsChoice
	}
	return nil
}

func (m *CreateSpecType) GetNoLocalAccess() *ves_io_schema4.Empty {
	if x, ok := m.GetLocalAccessChoice().(*CreateSpecType_NoLocalAccess); ok {
		return x.NoLocalAccess
	}
	return nil
}

func (m *CreateSpecType) GetLocalAccessConfig() *LocalAccessConfigType {
	if x, ok := m.GetLocalAccessChoice().(*CreateSpecType_LocalAccessConfig); ok {
		return x.LocalAccessConfig
	}
	return nil
}

func (m *CreateSpecType) GetNoGlobalAccess() *ves_io_schema4.Empty {
	if x, ok := m.GetGlobalAccessChoice().(*CreateSpecType_NoGlobalAccess); ok {
		return x.NoGlobalAccess
	}
	return nil
}

func (m *CreateSpecType) GetGlobalAccessEnable() *ves_io_schema4.Empty {
	if x, ok := m.GetGlobalAccessChoice().(*CreateSpecType_GlobalAccessEnable); ok {
		return x.GlobalAccessEnable
	}
	return nil
}

func (m *CreateSpecType) GetUseDefaultPsp() *ves_io_schema4.Empty {
	if x, ok := m.GetPodSecurityPolicyChoice().(*CreateSpecType_UseDefaultPsp); ok {
		return x.UseDefaultPsp
	}
	return nil
}

func (m *CreateSpecType) GetUseCustomPspList() *PodSecurityPolicyListType {
	if x, ok := m.GetPodSecurityPolicyChoice().(*CreateSpecType_UseCustomPspList); ok {
		return x.UseCustomPspList
	}
	return nil
}

func (m *CreateSpecType) GetUseDefaultClusterRoles() *ves_io_schema4.Empty {
	if x, ok := m.GetClusterRoleChoice().(*CreateSpecType_UseDefaultClusterRoles); ok {
		return x.UseDefaultClusterRoles
	}
	return nil
}

func (m *CreateSpecType) GetUseCustomClusterRoleList() *ClusterRoleListType {
	if x, ok := m.GetClusterRoleChoice().(*CreateSpecType_UseCustomClusterRoleList); ok {
		return x.UseCustomClusterRoleList
	}
	return nil
}

func (m *CreateSpecType) GetUseDefaultClusterRoleBindings() *ves_io_schema4.Empty {
	if x, ok := m.GetClusterRoleBindingsChoice().(*CreateSpecType_UseDefaultClusterRoleBindings); ok {
		return x.UseDefaultClusterRoleBindings
	}
	return nil
}

func (m *CreateSpecType) GetUseCustomClusterRoleBindings() *ClusterRoleBindingListType {
	if x, ok := m.GetClusterRoleBindingsChoice().(*CreateSpecType_UseCustomClusterRoleBindings); ok {
		return x.UseCustomClusterRoleBindings
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CreateSpecType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CreateSpecType_OneofMarshaler, _CreateSpecType_OneofUnmarshaler, _CreateSpecType_OneofSizer, []interface{}{
		(*CreateSpecType_NoLocalAccess)(nil),
		(*CreateSpecType_LocalAccessConfig)(nil),
		(*CreateSpecType_NoGlobalAccess)(nil),
		(*CreateSpecType_GlobalAccessEnable)(nil),
		(*CreateSpecType_UseDefaultPsp)(nil),
		(*CreateSpecType_UseCustomPspList)(nil),
		(*CreateSpecType_UseDefaultClusterRoles)(nil),
		(*CreateSpecType_UseCustomClusterRoleList)(nil),
		(*CreateSpecType_UseDefaultClusterRoleBindings)(nil),
		(*CreateSpecType_UseCustomClusterRoleBindings)(nil),
	}
}

func _CreateSpecType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CreateSpecType)
	// local_access_choice
	switch x := m.LocalAccessChoice.(type) {
	case *CreateSpecType_NoLocalAccess:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoLocalAccess); err != nil {
			return err
		}
	case *CreateSpecType_LocalAccessConfig:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LocalAccessConfig); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CreateSpecType.LocalAccessChoice has unexpected type %T", x)
	}
	// global_access_choice
	switch x := m.GlobalAccessChoice.(type) {
	case *CreateSpecType_NoGlobalAccess:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoGlobalAccess); err != nil {
			return err
		}
	case *CreateSpecType_GlobalAccessEnable:
		_ = b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GlobalAccessEnable); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CreateSpecType.GlobalAccessChoice has unexpected type %T", x)
	}
	// pod_security_policy_choice
	switch x := m.PodSecurityPolicyChoice.(type) {
	case *CreateSpecType_UseDefaultPsp:
		_ = b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseDefaultPsp); err != nil {
			return err
		}
	case *CreateSpecType_UseCustomPspList:
		_ = b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseCustomPspList); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CreateSpecType.PodSecurityPolicyChoice has unexpected type %T", x)
	}
	// cluster_role_choice
	switch x := m.ClusterRoleChoice.(type) {
	case *CreateSpecType_UseDefaultClusterRoles:
		_ = b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseDefaultClusterRoles); err != nil {
			return err
		}
	case *CreateSpecType_UseCustomClusterRoleList:
		_ = b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseCustomClusterRoleList); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CreateSpecType.ClusterRoleChoice has unexpected type %T", x)
	}
	// cluster_role_bindings_choice
	switch x := m.ClusterRoleBindingsChoice.(type) {
	case *CreateSpecType_UseDefaultClusterRoleBindings:
		_ = b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseDefaultClusterRoleBindings); err != nil {
			return err
		}
	case *CreateSpecType_UseCustomClusterRoleBindings:
		_ = b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseCustomClusterRoleBindings); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CreateSpecType.ClusterRoleBindingsChoice has unexpected type %T", x)
	}
	return nil
}

func _CreateSpecType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CreateSpecType)
	switch tag {
	case 2: // local_access_choice.no_local_access
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.LocalAccessChoice = &CreateSpecType_NoLocalAccess{msg}
		return true, err
	case 3: // local_access_choice.local_access_config
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LocalAccessConfigType)
		err := b.DecodeMessage(msg)
		m.LocalAccessChoice = &CreateSpecType_LocalAccessConfig{msg}
		return true, err
	case 5: // global_access_choice.no_global_access
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.GlobalAccessChoice = &CreateSpecType_NoGlobalAccess{msg}
		return true, err
	case 6: // global_access_choice.global_access_enable
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.GlobalAccessChoice = &CreateSpecType_GlobalAccessEnable{msg}
		return true, err
	case 8: // pod_security_policy_choice.use_default_psp
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.PodSecurityPolicyChoice = &CreateSpecType_UseDefaultPsp{msg}
		return true, err
	case 9: // pod_security_policy_choice.use_custom_psp_list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PodSecurityPolicyListType)
		err := b.DecodeMessage(msg)
		m.PodSecurityPolicyChoice = &CreateSpecType_UseCustomPspList{msg}
		return true, err
	case 11: // cluster_role_choice.use_default_cluster_roles
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.ClusterRoleChoice = &CreateSpecType_UseDefaultClusterRoles{msg}
		return true, err
	case 12: // cluster_role_choice.use_custom_cluster_role_list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ClusterRoleListType)
		err := b.DecodeMessage(msg)
		m.ClusterRoleChoice = &CreateSpecType_UseCustomClusterRoleList{msg}
		return true, err
	case 14: // cluster_role_bindings_choice.use_default_cluster_role_bindings
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.ClusterRoleBindingsChoice = &CreateSpecType_UseDefaultClusterRoleBindings{msg}
		return true, err
	case 15: // cluster_role_bindings_choice.use_custom_cluster_role_bindings
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ClusterRoleBindingListType)
		err := b.DecodeMessage(msg)
		m.ClusterRoleBindingsChoice = &CreateSpecType_UseCustomClusterRoleBindings{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CreateSpecType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CreateSpecType)
	// local_access_choice
	switch x := m.LocalAccessChoice.(type) {
	case *CreateSpecType_NoLocalAccess:
		s := proto.Size(x.NoLocalAccess)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CreateSpecType_LocalAccessConfig:
		s := proto.Size(x.LocalAccessConfig)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// global_access_choice
	switch x := m.GlobalAccessChoice.(type) {
	case *CreateSpecType_NoGlobalAccess:
		s := proto.Size(x.NoGlobalAccess)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CreateSpecType_GlobalAccessEnable:
		s := proto.Size(x.GlobalAccessEnable)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// pod_security_policy_choice
	switch x := m.PodSecurityPolicyChoice.(type) {
	case *CreateSpecType_UseDefaultPsp:
		s := proto.Size(x.UseDefaultPsp)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CreateSpecType_UseCustomPspList:
		s := proto.Size(x.UseCustomPspList)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// cluster_role_choice
	switch x := m.ClusterRoleChoice.(type) {
	case *CreateSpecType_UseDefaultClusterRoles:
		s := proto.Size(x.UseDefaultClusterRoles)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CreateSpecType_UseCustomClusterRoleList:
		s := proto.Size(x.UseCustomClusterRoleList)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// cluster_role_bindings_choice
	switch x := m.ClusterRoleBindingsChoice.(type) {
	case *CreateSpecType_UseDefaultClusterRoleBindings:
		s := proto.Size(x.UseDefaultClusterRoleBindings)
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CreateSpecType_UseCustomClusterRoleBindings:
		s := proto.Size(x.UseCustomClusterRoleBindings)
		n += proto.SizeVarint(15<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Replace k8s_cluster
//
// x-displayName: "Replace Configuration Specification"
// Replacing an k8s_cluster object will update the object by replacing the existing spec with the provided one.
// For read-then-write operations a resourceVersion mismatch will occur if the object was modified between the read and write
type ReplaceSpecType struct {
	// Types that are valid to be assigned to LocalAccessChoice:
	//	*ReplaceSpecType_NoLocalAccess
	//	*ReplaceSpecType_LocalAccessConfig
	LocalAccessChoice isReplaceSpecType_LocalAccessChoice `protobuf_oneof:"local_access_choice"`
	// Types that are valid to be assigned to GlobalAccessChoice:
	//	*ReplaceSpecType_NoGlobalAccess
	//	*ReplaceSpecType_GlobalAccessEnable
	GlobalAccessChoice isReplaceSpecType_GlobalAccessChoice `protobuf_oneof:"global_access_choice"`
	// Types that are valid to be assigned to PodSecurityPolicyChoice:
	//	*ReplaceSpecType_UseDefaultPsp
	//	*ReplaceSpecType_UseCustomPspList
	PodSecurityPolicyChoice isReplaceSpecType_PodSecurityPolicyChoice `protobuf_oneof:"pod_security_policy_choice"`
	// Types that are valid to be assigned to ClusterRoleChoice:
	//	*ReplaceSpecType_UseDefaultClusterRoles
	//	*ReplaceSpecType_UseCustomClusterRoleList
	ClusterRoleChoice isReplaceSpecType_ClusterRoleChoice `protobuf_oneof:"cluster_role_choice"`
	// Types that are valid to be assigned to ClusterRoleBindingsChoice:
	//	*ReplaceSpecType_UseDefaultClusterRoleBindings
	//	*ReplaceSpecType_UseCustomClusterRoleBindings
	ClusterRoleBindingsChoice isReplaceSpecType_ClusterRoleBindingsChoice `protobuf_oneof:"cluster_role_bindings_choice"`
}

func (m *ReplaceSpecType) Reset()                    { *m = ReplaceSpecType{} }
func (*ReplaceSpecType) ProtoMessage()               {}
func (*ReplaceSpecType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{10} }

type isReplaceSpecType_LocalAccessChoice interface {
	isReplaceSpecType_LocalAccessChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isReplaceSpecType_GlobalAccessChoice interface {
	isReplaceSpecType_GlobalAccessChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isReplaceSpecType_PodSecurityPolicyChoice interface {
	isReplaceSpecType_PodSecurityPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isReplaceSpecType_ClusterRoleChoice interface {
	isReplaceSpecType_ClusterRoleChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isReplaceSpecType_ClusterRoleBindingsChoice interface {
	isReplaceSpecType_ClusterRoleBindingsChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type ReplaceSpecType_NoLocalAccess struct {
	NoLocalAccess *ves_io_schema4.Empty `protobuf:"bytes,2,opt,name=no_local_access,json=noLocalAccess,oneof"`
}
type ReplaceSpecType_LocalAccessConfig struct {
	LocalAccessConfig *LocalAccessConfigType `protobuf:"bytes,3,opt,name=local_access_config,json=localAccessConfig,oneof"`
}
type ReplaceSpecType_NoGlobalAccess struct {
	NoGlobalAccess *ves_io_schema4.Empty `protobuf:"bytes,5,opt,name=no_global_access,json=noGlobalAccess,oneof"`
}
type ReplaceSpecType_GlobalAccessEnable struct {
	GlobalAccessEnable *ves_io_schema4.Empty `protobuf:"bytes,6,opt,name=global_access_enable,json=globalAccessEnable,oneof"`
}
type ReplaceSpecType_UseDefaultPsp struct {
	UseDefaultPsp *ves_io_schema4.Empty `protobuf:"bytes,8,opt,name=use_default_psp,json=useDefaultPsp,oneof"`
}
type ReplaceSpecType_UseCustomPspList struct {
	UseCustomPspList *PodSecurityPolicyListType `protobuf:"bytes,9,opt,name=use_custom_psp_list,json=useCustomPspList,oneof"`
}
type ReplaceSpecType_UseDefaultClusterRoles struct {
	UseDefaultClusterRoles *ves_io_schema4.Empty `protobuf:"bytes,11,opt,name=use_default_cluster_roles,json=useDefaultClusterRoles,oneof"`
}
type ReplaceSpecType_UseCustomClusterRoleList struct {
	UseCustomClusterRoleList *ClusterRoleListType `protobuf:"bytes,12,opt,name=use_custom_cluster_role_list,json=useCustomClusterRoleList,oneof"`
}
type ReplaceSpecType_UseDefaultClusterRoleBindings struct {
	UseDefaultClusterRoleBindings *ves_io_schema4.Empty `protobuf:"bytes,14,opt,name=use_default_cluster_role_bindings,json=useDefaultClusterRoleBindings,oneof"`
}
type ReplaceSpecType_UseCustomClusterRoleBindings struct {
	UseCustomClusterRoleBindings *ClusterRoleBindingListType `protobuf:"bytes,15,opt,name=use_custom_cluster_role_bindings,json=useCustomClusterRoleBindings,oneof"`
}

func (*ReplaceSpecType_NoLocalAccess) isReplaceSpecType_LocalAccessChoice()                         {}
func (*ReplaceSpecType_LocalAccessConfig) isReplaceSpecType_LocalAccessChoice()                     {}
func (*ReplaceSpecType_NoGlobalAccess) isReplaceSpecType_GlobalAccessChoice()                       {}
func (*ReplaceSpecType_GlobalAccessEnable) isReplaceSpecType_GlobalAccessChoice()                   {}
func (*ReplaceSpecType_UseDefaultPsp) isReplaceSpecType_PodSecurityPolicyChoice()                   {}
func (*ReplaceSpecType_UseCustomPspList) isReplaceSpecType_PodSecurityPolicyChoice()                {}
func (*ReplaceSpecType_UseDefaultClusterRoles) isReplaceSpecType_ClusterRoleChoice()                {}
func (*ReplaceSpecType_UseCustomClusterRoleList) isReplaceSpecType_ClusterRoleChoice()              {}
func (*ReplaceSpecType_UseDefaultClusterRoleBindings) isReplaceSpecType_ClusterRoleBindingsChoice() {}
func (*ReplaceSpecType_UseCustomClusterRoleBindings) isReplaceSpecType_ClusterRoleBindingsChoice()  {}

func (m *ReplaceSpecType) GetLocalAccessChoice() isReplaceSpecType_LocalAccessChoice {
	if m != nil {
		return m.LocalAccessChoice
	}
	return nil
}
func (m *ReplaceSpecType) GetGlobalAccessChoice() isReplaceSpecType_GlobalAccessChoice {
	if m != nil {
		return m.GlobalAccessChoice
	}
	return nil
}
func (m *ReplaceSpecType) GetPodSecurityPolicyChoice() isReplaceSpecType_PodSecurityPolicyChoice {
	if m != nil {
		return m.PodSecurityPolicyChoice
	}
	return nil
}
func (m *ReplaceSpecType) GetClusterRoleChoice() isReplaceSpecType_ClusterRoleChoice {
	if m != nil {
		return m.ClusterRoleChoice
	}
	return nil
}
func (m *ReplaceSpecType) GetClusterRoleBindingsChoice() isReplaceSpecType_ClusterRoleBindingsChoice {
	if m != nil {
		return m.ClusterRoleBindingsChoice
	}
	return nil
}

func (m *ReplaceSpecType) GetNoLocalAccess() *ves_io_schema4.Empty {
	if x, ok := m.GetLocalAccessChoice().(*ReplaceSpecType_NoLocalAccess); ok {
		return x.NoLocalAccess
	}
	return nil
}

func (m *ReplaceSpecType) GetLocalAccessConfig() *LocalAccessConfigType {
	if x, ok := m.GetLocalAccessChoice().(*ReplaceSpecType_LocalAccessConfig); ok {
		return x.LocalAccessConfig
	}
	return nil
}

func (m *ReplaceSpecType) GetNoGlobalAccess() *ves_io_schema4.Empty {
	if x, ok := m.GetGlobalAccessChoice().(*ReplaceSpecType_NoGlobalAccess); ok {
		return x.NoGlobalAccess
	}
	return nil
}

func (m *ReplaceSpecType) GetGlobalAccessEnable() *ves_io_schema4.Empty {
	if x, ok := m.GetGlobalAccessChoice().(*ReplaceSpecType_GlobalAccessEnable); ok {
		return x.GlobalAccessEnable
	}
	return nil
}

func (m *ReplaceSpecType) GetUseDefaultPsp() *ves_io_schema4.Empty {
	if x, ok := m.GetPodSecurityPolicyChoice().(*ReplaceSpecType_UseDefaultPsp); ok {
		return x.UseDefaultPsp
	}
	return nil
}

func (m *ReplaceSpecType) GetUseCustomPspList() *PodSecurityPolicyListType {
	if x, ok := m.GetPodSecurityPolicyChoice().(*ReplaceSpecType_UseCustomPspList); ok {
		return x.UseCustomPspList
	}
	return nil
}

func (m *ReplaceSpecType) GetUseDefaultClusterRoles() *ves_io_schema4.Empty {
	if x, ok := m.GetClusterRoleChoice().(*ReplaceSpecType_UseDefaultClusterRoles); ok {
		return x.UseDefaultClusterRoles
	}
	return nil
}

func (m *ReplaceSpecType) GetUseCustomClusterRoleList() *ClusterRoleListType {
	if x, ok := m.GetClusterRoleChoice().(*ReplaceSpecType_UseCustomClusterRoleList); ok {
		return x.UseCustomClusterRoleList
	}
	return nil
}

func (m *ReplaceSpecType) GetUseDefaultClusterRoleBindings() *ves_io_schema4.Empty {
	if x, ok := m.GetClusterRoleBindingsChoice().(*ReplaceSpecType_UseDefaultClusterRoleBindings); ok {
		return x.UseDefaultClusterRoleBindings
	}
	return nil
}

func (m *ReplaceSpecType) GetUseCustomClusterRoleBindings() *ClusterRoleBindingListType {
	if x, ok := m.GetClusterRoleBindingsChoice().(*ReplaceSpecType_UseCustomClusterRoleBindings); ok {
		return x.UseCustomClusterRoleBindings
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ReplaceSpecType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ReplaceSpecType_OneofMarshaler, _ReplaceSpecType_OneofUnmarshaler, _ReplaceSpecType_OneofSizer, []interface{}{
		(*ReplaceSpecType_NoLocalAccess)(nil),
		(*ReplaceSpecType_LocalAccessConfig)(nil),
		(*ReplaceSpecType_NoGlobalAccess)(nil),
		(*ReplaceSpecType_GlobalAccessEnable)(nil),
		(*ReplaceSpecType_UseDefaultPsp)(nil),
		(*ReplaceSpecType_UseCustomPspList)(nil),
		(*ReplaceSpecType_UseDefaultClusterRoles)(nil),
		(*ReplaceSpecType_UseCustomClusterRoleList)(nil),
		(*ReplaceSpecType_UseDefaultClusterRoleBindings)(nil),
		(*ReplaceSpecType_UseCustomClusterRoleBindings)(nil),
	}
}

func _ReplaceSpecType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ReplaceSpecType)
	// local_access_choice
	switch x := m.LocalAccessChoice.(type) {
	case *ReplaceSpecType_NoLocalAccess:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoLocalAccess); err != nil {
			return err
		}
	case *ReplaceSpecType_LocalAccessConfig:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LocalAccessConfig); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ReplaceSpecType.LocalAccessChoice has unexpected type %T", x)
	}
	// global_access_choice
	switch x := m.GlobalAccessChoice.(type) {
	case *ReplaceSpecType_NoGlobalAccess:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoGlobalAccess); err != nil {
			return err
		}
	case *ReplaceSpecType_GlobalAccessEnable:
		_ = b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GlobalAccessEnable); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ReplaceSpecType.GlobalAccessChoice has unexpected type %T", x)
	}
	// pod_security_policy_choice
	switch x := m.PodSecurityPolicyChoice.(type) {
	case *ReplaceSpecType_UseDefaultPsp:
		_ = b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseDefaultPsp); err != nil {
			return err
		}
	case *ReplaceSpecType_UseCustomPspList:
		_ = b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseCustomPspList); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ReplaceSpecType.PodSecurityPolicyChoice has unexpected type %T", x)
	}
	// cluster_role_choice
	switch x := m.ClusterRoleChoice.(type) {
	case *ReplaceSpecType_UseDefaultClusterRoles:
		_ = b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseDefaultClusterRoles); err != nil {
			return err
		}
	case *ReplaceSpecType_UseCustomClusterRoleList:
		_ = b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseCustomClusterRoleList); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ReplaceSpecType.ClusterRoleChoice has unexpected type %T", x)
	}
	// cluster_role_bindings_choice
	switch x := m.ClusterRoleBindingsChoice.(type) {
	case *ReplaceSpecType_UseDefaultClusterRoleBindings:
		_ = b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseDefaultClusterRoleBindings); err != nil {
			return err
		}
	case *ReplaceSpecType_UseCustomClusterRoleBindings:
		_ = b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseCustomClusterRoleBindings); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ReplaceSpecType.ClusterRoleBindingsChoice has unexpected type %T", x)
	}
	return nil
}

func _ReplaceSpecType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ReplaceSpecType)
	switch tag {
	case 2: // local_access_choice.no_local_access
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.LocalAccessChoice = &ReplaceSpecType_NoLocalAccess{msg}
		return true, err
	case 3: // local_access_choice.local_access_config
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LocalAccessConfigType)
		err := b.DecodeMessage(msg)
		m.LocalAccessChoice = &ReplaceSpecType_LocalAccessConfig{msg}
		return true, err
	case 5: // global_access_choice.no_global_access
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.GlobalAccessChoice = &ReplaceSpecType_NoGlobalAccess{msg}
		return true, err
	case 6: // global_access_choice.global_access_enable
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.GlobalAccessChoice = &ReplaceSpecType_GlobalAccessEnable{msg}
		return true, err
	case 8: // pod_security_policy_choice.use_default_psp
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.PodSecurityPolicyChoice = &ReplaceSpecType_UseDefaultPsp{msg}
		return true, err
	case 9: // pod_security_policy_choice.use_custom_psp_list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PodSecurityPolicyListType)
		err := b.DecodeMessage(msg)
		m.PodSecurityPolicyChoice = &ReplaceSpecType_UseCustomPspList{msg}
		return true, err
	case 11: // cluster_role_choice.use_default_cluster_roles
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.ClusterRoleChoice = &ReplaceSpecType_UseDefaultClusterRoles{msg}
		return true, err
	case 12: // cluster_role_choice.use_custom_cluster_role_list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ClusterRoleListType)
		err := b.DecodeMessage(msg)
		m.ClusterRoleChoice = &ReplaceSpecType_UseCustomClusterRoleList{msg}
		return true, err
	case 14: // cluster_role_bindings_choice.use_default_cluster_role_bindings
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.ClusterRoleBindingsChoice = &ReplaceSpecType_UseDefaultClusterRoleBindings{msg}
		return true, err
	case 15: // cluster_role_bindings_choice.use_custom_cluster_role_bindings
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ClusterRoleBindingListType)
		err := b.DecodeMessage(msg)
		m.ClusterRoleBindingsChoice = &ReplaceSpecType_UseCustomClusterRoleBindings{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ReplaceSpecType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ReplaceSpecType)
	// local_access_choice
	switch x := m.LocalAccessChoice.(type) {
	case *ReplaceSpecType_NoLocalAccess:
		s := proto.Size(x.NoLocalAccess)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplaceSpecType_LocalAccessConfig:
		s := proto.Size(x.LocalAccessConfig)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// global_access_choice
	switch x := m.GlobalAccessChoice.(type) {
	case *ReplaceSpecType_NoGlobalAccess:
		s := proto.Size(x.NoGlobalAccess)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplaceSpecType_GlobalAccessEnable:
		s := proto.Size(x.GlobalAccessEnable)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// pod_security_policy_choice
	switch x := m.PodSecurityPolicyChoice.(type) {
	case *ReplaceSpecType_UseDefaultPsp:
		s := proto.Size(x.UseDefaultPsp)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplaceSpecType_UseCustomPspList:
		s := proto.Size(x.UseCustomPspList)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// cluster_role_choice
	switch x := m.ClusterRoleChoice.(type) {
	case *ReplaceSpecType_UseDefaultClusterRoles:
		s := proto.Size(x.UseDefaultClusterRoles)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplaceSpecType_UseCustomClusterRoleList:
		s := proto.Size(x.UseCustomClusterRoleList)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// cluster_role_bindings_choice
	switch x := m.ClusterRoleBindingsChoice.(type) {
	case *ReplaceSpecType_UseDefaultClusterRoleBindings:
		s := proto.Size(x.UseDefaultClusterRoleBindings)
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplaceSpecType_UseCustomClusterRoleBindings:
		s := proto.Size(x.UseCustomClusterRoleBindings)
		n += proto.SizeVarint(15<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Get k8s_cluster
//
// x-displayName: "Get Configuration Specification"
// Get k8s_cluster will get the object from the storage backend for namespace metadata.namespace
type GetSpecType struct {
	// Types that are valid to be assigned to LocalAccessChoice:
	//	*GetSpecType_NoLocalAccess
	//	*GetSpecType_LocalAccessConfig
	LocalAccessChoice isGetSpecType_LocalAccessChoice `protobuf_oneof:"local_access_choice"`
	// Types that are valid to be assigned to GlobalAccessChoice:
	//	*GetSpecType_NoGlobalAccess
	//	*GetSpecType_GlobalAccessEnable
	GlobalAccessChoice isGetSpecType_GlobalAccessChoice `protobuf_oneof:"global_access_choice"`
	// Types that are valid to be assigned to PodSecurityPolicyChoice:
	//	*GetSpecType_UseDefaultPsp
	//	*GetSpecType_UseCustomPspList
	PodSecurityPolicyChoice isGetSpecType_PodSecurityPolicyChoice `protobuf_oneof:"pod_security_policy_choice"`
	// Types that are valid to be assigned to ClusterRoleChoice:
	//	*GetSpecType_UseDefaultClusterRoles
	//	*GetSpecType_UseCustomClusterRoleList
	ClusterRoleChoice isGetSpecType_ClusterRoleChoice `protobuf_oneof:"cluster_role_choice"`
	// Types that are valid to be assigned to ClusterRoleBindingsChoice:
	//	*GetSpecType_UseDefaultClusterRoleBindings
	//	*GetSpecType_UseCustomClusterRoleBindings
	ClusterRoleBindingsChoice isGetSpecType_ClusterRoleBindingsChoice `protobuf_oneof:"cluster_role_bindings_choice"`
}

func (m *GetSpecType) Reset()                    { *m = GetSpecType{} }
func (*GetSpecType) ProtoMessage()               {}
func (*GetSpecType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{11} }

type isGetSpecType_LocalAccessChoice interface {
	isGetSpecType_LocalAccessChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGetSpecType_GlobalAccessChoice interface {
	isGetSpecType_GlobalAccessChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGetSpecType_PodSecurityPolicyChoice interface {
	isGetSpecType_PodSecurityPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGetSpecType_ClusterRoleChoice interface {
	isGetSpecType_ClusterRoleChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGetSpecType_ClusterRoleBindingsChoice interface {
	isGetSpecType_ClusterRoleBindingsChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type GetSpecType_NoLocalAccess struct {
	NoLocalAccess *ves_io_schema4.Empty `protobuf:"bytes,2,opt,name=no_local_access,json=noLocalAccess,oneof"`
}
type GetSpecType_LocalAccessConfig struct {
	LocalAccessConfig *LocalAccessConfigType `protobuf:"bytes,3,opt,name=local_access_config,json=localAccessConfig,oneof"`
}
type GetSpecType_NoGlobalAccess struct {
	NoGlobalAccess *ves_io_schema4.Empty `protobuf:"bytes,5,opt,name=no_global_access,json=noGlobalAccess,oneof"`
}
type GetSpecType_GlobalAccessEnable struct {
	GlobalAccessEnable *ves_io_schema4.Empty `protobuf:"bytes,6,opt,name=global_access_enable,json=globalAccessEnable,oneof"`
}
type GetSpecType_UseDefaultPsp struct {
	UseDefaultPsp *ves_io_schema4.Empty `protobuf:"bytes,8,opt,name=use_default_psp,json=useDefaultPsp,oneof"`
}
type GetSpecType_UseCustomPspList struct {
	UseCustomPspList *PodSecurityPolicyListType `protobuf:"bytes,9,opt,name=use_custom_psp_list,json=useCustomPspList,oneof"`
}
type GetSpecType_UseDefaultClusterRoles struct {
	UseDefaultClusterRoles *ves_io_schema4.Empty `protobuf:"bytes,11,opt,name=use_default_cluster_roles,json=useDefaultClusterRoles,oneof"`
}
type GetSpecType_UseCustomClusterRoleList struct {
	UseCustomClusterRoleList *ClusterRoleListType `protobuf:"bytes,12,opt,name=use_custom_cluster_role_list,json=useCustomClusterRoleList,oneof"`
}
type GetSpecType_UseDefaultClusterRoleBindings struct {
	UseDefaultClusterRoleBindings *ves_io_schema4.Empty `protobuf:"bytes,14,opt,name=use_default_cluster_role_bindings,json=useDefaultClusterRoleBindings,oneof"`
}
type GetSpecType_UseCustomClusterRoleBindings struct {
	UseCustomClusterRoleBindings *ClusterRoleBindingListType `protobuf:"bytes,15,opt,name=use_custom_cluster_role_bindings,json=useCustomClusterRoleBindings,oneof"`
}

func (*GetSpecType_NoLocalAccess) isGetSpecType_LocalAccessChoice()                         {}
func (*GetSpecType_LocalAccessConfig) isGetSpecType_LocalAccessChoice()                     {}
func (*GetSpecType_NoGlobalAccess) isGetSpecType_GlobalAccessChoice()                       {}
func (*GetSpecType_GlobalAccessEnable) isGetSpecType_GlobalAccessChoice()                   {}
func (*GetSpecType_UseDefaultPsp) isGetSpecType_PodSecurityPolicyChoice()                   {}
func (*GetSpecType_UseCustomPspList) isGetSpecType_PodSecurityPolicyChoice()                {}
func (*GetSpecType_UseDefaultClusterRoles) isGetSpecType_ClusterRoleChoice()                {}
func (*GetSpecType_UseCustomClusterRoleList) isGetSpecType_ClusterRoleChoice()              {}
func (*GetSpecType_UseDefaultClusterRoleBindings) isGetSpecType_ClusterRoleBindingsChoice() {}
func (*GetSpecType_UseCustomClusterRoleBindings) isGetSpecType_ClusterRoleBindingsChoice()  {}

func (m *GetSpecType) GetLocalAccessChoice() isGetSpecType_LocalAccessChoice {
	if m != nil {
		return m.LocalAccessChoice
	}
	return nil
}
func (m *GetSpecType) GetGlobalAccessChoice() isGetSpecType_GlobalAccessChoice {
	if m != nil {
		return m.GlobalAccessChoice
	}
	return nil
}
func (m *GetSpecType) GetPodSecurityPolicyChoice() isGetSpecType_PodSecurityPolicyChoice {
	if m != nil {
		return m.PodSecurityPolicyChoice
	}
	return nil
}
func (m *GetSpecType) GetClusterRoleChoice() isGetSpecType_ClusterRoleChoice {
	if m != nil {
		return m.ClusterRoleChoice
	}
	return nil
}
func (m *GetSpecType) GetClusterRoleBindingsChoice() isGetSpecType_ClusterRoleBindingsChoice {
	if m != nil {
		return m.ClusterRoleBindingsChoice
	}
	return nil
}

func (m *GetSpecType) GetNoLocalAccess() *ves_io_schema4.Empty {
	if x, ok := m.GetLocalAccessChoice().(*GetSpecType_NoLocalAccess); ok {
		return x.NoLocalAccess
	}
	return nil
}

func (m *GetSpecType) GetLocalAccessConfig() *LocalAccessConfigType {
	if x, ok := m.GetLocalAccessChoice().(*GetSpecType_LocalAccessConfig); ok {
		return x.LocalAccessConfig
	}
	return nil
}

func (m *GetSpecType) GetNoGlobalAccess() *ves_io_schema4.Empty {
	if x, ok := m.GetGlobalAccessChoice().(*GetSpecType_NoGlobalAccess); ok {
		return x.NoGlobalAccess
	}
	return nil
}

func (m *GetSpecType) GetGlobalAccessEnable() *ves_io_schema4.Empty {
	if x, ok := m.GetGlobalAccessChoice().(*GetSpecType_GlobalAccessEnable); ok {
		return x.GlobalAccessEnable
	}
	return nil
}

func (m *GetSpecType) GetUseDefaultPsp() *ves_io_schema4.Empty {
	if x, ok := m.GetPodSecurityPolicyChoice().(*GetSpecType_UseDefaultPsp); ok {
		return x.UseDefaultPsp
	}
	return nil
}

func (m *GetSpecType) GetUseCustomPspList() *PodSecurityPolicyListType {
	if x, ok := m.GetPodSecurityPolicyChoice().(*GetSpecType_UseCustomPspList); ok {
		return x.UseCustomPspList
	}
	return nil
}

func (m *GetSpecType) GetUseDefaultClusterRoles() *ves_io_schema4.Empty {
	if x, ok := m.GetClusterRoleChoice().(*GetSpecType_UseDefaultClusterRoles); ok {
		return x.UseDefaultClusterRoles
	}
	return nil
}

func (m *GetSpecType) GetUseCustomClusterRoleList() *ClusterRoleListType {
	if x, ok := m.GetClusterRoleChoice().(*GetSpecType_UseCustomClusterRoleList); ok {
		return x.UseCustomClusterRoleList
	}
	return nil
}

func (m *GetSpecType) GetUseDefaultClusterRoleBindings() *ves_io_schema4.Empty {
	if x, ok := m.GetClusterRoleBindingsChoice().(*GetSpecType_UseDefaultClusterRoleBindings); ok {
		return x.UseDefaultClusterRoleBindings
	}
	return nil
}

func (m *GetSpecType) GetUseCustomClusterRoleBindings() *ClusterRoleBindingListType {
	if x, ok := m.GetClusterRoleBindingsChoice().(*GetSpecType_UseCustomClusterRoleBindings); ok {
		return x.UseCustomClusterRoleBindings
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GetSpecType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GetSpecType_OneofMarshaler, _GetSpecType_OneofUnmarshaler, _GetSpecType_OneofSizer, []interface{}{
		(*GetSpecType_NoLocalAccess)(nil),
		(*GetSpecType_LocalAccessConfig)(nil),
		(*GetSpecType_NoGlobalAccess)(nil),
		(*GetSpecType_GlobalAccessEnable)(nil),
		(*GetSpecType_UseDefaultPsp)(nil),
		(*GetSpecType_UseCustomPspList)(nil),
		(*GetSpecType_UseDefaultClusterRoles)(nil),
		(*GetSpecType_UseCustomClusterRoleList)(nil),
		(*GetSpecType_UseDefaultClusterRoleBindings)(nil),
		(*GetSpecType_UseCustomClusterRoleBindings)(nil),
	}
}

func _GetSpecType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GetSpecType)
	// local_access_choice
	switch x := m.LocalAccessChoice.(type) {
	case *GetSpecType_NoLocalAccess:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoLocalAccess); err != nil {
			return err
		}
	case *GetSpecType_LocalAccessConfig:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LocalAccessConfig); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GetSpecType.LocalAccessChoice has unexpected type %T", x)
	}
	// global_access_choice
	switch x := m.GlobalAccessChoice.(type) {
	case *GetSpecType_NoGlobalAccess:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoGlobalAccess); err != nil {
			return err
		}
	case *GetSpecType_GlobalAccessEnable:
		_ = b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GlobalAccessEnable); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GetSpecType.GlobalAccessChoice has unexpected type %T", x)
	}
	// pod_security_policy_choice
	switch x := m.PodSecurityPolicyChoice.(type) {
	case *GetSpecType_UseDefaultPsp:
		_ = b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseDefaultPsp); err != nil {
			return err
		}
	case *GetSpecType_UseCustomPspList:
		_ = b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseCustomPspList); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GetSpecType.PodSecurityPolicyChoice has unexpected type %T", x)
	}
	// cluster_role_choice
	switch x := m.ClusterRoleChoice.(type) {
	case *GetSpecType_UseDefaultClusterRoles:
		_ = b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseDefaultClusterRoles); err != nil {
			return err
		}
	case *GetSpecType_UseCustomClusterRoleList:
		_ = b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseCustomClusterRoleList); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GetSpecType.ClusterRoleChoice has unexpected type %T", x)
	}
	// cluster_role_bindings_choice
	switch x := m.ClusterRoleBindingsChoice.(type) {
	case *GetSpecType_UseDefaultClusterRoleBindings:
		_ = b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseDefaultClusterRoleBindings); err != nil {
			return err
		}
	case *GetSpecType_UseCustomClusterRoleBindings:
		_ = b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UseCustomClusterRoleBindings); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GetSpecType.ClusterRoleBindingsChoice has unexpected type %T", x)
	}
	return nil
}

func _GetSpecType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GetSpecType)
	switch tag {
	case 2: // local_access_choice.no_local_access
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.LocalAccessChoice = &GetSpecType_NoLocalAccess{msg}
		return true, err
	case 3: // local_access_choice.local_access_config
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LocalAccessConfigType)
		err := b.DecodeMessage(msg)
		m.LocalAccessChoice = &GetSpecType_LocalAccessConfig{msg}
		return true, err
	case 5: // global_access_choice.no_global_access
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.GlobalAccessChoice = &GetSpecType_NoGlobalAccess{msg}
		return true, err
	case 6: // global_access_choice.global_access_enable
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.GlobalAccessChoice = &GetSpecType_GlobalAccessEnable{msg}
		return true, err
	case 8: // pod_security_policy_choice.use_default_psp
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.PodSecurityPolicyChoice = &GetSpecType_UseDefaultPsp{msg}
		return true, err
	case 9: // pod_security_policy_choice.use_custom_psp_list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PodSecurityPolicyListType)
		err := b.DecodeMessage(msg)
		m.PodSecurityPolicyChoice = &GetSpecType_UseCustomPspList{msg}
		return true, err
	case 11: // cluster_role_choice.use_default_cluster_roles
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.ClusterRoleChoice = &GetSpecType_UseDefaultClusterRoles{msg}
		return true, err
	case 12: // cluster_role_choice.use_custom_cluster_role_list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ClusterRoleListType)
		err := b.DecodeMessage(msg)
		m.ClusterRoleChoice = &GetSpecType_UseCustomClusterRoleList{msg}
		return true, err
	case 14: // cluster_role_bindings_choice.use_default_cluster_role_bindings
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.ClusterRoleBindingsChoice = &GetSpecType_UseDefaultClusterRoleBindings{msg}
		return true, err
	case 15: // cluster_role_bindings_choice.use_custom_cluster_role_bindings
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ClusterRoleBindingListType)
		err := b.DecodeMessage(msg)
		m.ClusterRoleBindingsChoice = &GetSpecType_UseCustomClusterRoleBindings{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GetSpecType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GetSpecType)
	// local_access_choice
	switch x := m.LocalAccessChoice.(type) {
	case *GetSpecType_NoLocalAccess:
		s := proto.Size(x.NoLocalAccess)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetSpecType_LocalAccessConfig:
		s := proto.Size(x.LocalAccessConfig)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// global_access_choice
	switch x := m.GlobalAccessChoice.(type) {
	case *GetSpecType_NoGlobalAccess:
		s := proto.Size(x.NoGlobalAccess)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetSpecType_GlobalAccessEnable:
		s := proto.Size(x.GlobalAccessEnable)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// pod_security_policy_choice
	switch x := m.PodSecurityPolicyChoice.(type) {
	case *GetSpecType_UseDefaultPsp:
		s := proto.Size(x.UseDefaultPsp)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetSpecType_UseCustomPspList:
		s := proto.Size(x.UseCustomPspList)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// cluster_role_choice
	switch x := m.ClusterRoleChoice.(type) {
	case *GetSpecType_UseDefaultClusterRoles:
		s := proto.Size(x.UseDefaultClusterRoles)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetSpecType_UseCustomClusterRoleList:
		s := proto.Size(x.UseCustomClusterRoleList)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// cluster_role_bindings_choice
	switch x := m.ClusterRoleBindingsChoice.(type) {
	case *GetSpecType_UseDefaultClusterRoleBindings:
		s := proto.Size(x.UseDefaultClusterRoleBindings)
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetSpecType_UseCustomClusterRoleBindings:
		s := proto.Size(x.UseCustomClusterRoleBindings)
		n += proto.SizeVarint(15<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*ApplicationArgoCDType)(nil), "ves.io.schema.k8s_cluster.ApplicationArgoCDType")
	golang_proto.RegisterType((*ApplicationArgoCDType)(nil), "ves.io.schema.k8s_cluster.ApplicationArgoCDType")
	proto.RegisterType((*ApplicationDashboardType)(nil), "ves.io.schema.k8s_cluster.ApplicationDashboardType")
	golang_proto.RegisterType((*ApplicationDashboardType)(nil), "ves.io.schema.k8s_cluster.ApplicationDashboardType")
	proto.RegisterType((*ClusterWideAppType)(nil), "ves.io.schema.k8s_cluster.ClusterWideAppType")
	golang_proto.RegisterType((*ClusterWideAppType)(nil), "ves.io.schema.k8s_cluster.ClusterWideAppType")
	proto.RegisterType((*ClusterWideAppListType)(nil), "ves.io.schema.k8s_cluster.ClusterWideAppListType")
	golang_proto.RegisterType((*ClusterWideAppListType)(nil), "ves.io.schema.k8s_cluster.ClusterWideAppListType")
	proto.RegisterType((*LocalAccessConfigType)(nil), "ves.io.schema.k8s_cluster.LocalAccessConfigType")
	golang_proto.RegisterType((*LocalAccessConfigType)(nil), "ves.io.schema.k8s_cluster.LocalAccessConfigType")
	proto.RegisterType((*PodSecurityPolicyListType)(nil), "ves.io.schema.k8s_cluster.PodSecurityPolicyListType")
	golang_proto.RegisterType((*PodSecurityPolicyListType)(nil), "ves.io.schema.k8s_cluster.PodSecurityPolicyListType")
	proto.RegisterType((*ClusterRoleListType)(nil), "ves.io.schema.k8s_cluster.ClusterRoleListType")
	golang_proto.RegisterType((*ClusterRoleListType)(nil), "ves.io.schema.k8s_cluster.ClusterRoleListType")
	proto.RegisterType((*ClusterRoleBindingListType)(nil), "ves.io.schema.k8s_cluster.ClusterRoleBindingListType")
	golang_proto.RegisterType((*ClusterRoleBindingListType)(nil), "ves.io.schema.k8s_cluster.ClusterRoleBindingListType")
	proto.RegisterType((*GlobalSpecType)(nil), "ves.io.schema.k8s_cluster.GlobalSpecType")
	golang_proto.RegisterType((*GlobalSpecType)(nil), "ves.io.schema.k8s_cluster.GlobalSpecType")
	proto.RegisterType((*CreateSpecType)(nil), "ves.io.schema.k8s_cluster.CreateSpecType")
	golang_proto.RegisterType((*CreateSpecType)(nil), "ves.io.schema.k8s_cluster.CreateSpecType")
	proto.RegisterType((*ReplaceSpecType)(nil), "ves.io.schema.k8s_cluster.ReplaceSpecType")
	golang_proto.RegisterType((*ReplaceSpecType)(nil), "ves.io.schema.k8s_cluster.ReplaceSpecType")
	proto.RegisterType((*GetSpecType)(nil), "ves.io.schema.k8s_cluster.GetSpecType")
	golang_proto.RegisterType((*GetSpecType)(nil), "ves.io.schema.k8s_cluster.GetSpecType")
}
func (this *ApplicationArgoCDType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ApplicationArgoCDType)
	if !ok {
		that2, ok := that.(ApplicationArgoCDType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.GeneratedYaml != that1.GeneratedYaml {
		return false
	}
	return true
}
func (this *ApplicationDashboardType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ApplicationDashboardType)
	if !ok {
		that2, ok := that.(ApplicationDashboardType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.GeneratedYaml != that1.GeneratedYaml {
		return false
	}
	return true
}
func (this *ClusterWideAppType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ClusterWideAppType)
	if !ok {
		that2, ok := that.(ClusterWideAppType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.AppChoice == nil {
		if this.AppChoice != nil {
			return false
		}
	} else if this.AppChoice == nil {
		return false
	} else if !this.AppChoice.Equal(that1.AppChoice) {
		return false
	}
	return true
}
func (this *ClusterWideAppType_ArgoCd) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ClusterWideAppType_ArgoCd)
	if !ok {
		that2, ok := that.(ClusterWideAppType_ArgoCd)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ArgoCd.Equal(that1.ArgoCd) {
		return false
	}
	return true
}
func (this *ClusterWideAppType_Dashboard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ClusterWideAppType_Dashboard)
	if !ok {
		that2, ok := that.(ClusterWideAppType_Dashboard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Dashboard.Equal(that1.Dashboard) {
		return false
	}
	return true
}
func (this *ClusterWideAppListType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ClusterWideAppListType)
	if !ok {
		that2, ok := that.(ClusterWideAppListType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.ClusterWideApps) != len(that1.ClusterWideApps) {
		return false
	}
	for i := range this.ClusterWideApps {
		if !this.ClusterWideApps[i].Equal(that1.ClusterWideApps[i]) {
			return false
		}
	}
	return true
}
func (this *LocalAccessConfigType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*LocalAccessConfigType)
	if !ok {
		that2, ok := that.(LocalAccessConfigType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.LocalDomain != that1.LocalDomain {
		return false
	}
	if that1.PortChoice == nil {
		if this.PortChoice != nil {
			return false
		}
	} else if this.PortChoice == nil {
		return false
	} else if !this.PortChoice.Equal(that1.PortChoice) {
		return false
	}
	return true
}
func (this *LocalAccessConfigType_DefaultPort) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*LocalAccessConfigType_DefaultPort)
	if !ok {
		that2, ok := that.(LocalAccessConfigType_DefaultPort)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DefaultPort.Equal(that1.DefaultPort) {
		return false
	}
	return true
}
func (this *LocalAccessConfigType_Port) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*LocalAccessConfigType_Port)
	if !ok {
		that2, ok := that.(LocalAccessConfigType_Port)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Port != that1.Port {
		return false
	}
	return true
}
func (this *PodSecurityPolicyListType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PodSecurityPolicyListType)
	if !ok {
		that2, ok := that.(PodSecurityPolicyListType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.PodSecurityPolicies) != len(that1.PodSecurityPolicies) {
		return false
	}
	for i := range this.PodSecurityPolicies {
		if !this.PodSecurityPolicies[i].Equal(that1.PodSecurityPolicies[i]) {
			return false
		}
	}
	return true
}
func (this *ClusterRoleListType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ClusterRoleListType)
	if !ok {
		that2, ok := that.(ClusterRoleListType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.ClusterRoles) != len(that1.ClusterRoles) {
		return false
	}
	for i := range this.ClusterRoles {
		if !this.ClusterRoles[i].Equal(that1.ClusterRoles[i]) {
			return false
		}
	}
	return true
}
func (this *ClusterRoleBindingListType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ClusterRoleBindingListType)
	if !ok {
		that2, ok := that.(ClusterRoleBindingListType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.ClusterRoleBindings) != len(that1.ClusterRoleBindings) {
		return false
	}
	for i := range this.ClusterRoleBindings {
		if !this.ClusterRoleBindings[i].Equal(that1.ClusterRoleBindings[i]) {
			return false
		}
	}
	return true
}
func (this *GlobalSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType)
	if !ok {
		that2, ok := that.(GlobalSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.LocalAccessChoice == nil {
		if this.LocalAccessChoice != nil {
			return false
		}
	} else if this.LocalAccessChoice == nil {
		return false
	} else if !this.LocalAccessChoice.Equal(that1.LocalAccessChoice) {
		return false
	}
	if that1.GlobalAccessChoice == nil {
		if this.GlobalAccessChoice != nil {
			return false
		}
	} else if this.GlobalAccessChoice == nil {
		return false
	} else if !this.GlobalAccessChoice.Equal(that1.GlobalAccessChoice) {
		return false
	}
	if that1.PodSecurityPolicyChoice == nil {
		if this.PodSecurityPolicyChoice != nil {
			return false
		}
	} else if this.PodSecurityPolicyChoice == nil {
		return false
	} else if !this.PodSecurityPolicyChoice.Equal(that1.PodSecurityPolicyChoice) {
		return false
	}
	if that1.ClusterRoleChoice == nil {
		if this.ClusterRoleChoice != nil {
			return false
		}
	} else if this.ClusterRoleChoice == nil {
		return false
	} else if !this.ClusterRoleChoice.Equal(that1.ClusterRoleChoice) {
		return false
	}
	if that1.ClusterRoleBindingsChoice == nil {
		if this.ClusterRoleBindingsChoice != nil {
			return false
		}
	} else if this.ClusterRoleBindingsChoice == nil {
		return false
	} else if !this.ClusterRoleBindingsChoice.Equal(that1.ClusterRoleBindingsChoice) {
		return false
	}
	if that1.AppsChoice == nil {
		if this.AppsChoice != nil {
			return false
		}
	} else if this.AppsChoice == nil {
		return false
	} else if !this.AppsChoice.Equal(that1.AppsChoice) {
		return false
	}
	if !this.ViewInternal.Equal(that1.ViewInternal) {
		return false
	}
	if len(this.FinalClusterRoleBindings) != len(that1.FinalClusterRoleBindings) {
		return false
	}
	for i := range this.FinalClusterRoleBindings {
		if !this.FinalClusterRoleBindings[i].Equal(that1.FinalClusterRoleBindings[i]) {
			return false
		}
	}
	if len(this.FinalClusterRoles) != len(that1.FinalClusterRoles) {
		return false
	}
	for i := range this.FinalClusterRoles {
		if !this.FinalClusterRoles[i].Equal(that1.FinalClusterRoles[i]) {
			return false
		}
	}
	if len(this.FinalPodSecurityPolicies) != len(that1.FinalPodSecurityPolicies) {
		return false
	}
	for i := range this.FinalPodSecurityPolicies {
		if !this.FinalPodSecurityPolicies[i].Equal(that1.FinalPodSecurityPolicies[i]) {
			return false
		}
	}
	return true
}
func (this *GlobalSpecType_NoLocalAccess) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_NoLocalAccess)
	if !ok {
		that2, ok := that.(GlobalSpecType_NoLocalAccess)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoLocalAccess.Equal(that1.NoLocalAccess) {
		return false
	}
	return true
}
func (this *GlobalSpecType_LocalAccessConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_LocalAccessConfig)
	if !ok {
		that2, ok := that.(GlobalSpecType_LocalAccessConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.LocalAccessConfig.Equal(that1.LocalAccessConfig) {
		return false
	}
	return true
}
func (this *GlobalSpecType_NoGlobalAccess) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_NoGlobalAccess)
	if !ok {
		that2, ok := that.(GlobalSpecType_NoGlobalAccess)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoGlobalAccess.Equal(that1.NoGlobalAccess) {
		return false
	}
	return true
}
func (this *GlobalSpecType_GlobalAccessEnable) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_GlobalAccessEnable)
	if !ok {
		that2, ok := that.(GlobalSpecType_GlobalAccessEnable)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.GlobalAccessEnable.Equal(that1.GlobalAccessEnable) {
		return false
	}
	return true
}
func (this *GlobalSpecType_UseDefaultPsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_UseDefaultPsp)
	if !ok {
		that2, ok := that.(GlobalSpecType_UseDefaultPsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultPsp.Equal(that1.UseDefaultPsp) {
		return false
	}
	return true
}
func (this *GlobalSpecType_UseCustomPspList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_UseCustomPspList)
	if !ok {
		that2, ok := that.(GlobalSpecType_UseCustomPspList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomPspList.Equal(that1.UseCustomPspList) {
		return false
	}
	return true
}
func (this *GlobalSpecType_UseDefaultClusterRoles) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_UseDefaultClusterRoles)
	if !ok {
		that2, ok := that.(GlobalSpecType_UseDefaultClusterRoles)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultClusterRoles.Equal(that1.UseDefaultClusterRoles) {
		return false
	}
	return true
}
func (this *GlobalSpecType_UseCustomClusterRoleList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_UseCustomClusterRoleList)
	if !ok {
		that2, ok := that.(GlobalSpecType_UseCustomClusterRoleList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomClusterRoleList.Equal(that1.UseCustomClusterRoleList) {
		return false
	}
	return true
}
func (this *GlobalSpecType_UseDefaultClusterRoleBindings) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_UseDefaultClusterRoleBindings)
	if !ok {
		that2, ok := that.(GlobalSpecType_UseDefaultClusterRoleBindings)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultClusterRoleBindings.Equal(that1.UseDefaultClusterRoleBindings) {
		return false
	}
	return true
}
func (this *GlobalSpecType_UseCustomClusterRoleBindings) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_UseCustomClusterRoleBindings)
	if !ok {
		that2, ok := that.(GlobalSpecType_UseCustomClusterRoleBindings)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomClusterRoleBindings.Equal(that1.UseCustomClusterRoleBindings) {
		return false
	}
	return true
}
func (this *GlobalSpecType_NoClusterWideApps) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_NoClusterWideApps)
	if !ok {
		that2, ok := that.(GlobalSpecType_NoClusterWideApps)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoClusterWideApps.Equal(that1.NoClusterWideApps) {
		return false
	}
	return true
}
func (this *GlobalSpecType_ClusterWideAppList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_ClusterWideAppList)
	if !ok {
		that2, ok := that.(GlobalSpecType_ClusterWideAppList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ClusterWideAppList.Equal(that1.ClusterWideAppList) {
		return false
	}
	return true
}
func (this *CreateSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType)
	if !ok {
		that2, ok := that.(CreateSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.LocalAccessChoice == nil {
		if this.LocalAccessChoice != nil {
			return false
		}
	} else if this.LocalAccessChoice == nil {
		return false
	} else if !this.LocalAccessChoice.Equal(that1.LocalAccessChoice) {
		return false
	}
	if that1.GlobalAccessChoice == nil {
		if this.GlobalAccessChoice != nil {
			return false
		}
	} else if this.GlobalAccessChoice == nil {
		return false
	} else if !this.GlobalAccessChoice.Equal(that1.GlobalAccessChoice) {
		return false
	}
	if that1.PodSecurityPolicyChoice == nil {
		if this.PodSecurityPolicyChoice != nil {
			return false
		}
	} else if this.PodSecurityPolicyChoice == nil {
		return false
	} else if !this.PodSecurityPolicyChoice.Equal(that1.PodSecurityPolicyChoice) {
		return false
	}
	if that1.ClusterRoleChoice == nil {
		if this.ClusterRoleChoice != nil {
			return false
		}
	} else if this.ClusterRoleChoice == nil {
		return false
	} else if !this.ClusterRoleChoice.Equal(that1.ClusterRoleChoice) {
		return false
	}
	if that1.ClusterRoleBindingsChoice == nil {
		if this.ClusterRoleBindingsChoice != nil {
			return false
		}
	} else if this.ClusterRoleBindingsChoice == nil {
		return false
	} else if !this.ClusterRoleBindingsChoice.Equal(that1.ClusterRoleBindingsChoice) {
		return false
	}
	return true
}
func (this *CreateSpecType_NoLocalAccess) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_NoLocalAccess)
	if !ok {
		that2, ok := that.(CreateSpecType_NoLocalAccess)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoLocalAccess.Equal(that1.NoLocalAccess) {
		return false
	}
	return true
}
func (this *CreateSpecType_LocalAccessConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_LocalAccessConfig)
	if !ok {
		that2, ok := that.(CreateSpecType_LocalAccessConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.LocalAccessConfig.Equal(that1.LocalAccessConfig) {
		return false
	}
	return true
}
func (this *CreateSpecType_NoGlobalAccess) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_NoGlobalAccess)
	if !ok {
		that2, ok := that.(CreateSpecType_NoGlobalAccess)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoGlobalAccess.Equal(that1.NoGlobalAccess) {
		return false
	}
	return true
}
func (this *CreateSpecType_GlobalAccessEnable) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_GlobalAccessEnable)
	if !ok {
		that2, ok := that.(CreateSpecType_GlobalAccessEnable)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.GlobalAccessEnable.Equal(that1.GlobalAccessEnable) {
		return false
	}
	return true
}
func (this *CreateSpecType_UseDefaultPsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_UseDefaultPsp)
	if !ok {
		that2, ok := that.(CreateSpecType_UseDefaultPsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultPsp.Equal(that1.UseDefaultPsp) {
		return false
	}
	return true
}
func (this *CreateSpecType_UseCustomPspList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_UseCustomPspList)
	if !ok {
		that2, ok := that.(CreateSpecType_UseCustomPspList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomPspList.Equal(that1.UseCustomPspList) {
		return false
	}
	return true
}
func (this *CreateSpecType_UseDefaultClusterRoles) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_UseDefaultClusterRoles)
	if !ok {
		that2, ok := that.(CreateSpecType_UseDefaultClusterRoles)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultClusterRoles.Equal(that1.UseDefaultClusterRoles) {
		return false
	}
	return true
}
func (this *CreateSpecType_UseCustomClusterRoleList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_UseCustomClusterRoleList)
	if !ok {
		that2, ok := that.(CreateSpecType_UseCustomClusterRoleList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomClusterRoleList.Equal(that1.UseCustomClusterRoleList) {
		return false
	}
	return true
}
func (this *CreateSpecType_UseDefaultClusterRoleBindings) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_UseDefaultClusterRoleBindings)
	if !ok {
		that2, ok := that.(CreateSpecType_UseDefaultClusterRoleBindings)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultClusterRoleBindings.Equal(that1.UseDefaultClusterRoleBindings) {
		return false
	}
	return true
}
func (this *CreateSpecType_UseCustomClusterRoleBindings) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_UseCustomClusterRoleBindings)
	if !ok {
		that2, ok := that.(CreateSpecType_UseCustomClusterRoleBindings)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomClusterRoleBindings.Equal(that1.UseCustomClusterRoleBindings) {
		return false
	}
	return true
}
func (this *ReplaceSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType)
	if !ok {
		that2, ok := that.(ReplaceSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.LocalAccessChoice == nil {
		if this.LocalAccessChoice != nil {
			return false
		}
	} else if this.LocalAccessChoice == nil {
		return false
	} else if !this.LocalAccessChoice.Equal(that1.LocalAccessChoice) {
		return false
	}
	if that1.GlobalAccessChoice == nil {
		if this.GlobalAccessChoice != nil {
			return false
		}
	} else if this.GlobalAccessChoice == nil {
		return false
	} else if !this.GlobalAccessChoice.Equal(that1.GlobalAccessChoice) {
		return false
	}
	if that1.PodSecurityPolicyChoice == nil {
		if this.PodSecurityPolicyChoice != nil {
			return false
		}
	} else if this.PodSecurityPolicyChoice == nil {
		return false
	} else if !this.PodSecurityPolicyChoice.Equal(that1.PodSecurityPolicyChoice) {
		return false
	}
	if that1.ClusterRoleChoice == nil {
		if this.ClusterRoleChoice != nil {
			return false
		}
	} else if this.ClusterRoleChoice == nil {
		return false
	} else if !this.ClusterRoleChoice.Equal(that1.ClusterRoleChoice) {
		return false
	}
	if that1.ClusterRoleBindingsChoice == nil {
		if this.ClusterRoleBindingsChoice != nil {
			return false
		}
	} else if this.ClusterRoleBindingsChoice == nil {
		return false
	} else if !this.ClusterRoleBindingsChoice.Equal(that1.ClusterRoleBindingsChoice) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_NoLocalAccess) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_NoLocalAccess)
	if !ok {
		that2, ok := that.(ReplaceSpecType_NoLocalAccess)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoLocalAccess.Equal(that1.NoLocalAccess) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_LocalAccessConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_LocalAccessConfig)
	if !ok {
		that2, ok := that.(ReplaceSpecType_LocalAccessConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.LocalAccessConfig.Equal(that1.LocalAccessConfig) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_NoGlobalAccess) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_NoGlobalAccess)
	if !ok {
		that2, ok := that.(ReplaceSpecType_NoGlobalAccess)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoGlobalAccess.Equal(that1.NoGlobalAccess) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_GlobalAccessEnable) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_GlobalAccessEnable)
	if !ok {
		that2, ok := that.(ReplaceSpecType_GlobalAccessEnable)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.GlobalAccessEnable.Equal(that1.GlobalAccessEnable) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_UseDefaultPsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_UseDefaultPsp)
	if !ok {
		that2, ok := that.(ReplaceSpecType_UseDefaultPsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultPsp.Equal(that1.UseDefaultPsp) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_UseCustomPspList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_UseCustomPspList)
	if !ok {
		that2, ok := that.(ReplaceSpecType_UseCustomPspList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomPspList.Equal(that1.UseCustomPspList) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_UseDefaultClusterRoles) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_UseDefaultClusterRoles)
	if !ok {
		that2, ok := that.(ReplaceSpecType_UseDefaultClusterRoles)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultClusterRoles.Equal(that1.UseDefaultClusterRoles) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_UseCustomClusterRoleList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_UseCustomClusterRoleList)
	if !ok {
		that2, ok := that.(ReplaceSpecType_UseCustomClusterRoleList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomClusterRoleList.Equal(that1.UseCustomClusterRoleList) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_UseDefaultClusterRoleBindings) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_UseDefaultClusterRoleBindings)
	if !ok {
		that2, ok := that.(ReplaceSpecType_UseDefaultClusterRoleBindings)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultClusterRoleBindings.Equal(that1.UseDefaultClusterRoleBindings) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_UseCustomClusterRoleBindings) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_UseCustomClusterRoleBindings)
	if !ok {
		that2, ok := that.(ReplaceSpecType_UseCustomClusterRoleBindings)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomClusterRoleBindings.Equal(that1.UseCustomClusterRoleBindings) {
		return false
	}
	return true
}
func (this *GetSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType)
	if !ok {
		that2, ok := that.(GetSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.LocalAccessChoice == nil {
		if this.LocalAccessChoice != nil {
			return false
		}
	} else if this.LocalAccessChoice == nil {
		return false
	} else if !this.LocalAccessChoice.Equal(that1.LocalAccessChoice) {
		return false
	}
	if that1.GlobalAccessChoice == nil {
		if this.GlobalAccessChoice != nil {
			return false
		}
	} else if this.GlobalAccessChoice == nil {
		return false
	} else if !this.GlobalAccessChoice.Equal(that1.GlobalAccessChoice) {
		return false
	}
	if that1.PodSecurityPolicyChoice == nil {
		if this.PodSecurityPolicyChoice != nil {
			return false
		}
	} else if this.PodSecurityPolicyChoice == nil {
		return false
	} else if !this.PodSecurityPolicyChoice.Equal(that1.PodSecurityPolicyChoice) {
		return false
	}
	if that1.ClusterRoleChoice == nil {
		if this.ClusterRoleChoice != nil {
			return false
		}
	} else if this.ClusterRoleChoice == nil {
		return false
	} else if !this.ClusterRoleChoice.Equal(that1.ClusterRoleChoice) {
		return false
	}
	if that1.ClusterRoleBindingsChoice == nil {
		if this.ClusterRoleBindingsChoice != nil {
			return false
		}
	} else if this.ClusterRoleBindingsChoice == nil {
		return false
	} else if !this.ClusterRoleBindingsChoice.Equal(that1.ClusterRoleBindingsChoice) {
		return false
	}
	return true
}
func (this *GetSpecType_NoLocalAccess) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_NoLocalAccess)
	if !ok {
		that2, ok := that.(GetSpecType_NoLocalAccess)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoLocalAccess.Equal(that1.NoLocalAccess) {
		return false
	}
	return true
}
func (this *GetSpecType_LocalAccessConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_LocalAccessConfig)
	if !ok {
		that2, ok := that.(GetSpecType_LocalAccessConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.LocalAccessConfig.Equal(that1.LocalAccessConfig) {
		return false
	}
	return true
}
func (this *GetSpecType_NoGlobalAccess) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_NoGlobalAccess)
	if !ok {
		that2, ok := that.(GetSpecType_NoGlobalAccess)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoGlobalAccess.Equal(that1.NoGlobalAccess) {
		return false
	}
	return true
}
func (this *GetSpecType_GlobalAccessEnable) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_GlobalAccessEnable)
	if !ok {
		that2, ok := that.(GetSpecType_GlobalAccessEnable)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.GlobalAccessEnable.Equal(that1.GlobalAccessEnable) {
		return false
	}
	return true
}
func (this *GetSpecType_UseDefaultPsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_UseDefaultPsp)
	if !ok {
		that2, ok := that.(GetSpecType_UseDefaultPsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultPsp.Equal(that1.UseDefaultPsp) {
		return false
	}
	return true
}
func (this *GetSpecType_UseCustomPspList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_UseCustomPspList)
	if !ok {
		that2, ok := that.(GetSpecType_UseCustomPspList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomPspList.Equal(that1.UseCustomPspList) {
		return false
	}
	return true
}
func (this *GetSpecType_UseDefaultClusterRoles) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_UseDefaultClusterRoles)
	if !ok {
		that2, ok := that.(GetSpecType_UseDefaultClusterRoles)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultClusterRoles.Equal(that1.UseDefaultClusterRoles) {
		return false
	}
	return true
}
func (this *GetSpecType_UseCustomClusterRoleList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_UseCustomClusterRoleList)
	if !ok {
		that2, ok := that.(GetSpecType_UseCustomClusterRoleList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomClusterRoleList.Equal(that1.UseCustomClusterRoleList) {
		return false
	}
	return true
}
func (this *GetSpecType_UseDefaultClusterRoleBindings) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_UseDefaultClusterRoleBindings)
	if !ok {
		that2, ok := that.(GetSpecType_UseDefaultClusterRoleBindings)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseDefaultClusterRoleBindings.Equal(that1.UseDefaultClusterRoleBindings) {
		return false
	}
	return true
}
func (this *GetSpecType_UseCustomClusterRoleBindings) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_UseCustomClusterRoleBindings)
	if !ok {
		that2, ok := that.(GetSpecType_UseCustomClusterRoleBindings)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UseCustomClusterRoleBindings.Equal(that1.UseCustomClusterRoleBindings) {
		return false
	}
	return true
}
func (this *ApplicationArgoCDType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&k8s_cluster.ApplicationArgoCDType{")
	s = append(s, "GeneratedYaml: "+fmt.Sprintf("%#v", this.GeneratedYaml)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ApplicationDashboardType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&k8s_cluster.ApplicationDashboardType{")
	s = append(s, "GeneratedYaml: "+fmt.Sprintf("%#v", this.GeneratedYaml)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ClusterWideAppType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&k8s_cluster.ClusterWideAppType{")
	if this.AppChoice != nil {
		s = append(s, "AppChoice: "+fmt.Sprintf("%#v", this.AppChoice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ClusterWideAppType_ArgoCd) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ClusterWideAppType_ArgoCd{` +
		`ArgoCd:` + fmt.Sprintf("%#v", this.ArgoCd) + `}`}, ", ")
	return s
}
func (this *ClusterWideAppType_Dashboard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ClusterWideAppType_Dashboard{` +
		`Dashboard:` + fmt.Sprintf("%#v", this.Dashboard) + `}`}, ", ")
	return s
}
func (this *ClusterWideAppListType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&k8s_cluster.ClusterWideAppListType{")
	if this.ClusterWideApps != nil {
		s = append(s, "ClusterWideApps: "+fmt.Sprintf("%#v", this.ClusterWideApps)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *LocalAccessConfigType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&k8s_cluster.LocalAccessConfigType{")
	s = append(s, "LocalDomain: "+fmt.Sprintf("%#v", this.LocalDomain)+",\n")
	if this.PortChoice != nil {
		s = append(s, "PortChoice: "+fmt.Sprintf("%#v", this.PortChoice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *LocalAccessConfigType_DefaultPort) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.LocalAccessConfigType_DefaultPort{` +
		`DefaultPort:` + fmt.Sprintf("%#v", this.DefaultPort) + `}`}, ", ")
	return s
}
func (this *LocalAccessConfigType_Port) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.LocalAccessConfigType_Port{` +
		`Port:` + fmt.Sprintf("%#v", this.Port) + `}`}, ", ")
	return s
}
func (this *PodSecurityPolicyListType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&k8s_cluster.PodSecurityPolicyListType{")
	if this.PodSecurityPolicies != nil {
		s = append(s, "PodSecurityPolicies: "+fmt.Sprintf("%#v", this.PodSecurityPolicies)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ClusterRoleListType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&k8s_cluster.ClusterRoleListType{")
	if this.ClusterRoles != nil {
		s = append(s, "ClusterRoles: "+fmt.Sprintf("%#v", this.ClusterRoles)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ClusterRoleBindingListType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&k8s_cluster.ClusterRoleBindingListType{")
	if this.ClusterRoleBindings != nil {
		s = append(s, "ClusterRoleBindings: "+fmt.Sprintf("%#v", this.ClusterRoleBindings)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GlobalSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 20)
	s = append(s, "&k8s_cluster.GlobalSpecType{")
	if this.LocalAccessChoice != nil {
		s = append(s, "LocalAccessChoice: "+fmt.Sprintf("%#v", this.LocalAccessChoice)+",\n")
	}
	if this.GlobalAccessChoice != nil {
		s = append(s, "GlobalAccessChoice: "+fmt.Sprintf("%#v", this.GlobalAccessChoice)+",\n")
	}
	if this.PodSecurityPolicyChoice != nil {
		s = append(s, "PodSecurityPolicyChoice: "+fmt.Sprintf("%#v", this.PodSecurityPolicyChoice)+",\n")
	}
	if this.ClusterRoleChoice != nil {
		s = append(s, "ClusterRoleChoice: "+fmt.Sprintf("%#v", this.ClusterRoleChoice)+",\n")
	}
	if this.ClusterRoleBindingsChoice != nil {
		s = append(s, "ClusterRoleBindingsChoice: "+fmt.Sprintf("%#v", this.ClusterRoleBindingsChoice)+",\n")
	}
	if this.AppsChoice != nil {
		s = append(s, "AppsChoice: "+fmt.Sprintf("%#v", this.AppsChoice)+",\n")
	}
	if this.ViewInternal != nil {
		s = append(s, "ViewInternal: "+fmt.Sprintf("%#v", this.ViewInternal)+",\n")
	}
	if this.FinalClusterRoleBindings != nil {
		s = append(s, "FinalClusterRoleBindings: "+fmt.Sprintf("%#v", this.FinalClusterRoleBindings)+",\n")
	}
	if this.FinalClusterRoles != nil {
		s = append(s, "FinalClusterRoles: "+fmt.Sprintf("%#v", this.FinalClusterRoles)+",\n")
	}
	if this.FinalPodSecurityPolicies != nil {
		s = append(s, "FinalPodSecurityPolicies: "+fmt.Sprintf("%#v", this.FinalPodSecurityPolicies)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GlobalSpecType_NoLocalAccess) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_NoLocalAccess{` +
		`NoLocalAccess:` + fmt.Sprintf("%#v", this.NoLocalAccess) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_LocalAccessConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_LocalAccessConfig{` +
		`LocalAccessConfig:` + fmt.Sprintf("%#v", this.LocalAccessConfig) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_NoGlobalAccess) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_NoGlobalAccess{` +
		`NoGlobalAccess:` + fmt.Sprintf("%#v", this.NoGlobalAccess) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_GlobalAccessEnable) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_GlobalAccessEnable{` +
		`GlobalAccessEnable:` + fmt.Sprintf("%#v", this.GlobalAccessEnable) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_UseDefaultPsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_UseDefaultPsp{` +
		`UseDefaultPsp:` + fmt.Sprintf("%#v", this.UseDefaultPsp) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_UseCustomPspList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_UseCustomPspList{` +
		`UseCustomPspList:` + fmt.Sprintf("%#v", this.UseCustomPspList) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_UseDefaultClusterRoles) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_UseDefaultClusterRoles{` +
		`UseDefaultClusterRoles:` + fmt.Sprintf("%#v", this.UseDefaultClusterRoles) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_UseCustomClusterRoleList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_UseCustomClusterRoleList{` +
		`UseCustomClusterRoleList:` + fmt.Sprintf("%#v", this.UseCustomClusterRoleList) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_UseDefaultClusterRoleBindings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_UseDefaultClusterRoleBindings{` +
		`UseDefaultClusterRoleBindings:` + fmt.Sprintf("%#v", this.UseDefaultClusterRoleBindings) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_UseCustomClusterRoleBindings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_UseCustomClusterRoleBindings{` +
		`UseCustomClusterRoleBindings:` + fmt.Sprintf("%#v", this.UseCustomClusterRoleBindings) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_NoClusterWideApps) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_NoClusterWideApps{` +
		`NoClusterWideApps:` + fmt.Sprintf("%#v", this.NoClusterWideApps) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_ClusterWideAppList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GlobalSpecType_ClusterWideAppList{` +
		`ClusterWideAppList:` + fmt.Sprintf("%#v", this.ClusterWideAppList) + `}`}, ", ")
	return s
}
func (this *CreateSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 14)
	s = append(s, "&k8s_cluster.CreateSpecType{")
	if this.LocalAccessChoice != nil {
		s = append(s, "LocalAccessChoice: "+fmt.Sprintf("%#v", this.LocalAccessChoice)+",\n")
	}
	if this.GlobalAccessChoice != nil {
		s = append(s, "GlobalAccessChoice: "+fmt.Sprintf("%#v", this.GlobalAccessChoice)+",\n")
	}
	if this.PodSecurityPolicyChoice != nil {
		s = append(s, "PodSecurityPolicyChoice: "+fmt.Sprintf("%#v", this.PodSecurityPolicyChoice)+",\n")
	}
	if this.ClusterRoleChoice != nil {
		s = append(s, "ClusterRoleChoice: "+fmt.Sprintf("%#v", this.ClusterRoleChoice)+",\n")
	}
	if this.ClusterRoleBindingsChoice != nil {
		s = append(s, "ClusterRoleBindingsChoice: "+fmt.Sprintf("%#v", this.ClusterRoleBindingsChoice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateSpecType_NoLocalAccess) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_NoLocalAccess{` +
		`NoLocalAccess:` + fmt.Sprintf("%#v", this.NoLocalAccess) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_LocalAccessConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_LocalAccessConfig{` +
		`LocalAccessConfig:` + fmt.Sprintf("%#v", this.LocalAccessConfig) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_NoGlobalAccess) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_NoGlobalAccess{` +
		`NoGlobalAccess:` + fmt.Sprintf("%#v", this.NoGlobalAccess) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_GlobalAccessEnable) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_GlobalAccessEnable{` +
		`GlobalAccessEnable:` + fmt.Sprintf("%#v", this.GlobalAccessEnable) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_UseDefaultPsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_UseDefaultPsp{` +
		`UseDefaultPsp:` + fmt.Sprintf("%#v", this.UseDefaultPsp) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_UseCustomPspList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_UseCustomPspList{` +
		`UseCustomPspList:` + fmt.Sprintf("%#v", this.UseCustomPspList) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_UseDefaultClusterRoles) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_UseDefaultClusterRoles{` +
		`UseDefaultClusterRoles:` + fmt.Sprintf("%#v", this.UseDefaultClusterRoles) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_UseCustomClusterRoleList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_UseCustomClusterRoleList{` +
		`UseCustomClusterRoleList:` + fmt.Sprintf("%#v", this.UseCustomClusterRoleList) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_UseDefaultClusterRoleBindings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_UseDefaultClusterRoleBindings{` +
		`UseDefaultClusterRoleBindings:` + fmt.Sprintf("%#v", this.UseDefaultClusterRoleBindings) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_UseCustomClusterRoleBindings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.CreateSpecType_UseCustomClusterRoleBindings{` +
		`UseCustomClusterRoleBindings:` + fmt.Sprintf("%#v", this.UseCustomClusterRoleBindings) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 14)
	s = append(s, "&k8s_cluster.ReplaceSpecType{")
	if this.LocalAccessChoice != nil {
		s = append(s, "LocalAccessChoice: "+fmt.Sprintf("%#v", this.LocalAccessChoice)+",\n")
	}
	if this.GlobalAccessChoice != nil {
		s = append(s, "GlobalAccessChoice: "+fmt.Sprintf("%#v", this.GlobalAccessChoice)+",\n")
	}
	if this.PodSecurityPolicyChoice != nil {
		s = append(s, "PodSecurityPolicyChoice: "+fmt.Sprintf("%#v", this.PodSecurityPolicyChoice)+",\n")
	}
	if this.ClusterRoleChoice != nil {
		s = append(s, "ClusterRoleChoice: "+fmt.Sprintf("%#v", this.ClusterRoleChoice)+",\n")
	}
	if this.ClusterRoleBindingsChoice != nil {
		s = append(s, "ClusterRoleBindingsChoice: "+fmt.Sprintf("%#v", this.ClusterRoleBindingsChoice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ReplaceSpecType_NoLocalAccess) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_NoLocalAccess{` +
		`NoLocalAccess:` + fmt.Sprintf("%#v", this.NoLocalAccess) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_LocalAccessConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_LocalAccessConfig{` +
		`LocalAccessConfig:` + fmt.Sprintf("%#v", this.LocalAccessConfig) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_NoGlobalAccess) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_NoGlobalAccess{` +
		`NoGlobalAccess:` + fmt.Sprintf("%#v", this.NoGlobalAccess) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_GlobalAccessEnable) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_GlobalAccessEnable{` +
		`GlobalAccessEnable:` + fmt.Sprintf("%#v", this.GlobalAccessEnable) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_UseDefaultPsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_UseDefaultPsp{` +
		`UseDefaultPsp:` + fmt.Sprintf("%#v", this.UseDefaultPsp) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_UseCustomPspList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_UseCustomPspList{` +
		`UseCustomPspList:` + fmt.Sprintf("%#v", this.UseCustomPspList) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_UseDefaultClusterRoles) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_UseDefaultClusterRoles{` +
		`UseDefaultClusterRoles:` + fmt.Sprintf("%#v", this.UseDefaultClusterRoles) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_UseCustomClusterRoleList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_UseCustomClusterRoleList{` +
		`UseCustomClusterRoleList:` + fmt.Sprintf("%#v", this.UseCustomClusterRoleList) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_UseDefaultClusterRoleBindings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_UseDefaultClusterRoleBindings{` +
		`UseDefaultClusterRoleBindings:` + fmt.Sprintf("%#v", this.UseDefaultClusterRoleBindings) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_UseCustomClusterRoleBindings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.ReplaceSpecType_UseCustomClusterRoleBindings{` +
		`UseCustomClusterRoleBindings:` + fmt.Sprintf("%#v", this.UseCustomClusterRoleBindings) + `}`}, ", ")
	return s
}
func (this *GetSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 14)
	s = append(s, "&k8s_cluster.GetSpecType{")
	if this.LocalAccessChoice != nil {
		s = append(s, "LocalAccessChoice: "+fmt.Sprintf("%#v", this.LocalAccessChoice)+",\n")
	}
	if this.GlobalAccessChoice != nil {
		s = append(s, "GlobalAccessChoice: "+fmt.Sprintf("%#v", this.GlobalAccessChoice)+",\n")
	}
	if this.PodSecurityPolicyChoice != nil {
		s = append(s, "PodSecurityPolicyChoice: "+fmt.Sprintf("%#v", this.PodSecurityPolicyChoice)+",\n")
	}
	if this.ClusterRoleChoice != nil {
		s = append(s, "ClusterRoleChoice: "+fmt.Sprintf("%#v", this.ClusterRoleChoice)+",\n")
	}
	if this.ClusterRoleBindingsChoice != nil {
		s = append(s, "ClusterRoleBindingsChoice: "+fmt.Sprintf("%#v", this.ClusterRoleBindingsChoice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetSpecType_NoLocalAccess) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_NoLocalAccess{` +
		`NoLocalAccess:` + fmt.Sprintf("%#v", this.NoLocalAccess) + `}`}, ", ")
	return s
}
func (this *GetSpecType_LocalAccessConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_LocalAccessConfig{` +
		`LocalAccessConfig:` + fmt.Sprintf("%#v", this.LocalAccessConfig) + `}`}, ", ")
	return s
}
func (this *GetSpecType_NoGlobalAccess) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_NoGlobalAccess{` +
		`NoGlobalAccess:` + fmt.Sprintf("%#v", this.NoGlobalAccess) + `}`}, ", ")
	return s
}
func (this *GetSpecType_GlobalAccessEnable) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_GlobalAccessEnable{` +
		`GlobalAccessEnable:` + fmt.Sprintf("%#v", this.GlobalAccessEnable) + `}`}, ", ")
	return s
}
func (this *GetSpecType_UseDefaultPsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_UseDefaultPsp{` +
		`UseDefaultPsp:` + fmt.Sprintf("%#v", this.UseDefaultPsp) + `}`}, ", ")
	return s
}
func (this *GetSpecType_UseCustomPspList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_UseCustomPspList{` +
		`UseCustomPspList:` + fmt.Sprintf("%#v", this.UseCustomPspList) + `}`}, ", ")
	return s
}
func (this *GetSpecType_UseDefaultClusterRoles) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_UseDefaultClusterRoles{` +
		`UseDefaultClusterRoles:` + fmt.Sprintf("%#v", this.UseDefaultClusterRoles) + `}`}, ", ")
	return s
}
func (this *GetSpecType_UseCustomClusterRoleList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_UseCustomClusterRoleList{` +
		`UseCustomClusterRoleList:` + fmt.Sprintf("%#v", this.UseCustomClusterRoleList) + `}`}, ", ")
	return s
}
func (this *GetSpecType_UseDefaultClusterRoleBindings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_UseDefaultClusterRoleBindings{` +
		`UseDefaultClusterRoleBindings:` + fmt.Sprintf("%#v", this.UseDefaultClusterRoleBindings) + `}`}, ", ")
	return s
}
func (this *GetSpecType_UseCustomClusterRoleBindings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&k8s_cluster.GetSpecType_UseCustomClusterRoleBindings{` +
		`UseCustomClusterRoleBindings:` + fmt.Sprintf("%#v", this.UseCustomClusterRoleBindings) + `}`}, ", ")
	return s
}
func valueToGoStringTypes(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *ApplicationArgoCDType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ApplicationArgoCDType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.GeneratedYaml) > 0 {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x3e
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.GeneratedYaml)))
		i += copy(dAtA[i:], m.GeneratedYaml)
	}
	return i, nil
}

func (m *ApplicationDashboardType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ApplicationDashboardType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.GeneratedYaml) > 0 {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x3e
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.GeneratedYaml)))
		i += copy(dAtA[i:], m.GeneratedYaml)
	}
	return i, nil
}

func (m *ClusterWideAppType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClusterWideAppType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.AppChoice != nil {
		nn1, err := m.AppChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn1
	}
	return i, nil
}

func (m *ClusterWideAppType_ArgoCd) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ArgoCd != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ArgoCd.Size()))
		n2, err := m.ArgoCd.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	return i, nil
}
func (m *ClusterWideAppType_Dashboard) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.Dashboard != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.Dashboard.Size()))
		n3, err := m.Dashboard.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	return i, nil
}
func (m *ClusterWideAppListType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClusterWideAppListType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ClusterWideApps) > 0 {
		for _, msg := range m.ClusterWideApps {
			dAtA[i] = 0xa
			i++
			i = encodeVarintTypes(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *LocalAccessConfigType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LocalAccessConfigType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.LocalDomain) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.LocalDomain)))
		i += copy(dAtA[i:], m.LocalDomain)
	}
	if m.PortChoice != nil {
		nn4, err := m.PortChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn4
	}
	return i, nil
}

func (m *LocalAccessConfigType_DefaultPort) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.DefaultPort != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.DefaultPort.Size()))
		n5, err := m.DefaultPort.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	return i, nil
}
func (m *LocalAccessConfigType_Port) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x20
	i++
	i = encodeVarintTypes(dAtA, i, uint64(m.Port))
	return i, nil
}
func (m *PodSecurityPolicyListType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PodSecurityPolicyListType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.PodSecurityPolicies) > 0 {
		for _, msg := range m.PodSecurityPolicies {
			dAtA[i] = 0xa
			i++
			i = encodeVarintTypes(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *ClusterRoleListType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClusterRoleListType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ClusterRoles) > 0 {
		for _, msg := range m.ClusterRoles {
			dAtA[i] = 0xa
			i++
			i = encodeVarintTypes(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *ClusterRoleBindingListType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClusterRoleBindingListType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ClusterRoleBindings) > 0 {
		for _, msg := range m.ClusterRoleBindings {
			dAtA[i] = 0xa
			i++
			i = encodeVarintTypes(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *GlobalSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GlobalSpecType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.LocalAccessChoice != nil {
		nn6, err := m.LocalAccessChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn6
	}
	if m.GlobalAccessChoice != nil {
		nn7, err := m.GlobalAccessChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn7
	}
	if m.PodSecurityPolicyChoice != nil {
		nn8, err := m.PodSecurityPolicyChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn8
	}
	if m.ClusterRoleChoice != nil {
		nn9, err := m.ClusterRoleChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn9
	}
	if m.ClusterRoleBindingsChoice != nil {
		nn10, err := m.ClusterRoleBindingsChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn10
	}
	if m.AppsChoice != nil {
		nn11, err := m.AppsChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn11
	}
	if m.ViewInternal != nil {
		dAtA[i] = 0xc2
		i++
		dAtA[i] = 0x3e
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ViewInternal.Size()))
		n12, err := m.ViewInternal.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n12
	}
	if len(m.FinalClusterRoleBindings) > 0 {
		for _, msg := range m.FinalClusterRoleBindings {
			dAtA[i] = 0xca
			i++
			dAtA[i] = 0x3e
			i++
			i = encodeVarintTypes(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.FinalClusterRoles) > 0 {
		for _, msg := range m.FinalClusterRoles {
			dAtA[i] = 0xd2
			i++
			dAtA[i] = 0x3e
			i++
			i = encodeVarintTypes(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.FinalPodSecurityPolicies) > 0 {
		for _, msg := range m.FinalPodSecurityPolicies {
			dAtA[i] = 0xda
			i++
			dAtA[i] = 0x3e
			i++
			i = encodeVarintTypes(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *GlobalSpecType_NoLocalAccess) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoLocalAccess != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoLocalAccess.Size()))
		n13, err := m.NoLocalAccess.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n13
	}
	return i, nil
}
func (m *GlobalSpecType_LocalAccessConfig) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LocalAccessConfig != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.LocalAccessConfig.Size()))
		n14, err := m.LocalAccessConfig.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n14
	}
	return i, nil
}
func (m *GlobalSpecType_NoGlobalAccess) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoGlobalAccess != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoGlobalAccess.Size()))
		n15, err := m.NoGlobalAccess.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n15
	}
	return i, nil
}
func (m *GlobalSpecType_GlobalAccessEnable) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GlobalAccessEnable != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.GlobalAccessEnable.Size()))
		n16, err := m.GlobalAccessEnable.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n16
	}
	return i, nil
}
func (m *GlobalSpecType_UseDefaultPsp) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseDefaultPsp != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseDefaultPsp.Size()))
		n17, err := m.UseDefaultPsp.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n17
	}
	return i, nil
}
func (m *GlobalSpecType_UseCustomPspList) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseCustomPspList != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseCustomPspList.Size()))
		n18, err := m.UseCustomPspList.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n18
	}
	return i, nil
}
func (m *GlobalSpecType_UseDefaultClusterRoles) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseDefaultClusterRoles != nil {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseDefaultClusterRoles.Size()))
		n19, err := m.UseDefaultClusterRoles.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n19
	}
	return i, nil
}
func (m *GlobalSpecType_UseCustomClusterRoleList) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseCustomClusterRoleList != nil {
		dAtA[i] = 0x62
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseCustomClusterRoleList.Size()))
		n20, err := m.UseCustomClusterRoleList.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n20
	}
	return i, nil
}
func (m *GlobalSpecType_UseDefaultClusterRoleBindings) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseDefaultClusterRoleBindings != nil {
		dAtA[i] = 0x72
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseDefaultClusterRoleBindings.Size()))
		n21, err := m.UseDefaultClusterRoleBindings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n21
	}
	return i, nil
}
func (m *GlobalSpecType_UseCustomClusterRoleBindings) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseCustomClusterRoleBindings != nil {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseCustomClusterRoleBindings.Size()))
		n22, err := m.UseCustomClusterRoleBindings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n22
	}
	return i, nil
}
func (m *GlobalSpecType_NoClusterWideApps) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoClusterWideApps != nil {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoClusterWideApps.Size()))
		n23, err := m.NoClusterWideApps.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n23
	}
	return i, nil
}
func (m *GlobalSpecType_ClusterWideAppList) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ClusterWideAppList != nil {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ClusterWideAppList.Size()))
		n24, err := m.ClusterWideAppList.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n24
	}
	return i, nil
}
func (m *CreateSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateSpecType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.LocalAccessChoice != nil {
		nn25, err := m.LocalAccessChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn25
	}
	if m.GlobalAccessChoice != nil {
		nn26, err := m.GlobalAccessChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn26
	}
	if m.PodSecurityPolicyChoice != nil {
		nn27, err := m.PodSecurityPolicyChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn27
	}
	if m.ClusterRoleChoice != nil {
		nn28, err := m.ClusterRoleChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn28
	}
	if m.ClusterRoleBindingsChoice != nil {
		nn29, err := m.ClusterRoleBindingsChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn29
	}
	return i, nil
}

func (m *CreateSpecType_NoLocalAccess) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoLocalAccess != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoLocalAccess.Size()))
		n30, err := m.NoLocalAccess.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n30
	}
	return i, nil
}
func (m *CreateSpecType_LocalAccessConfig) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LocalAccessConfig != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.LocalAccessConfig.Size()))
		n31, err := m.LocalAccessConfig.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n31
	}
	return i, nil
}
func (m *CreateSpecType_NoGlobalAccess) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoGlobalAccess != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoGlobalAccess.Size()))
		n32, err := m.NoGlobalAccess.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n32
	}
	return i, nil
}
func (m *CreateSpecType_GlobalAccessEnable) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GlobalAccessEnable != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.GlobalAccessEnable.Size()))
		n33, err := m.GlobalAccessEnable.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n33
	}
	return i, nil
}
func (m *CreateSpecType_UseDefaultPsp) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseDefaultPsp != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseDefaultPsp.Size()))
		n34, err := m.UseDefaultPsp.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n34
	}
	return i, nil
}
func (m *CreateSpecType_UseCustomPspList) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseCustomPspList != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseCustomPspList.Size()))
		n35, err := m.UseCustomPspList.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n35
	}
	return i, nil
}
func (m *CreateSpecType_UseDefaultClusterRoles) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseDefaultClusterRoles != nil {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseDefaultClusterRoles.Size()))
		n36, err := m.UseDefaultClusterRoles.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n36
	}
	return i, nil
}
func (m *CreateSpecType_UseCustomClusterRoleList) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseCustomClusterRoleList != nil {
		dAtA[i] = 0x62
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseCustomClusterRoleList.Size()))
		n37, err := m.UseCustomClusterRoleList.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n37
	}
	return i, nil
}
func (m *CreateSpecType_UseDefaultClusterRoleBindings) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseDefaultClusterRoleBindings != nil {
		dAtA[i] = 0x72
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseDefaultClusterRoleBindings.Size()))
		n38, err := m.UseDefaultClusterRoleBindings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n38
	}
	return i, nil
}
func (m *CreateSpecType_UseCustomClusterRoleBindings) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseCustomClusterRoleBindings != nil {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseCustomClusterRoleBindings.Size()))
		n39, err := m.UseCustomClusterRoleBindings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n39
	}
	return i, nil
}
func (m *ReplaceSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReplaceSpecType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.LocalAccessChoice != nil {
		nn40, err := m.LocalAccessChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn40
	}
	if m.GlobalAccessChoice != nil {
		nn41, err := m.GlobalAccessChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn41
	}
	if m.PodSecurityPolicyChoice != nil {
		nn42, err := m.PodSecurityPolicyChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn42
	}
	if m.ClusterRoleChoice != nil {
		nn43, err := m.ClusterRoleChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn43
	}
	if m.ClusterRoleBindingsChoice != nil {
		nn44, err := m.ClusterRoleBindingsChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn44
	}
	return i, nil
}

func (m *ReplaceSpecType_NoLocalAccess) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoLocalAccess != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoLocalAccess.Size()))
		n45, err := m.NoLocalAccess.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n45
	}
	return i, nil
}
func (m *ReplaceSpecType_LocalAccessConfig) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LocalAccessConfig != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.LocalAccessConfig.Size()))
		n46, err := m.LocalAccessConfig.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n46
	}
	return i, nil
}
func (m *ReplaceSpecType_NoGlobalAccess) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoGlobalAccess != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoGlobalAccess.Size()))
		n47, err := m.NoGlobalAccess.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n47
	}
	return i, nil
}
func (m *ReplaceSpecType_GlobalAccessEnable) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GlobalAccessEnable != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.GlobalAccessEnable.Size()))
		n48, err := m.GlobalAccessEnable.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n48
	}
	return i, nil
}
func (m *ReplaceSpecType_UseDefaultPsp) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseDefaultPsp != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseDefaultPsp.Size()))
		n49, err := m.UseDefaultPsp.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n49
	}
	return i, nil
}
func (m *ReplaceSpecType_UseCustomPspList) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseCustomPspList != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseCustomPspList.Size()))
		n50, err := m.UseCustomPspList.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n50
	}
	return i, nil
}
func (m *ReplaceSpecType_UseDefaultClusterRoles) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseDefaultClusterRoles != nil {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseDefaultClusterRoles.Size()))
		n51, err := m.UseDefaultClusterRoles.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n51
	}
	return i, nil
}
func (m *ReplaceSpecType_UseCustomClusterRoleList) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseCustomClusterRoleList != nil {
		dAtA[i] = 0x62
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseCustomClusterRoleList.Size()))
		n52, err := m.UseCustomClusterRoleList.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n52
	}
	return i, nil
}
func (m *ReplaceSpecType_UseDefaultClusterRoleBindings) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseDefaultClusterRoleBindings != nil {
		dAtA[i] = 0x72
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseDefaultClusterRoleBindings.Size()))
		n53, err := m.UseDefaultClusterRoleBindings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n53
	}
	return i, nil
}
func (m *ReplaceSpecType_UseCustomClusterRoleBindings) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseCustomClusterRoleBindings != nil {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseCustomClusterRoleBindings.Size()))
		n54, err := m.UseCustomClusterRoleBindings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n54
	}
	return i, nil
}
func (m *GetSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetSpecType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.LocalAccessChoice != nil {
		nn55, err := m.LocalAccessChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn55
	}
	if m.GlobalAccessChoice != nil {
		nn56, err := m.GlobalAccessChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn56
	}
	if m.PodSecurityPolicyChoice != nil {
		nn57, err := m.PodSecurityPolicyChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn57
	}
	if m.ClusterRoleChoice != nil {
		nn58, err := m.ClusterRoleChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn58
	}
	if m.ClusterRoleBindingsChoice != nil {
		nn59, err := m.ClusterRoleBindingsChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn59
	}
	return i, nil
}

func (m *GetSpecType_NoLocalAccess) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoLocalAccess != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoLocalAccess.Size()))
		n60, err := m.NoLocalAccess.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n60
	}
	return i, nil
}
func (m *GetSpecType_LocalAccessConfig) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LocalAccessConfig != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.LocalAccessConfig.Size()))
		n61, err := m.LocalAccessConfig.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n61
	}
	return i, nil
}
func (m *GetSpecType_NoGlobalAccess) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoGlobalAccess != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoGlobalAccess.Size()))
		n62, err := m.NoGlobalAccess.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n62
	}
	return i, nil
}
func (m *GetSpecType_GlobalAccessEnable) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GlobalAccessEnable != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.GlobalAccessEnable.Size()))
		n63, err := m.GlobalAccessEnable.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n63
	}
	return i, nil
}
func (m *GetSpecType_UseDefaultPsp) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseDefaultPsp != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseDefaultPsp.Size()))
		n64, err := m.UseDefaultPsp.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n64
	}
	return i, nil
}
func (m *GetSpecType_UseCustomPspList) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseCustomPspList != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseCustomPspList.Size()))
		n65, err := m.UseCustomPspList.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n65
	}
	return i, nil
}
func (m *GetSpecType_UseDefaultClusterRoles) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseDefaultClusterRoles != nil {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseDefaultClusterRoles.Size()))
		n66, err := m.UseDefaultClusterRoles.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n66
	}
	return i, nil
}
func (m *GetSpecType_UseCustomClusterRoleList) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseCustomClusterRoleList != nil {
		dAtA[i] = 0x62
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseCustomClusterRoleList.Size()))
		n67, err := m.UseCustomClusterRoleList.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n67
	}
	return i, nil
}
func (m *GetSpecType_UseDefaultClusterRoleBindings) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseDefaultClusterRoleBindings != nil {
		dAtA[i] = 0x72
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseDefaultClusterRoleBindings.Size()))
		n68, err := m.UseDefaultClusterRoleBindings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n68
	}
	return i, nil
}
func (m *GetSpecType_UseCustomClusterRoleBindings) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UseCustomClusterRoleBindings != nil {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UseCustomClusterRoleBindings.Size()))
		n69, err := m.UseCustomClusterRoleBindings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n69
	}
	return i, nil
}
func encodeVarintTypes(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func NewPopulatedApplicationArgoCDType(r randyTypes, easy bool) *ApplicationArgoCDType {
	this := &ApplicationArgoCDType{}
	this.GeneratedYaml = string(randStringTypes(r))
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedApplicationDashboardType(r randyTypes, easy bool) *ApplicationDashboardType {
	this := &ApplicationDashboardType{}
	this.GeneratedYaml = string(randStringTypes(r))
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedClusterWideAppType(r randyTypes, easy bool) *ClusterWideAppType {
	this := &ClusterWideAppType{}
	oneofNumber_AppChoice := []int32{2, 3}[r.Intn(2)]
	switch oneofNumber_AppChoice {
	case 2:
		this.AppChoice = NewPopulatedClusterWideAppType_ArgoCd(r, easy)
	case 3:
		this.AppChoice = NewPopulatedClusterWideAppType_Dashboard(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedClusterWideAppType_ArgoCd(r randyTypes, easy bool) *ClusterWideAppType_ArgoCd {
	this := &ClusterWideAppType_ArgoCd{}
	this.ArgoCd = NewPopulatedApplicationArgoCDType(r, easy)
	return this
}
func NewPopulatedClusterWideAppType_Dashboard(r randyTypes, easy bool) *ClusterWideAppType_Dashboard {
	this := &ClusterWideAppType_Dashboard{}
	this.Dashboard = NewPopulatedApplicationDashboardType(r, easy)
	return this
}
func NewPopulatedClusterWideAppListType(r randyTypes, easy bool) *ClusterWideAppListType {
	this := &ClusterWideAppListType{}
	if r.Intn(10) != 0 {
		v1 := r.Intn(5)
		this.ClusterWideApps = make([]*ClusterWideAppType, v1)
		for i := 0; i < v1; i++ {
			this.ClusterWideApps[i] = NewPopulatedClusterWideAppType(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedLocalAccessConfigType(r randyTypes, easy bool) *LocalAccessConfigType {
	this := &LocalAccessConfigType{}
	this.LocalDomain = string(randStringTypes(r))
	oneofNumber_PortChoice := []int32{3, 4}[r.Intn(2)]
	switch oneofNumber_PortChoice {
	case 3:
		this.PortChoice = NewPopulatedLocalAccessConfigType_DefaultPort(r, easy)
	case 4:
		this.PortChoice = NewPopulatedLocalAccessConfigType_Port(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedLocalAccessConfigType_DefaultPort(r randyTypes, easy bool) *LocalAccessConfigType_DefaultPort {
	this := &LocalAccessConfigType_DefaultPort{}
	this.DefaultPort = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedLocalAccessConfigType_Port(r randyTypes, easy bool) *LocalAccessConfigType_Port {
	this := &LocalAccessConfigType_Port{}
	this.Port = uint32(r.Uint32())
	return this
}
func NewPopulatedPodSecurityPolicyListType(r randyTypes, easy bool) *PodSecurityPolicyListType {
	this := &PodSecurityPolicyListType{}
	if r.Intn(10) != 0 {
		v2 := r.Intn(5)
		this.PodSecurityPolicies = make([]*ves_io_schema_views.ObjectRefType, v2)
		for i := 0; i < v2; i++ {
			this.PodSecurityPolicies[i] = ves_io_schema_views.NewPopulatedObjectRefType(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedClusterRoleListType(r randyTypes, easy bool) *ClusterRoleListType {
	this := &ClusterRoleListType{}
	if r.Intn(10) != 0 {
		v3 := r.Intn(5)
		this.ClusterRoles = make([]*ves_io_schema_views.ObjectRefType, v3)
		for i := 0; i < v3; i++ {
			this.ClusterRoles[i] = ves_io_schema_views.NewPopulatedObjectRefType(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedClusterRoleBindingListType(r randyTypes, easy bool) *ClusterRoleBindingListType {
	this := &ClusterRoleBindingListType{}
	if r.Intn(10) != 0 {
		v4 := r.Intn(5)
		this.ClusterRoleBindings = make([]*ves_io_schema_views.ObjectRefType, v4)
		for i := 0; i < v4; i++ {
			this.ClusterRoleBindings[i] = ves_io_schema_views.NewPopulatedObjectRefType(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedGlobalSpecType(r randyTypes, easy bool) *GlobalSpecType {
	this := &GlobalSpecType{}
	oneofNumber_LocalAccessChoice := []int32{2, 3}[r.Intn(2)]
	switch oneofNumber_LocalAccessChoice {
	case 2:
		this.LocalAccessChoice = NewPopulatedGlobalSpecType_NoLocalAccess(r, easy)
	case 3:
		this.LocalAccessChoice = NewPopulatedGlobalSpecType_LocalAccessConfig(r, easy)
	}
	oneofNumber_GlobalAccessChoice := []int32{5, 6}[r.Intn(2)]
	switch oneofNumber_GlobalAccessChoice {
	case 5:
		this.GlobalAccessChoice = NewPopulatedGlobalSpecType_NoGlobalAccess(r, easy)
	case 6:
		this.GlobalAccessChoice = NewPopulatedGlobalSpecType_GlobalAccessEnable(r, easy)
	}
	oneofNumber_PodSecurityPolicyChoice := []int32{8, 9}[r.Intn(2)]
	switch oneofNumber_PodSecurityPolicyChoice {
	case 8:
		this.PodSecurityPolicyChoice = NewPopulatedGlobalSpecType_UseDefaultPsp(r, easy)
	case 9:
		this.PodSecurityPolicyChoice = NewPopulatedGlobalSpecType_UseCustomPspList(r, easy)
	}
	oneofNumber_ClusterRoleChoice := []int32{11, 12}[r.Intn(2)]
	switch oneofNumber_ClusterRoleChoice {
	case 11:
		this.ClusterRoleChoice = NewPopulatedGlobalSpecType_UseDefaultClusterRoles(r, easy)
	case 12:
		this.ClusterRoleChoice = NewPopulatedGlobalSpecType_UseCustomClusterRoleList(r, easy)
	}
	oneofNumber_ClusterRoleBindingsChoice := []int32{14, 15}[r.Intn(2)]
	switch oneofNumber_ClusterRoleBindingsChoice {
	case 14:
		this.ClusterRoleBindingsChoice = NewPopulatedGlobalSpecType_UseDefaultClusterRoleBindings(r, easy)
	case 15:
		this.ClusterRoleBindingsChoice = NewPopulatedGlobalSpecType_UseCustomClusterRoleBindings(r, easy)
	}
	oneofNumber_AppsChoice := []int32{17, 18}[r.Intn(2)]
	switch oneofNumber_AppsChoice {
	case 17:
		this.AppsChoice = NewPopulatedGlobalSpecType_NoClusterWideApps(r, easy)
	case 18:
		this.AppsChoice = NewPopulatedGlobalSpecType_ClusterWideAppList(r, easy)
	}
	if r.Intn(10) != 0 {
		this.ViewInternal = ves_io_schema_views.NewPopulatedObjectRefType(r, easy)
	}
	if r.Intn(10) != 0 {
		v5 := r.Intn(5)
		this.FinalClusterRoleBindings = make([]*ves_io_schema_views.ObjectRefType, v5)
		for i := 0; i < v5; i++ {
			this.FinalClusterRoleBindings[i] = ves_io_schema_views.NewPopulatedObjectRefType(r, easy)
		}
	}
	if r.Intn(10) != 0 {
		v6 := r.Intn(5)
		this.FinalClusterRoles = make([]*ves_io_schema_views.ObjectRefType, v6)
		for i := 0; i < v6; i++ {
			this.FinalClusterRoles[i] = ves_io_schema_views.NewPopulatedObjectRefType(r, easy)
		}
	}
	if r.Intn(10) != 0 {
		v7 := r.Intn(5)
		this.FinalPodSecurityPolicies = make([]*ves_io_schema_views.ObjectRefType, v7)
		for i := 0; i < v7; i++ {
			this.FinalPodSecurityPolicies[i] = ves_io_schema_views.NewPopulatedObjectRefType(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedGlobalSpecType_NoLocalAccess(r randyTypes, easy bool) *GlobalSpecType_NoLocalAccess {
	this := &GlobalSpecType_NoLocalAccess{}
	this.NoLocalAccess = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedGlobalSpecType_LocalAccessConfig(r randyTypes, easy bool) *GlobalSpecType_LocalAccessConfig {
	this := &GlobalSpecType_LocalAccessConfig{}
	this.LocalAccessConfig = NewPopulatedLocalAccessConfigType(r, easy)
	return this
}
func NewPopulatedGlobalSpecType_NoGlobalAccess(r randyTypes, easy bool) *GlobalSpecType_NoGlobalAccess {
	this := &GlobalSpecType_NoGlobalAccess{}
	this.NoGlobalAccess = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedGlobalSpecType_GlobalAccessEnable(r randyTypes, easy bool) *GlobalSpecType_GlobalAccessEnable {
	this := &GlobalSpecType_GlobalAccessEnable{}
	this.GlobalAccessEnable = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedGlobalSpecType_UseDefaultPsp(r randyTypes, easy bool) *GlobalSpecType_UseDefaultPsp {
	this := &GlobalSpecType_UseDefaultPsp{}
	this.UseDefaultPsp = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedGlobalSpecType_UseCustomPspList(r randyTypes, easy bool) *GlobalSpecType_UseCustomPspList {
	this := &GlobalSpecType_UseCustomPspList{}
	this.UseCustomPspList = NewPopulatedPodSecurityPolicyListType(r, easy)
	return this
}
func NewPopulatedGlobalSpecType_UseDefaultClusterRoles(r randyTypes, easy bool) *GlobalSpecType_UseDefaultClusterRoles {
	this := &GlobalSpecType_UseDefaultClusterRoles{}
	this.UseDefaultClusterRoles = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedGlobalSpecType_UseCustomClusterRoleList(r randyTypes, easy bool) *GlobalSpecType_UseCustomClusterRoleList {
	this := &GlobalSpecType_UseCustomClusterRoleList{}
	this.UseCustomClusterRoleList = NewPopulatedClusterRoleListType(r, easy)
	return this
}
func NewPopulatedGlobalSpecType_UseDefaultClusterRoleBindings(r randyTypes, easy bool) *GlobalSpecType_UseDefaultClusterRoleBindings {
	this := &GlobalSpecType_UseDefaultClusterRoleBindings{}
	this.UseDefaultClusterRoleBindings = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedGlobalSpecType_UseCustomClusterRoleBindings(r randyTypes, easy bool) *GlobalSpecType_UseCustomClusterRoleBindings {
	this := &GlobalSpecType_UseCustomClusterRoleBindings{}
	this.UseCustomClusterRoleBindings = NewPopulatedClusterRoleBindingListType(r, easy)
	return this
}
func NewPopulatedGlobalSpecType_NoClusterWideApps(r randyTypes, easy bool) *GlobalSpecType_NoClusterWideApps {
	this := &GlobalSpecType_NoClusterWideApps{}
	this.NoClusterWideApps = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedGlobalSpecType_ClusterWideAppList(r randyTypes, easy bool) *GlobalSpecType_ClusterWideAppList {
	this := &GlobalSpecType_ClusterWideAppList{}
	this.ClusterWideAppList = NewPopulatedClusterWideAppListType(r, easy)
	return this
}
func NewPopulatedCreateSpecType(r randyTypes, easy bool) *CreateSpecType {
	this := &CreateSpecType{}
	oneofNumber_LocalAccessChoice := []int32{2, 3}[r.Intn(2)]
	switch oneofNumber_LocalAccessChoice {
	case 2:
		this.LocalAccessChoice = NewPopulatedCreateSpecType_NoLocalAccess(r, easy)
	case 3:
		this.LocalAccessChoice = NewPopulatedCreateSpecType_LocalAccessConfig(r, easy)
	}
	oneofNumber_GlobalAccessChoice := []int32{5, 6}[r.Intn(2)]
	switch oneofNumber_GlobalAccessChoice {
	case 5:
		this.GlobalAccessChoice = NewPopulatedCreateSpecType_NoGlobalAccess(r, easy)
	case 6:
		this.GlobalAccessChoice = NewPopulatedCreateSpecType_GlobalAccessEnable(r, easy)
	}
	oneofNumber_PodSecurityPolicyChoice := []int32{8, 9}[r.Intn(2)]
	switch oneofNumber_PodSecurityPolicyChoice {
	case 8:
		this.PodSecurityPolicyChoice = NewPopulatedCreateSpecType_UseDefaultPsp(r, easy)
	case 9:
		this.PodSecurityPolicyChoice = NewPopulatedCreateSpecType_UseCustomPspList(r, easy)
	}
	oneofNumber_ClusterRoleChoice := []int32{11, 12}[r.Intn(2)]
	switch oneofNumber_ClusterRoleChoice {
	case 11:
		this.ClusterRoleChoice = NewPopulatedCreateSpecType_UseDefaultClusterRoles(r, easy)
	case 12:
		this.ClusterRoleChoice = NewPopulatedCreateSpecType_UseCustomClusterRoleList(r, easy)
	}
	oneofNumber_ClusterRoleBindingsChoice := []int32{14, 15}[r.Intn(2)]
	switch oneofNumber_ClusterRoleBindingsChoice {
	case 14:
		this.ClusterRoleBindingsChoice = NewPopulatedCreateSpecType_UseDefaultClusterRoleBindings(r, easy)
	case 15:
		this.ClusterRoleBindingsChoice = NewPopulatedCreateSpecType_UseCustomClusterRoleBindings(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedCreateSpecType_NoLocalAccess(r randyTypes, easy bool) *CreateSpecType_NoLocalAccess {
	this := &CreateSpecType_NoLocalAccess{}
	this.NoLocalAccess = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedCreateSpecType_LocalAccessConfig(r randyTypes, easy bool) *CreateSpecType_LocalAccessConfig {
	this := &CreateSpecType_LocalAccessConfig{}
	this.LocalAccessConfig = NewPopulatedLocalAccessConfigType(r, easy)
	return this
}
func NewPopulatedCreateSpecType_NoGlobalAccess(r randyTypes, easy bool) *CreateSpecType_NoGlobalAccess {
	this := &CreateSpecType_NoGlobalAccess{}
	this.NoGlobalAccess = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedCreateSpecType_GlobalAccessEnable(r randyTypes, easy bool) *CreateSpecType_GlobalAccessEnable {
	this := &CreateSpecType_GlobalAccessEnable{}
	this.GlobalAccessEnable = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedCreateSpecType_UseDefaultPsp(r randyTypes, easy bool) *CreateSpecType_UseDefaultPsp {
	this := &CreateSpecType_UseDefaultPsp{}
	this.UseDefaultPsp = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedCreateSpecType_UseCustomPspList(r randyTypes, easy bool) *CreateSpecType_UseCustomPspList {
	this := &CreateSpecType_UseCustomPspList{}
	this.UseCustomPspList = NewPopulatedPodSecurityPolicyListType(r, easy)
	return this
}
func NewPopulatedCreateSpecType_UseDefaultClusterRoles(r randyTypes, easy bool) *CreateSpecType_UseDefaultClusterRoles {
	this := &CreateSpecType_UseDefaultClusterRoles{}
	this.UseDefaultClusterRoles = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedCreateSpecType_UseCustomClusterRoleList(r randyTypes, easy bool) *CreateSpecType_UseCustomClusterRoleList {
	this := &CreateSpecType_UseCustomClusterRoleList{}
	this.UseCustomClusterRoleList = NewPopulatedClusterRoleListType(r, easy)
	return this
}
func NewPopulatedCreateSpecType_UseDefaultClusterRoleBindings(r randyTypes, easy bool) *CreateSpecType_UseDefaultClusterRoleBindings {
	this := &CreateSpecType_UseDefaultClusterRoleBindings{}
	this.UseDefaultClusterRoleBindings = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedCreateSpecType_UseCustomClusterRoleBindings(r randyTypes, easy bool) *CreateSpecType_UseCustomClusterRoleBindings {
	this := &CreateSpecType_UseCustomClusterRoleBindings{}
	this.UseCustomClusterRoleBindings = NewPopulatedClusterRoleBindingListType(r, easy)
	return this
}
func NewPopulatedReplaceSpecType(r randyTypes, easy bool) *ReplaceSpecType {
	this := &ReplaceSpecType{}
	oneofNumber_LocalAccessChoice := []int32{2, 3}[r.Intn(2)]
	switch oneofNumber_LocalAccessChoice {
	case 2:
		this.LocalAccessChoice = NewPopulatedReplaceSpecType_NoLocalAccess(r, easy)
	case 3:
		this.LocalAccessChoice = NewPopulatedReplaceSpecType_LocalAccessConfig(r, easy)
	}
	oneofNumber_GlobalAccessChoice := []int32{5, 6}[r.Intn(2)]
	switch oneofNumber_GlobalAccessChoice {
	case 5:
		this.GlobalAccessChoice = NewPopulatedReplaceSpecType_NoGlobalAccess(r, easy)
	case 6:
		this.GlobalAccessChoice = NewPopulatedReplaceSpecType_GlobalAccessEnable(r, easy)
	}
	oneofNumber_PodSecurityPolicyChoice := []int32{8, 9}[r.Intn(2)]
	switch oneofNumber_PodSecurityPolicyChoice {
	case 8:
		this.PodSecurityPolicyChoice = NewPopulatedReplaceSpecType_UseDefaultPsp(r, easy)
	case 9:
		this.PodSecurityPolicyChoice = NewPopulatedReplaceSpecType_UseCustomPspList(r, easy)
	}
	oneofNumber_ClusterRoleChoice := []int32{11, 12}[r.Intn(2)]
	switch oneofNumber_ClusterRoleChoice {
	case 11:
		this.ClusterRoleChoice = NewPopulatedReplaceSpecType_UseDefaultClusterRoles(r, easy)
	case 12:
		this.ClusterRoleChoice = NewPopulatedReplaceSpecType_UseCustomClusterRoleList(r, easy)
	}
	oneofNumber_ClusterRoleBindingsChoice := []int32{14, 15}[r.Intn(2)]
	switch oneofNumber_ClusterRoleBindingsChoice {
	case 14:
		this.ClusterRoleBindingsChoice = NewPopulatedReplaceSpecType_UseDefaultClusterRoleBindings(r, easy)
	case 15:
		this.ClusterRoleBindingsChoice = NewPopulatedReplaceSpecType_UseCustomClusterRoleBindings(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedReplaceSpecType_NoLocalAccess(r randyTypes, easy bool) *ReplaceSpecType_NoLocalAccess {
	this := &ReplaceSpecType_NoLocalAccess{}
	this.NoLocalAccess = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedReplaceSpecType_LocalAccessConfig(r randyTypes, easy bool) *ReplaceSpecType_LocalAccessConfig {
	this := &ReplaceSpecType_LocalAccessConfig{}
	this.LocalAccessConfig = NewPopulatedLocalAccessConfigType(r, easy)
	return this
}
func NewPopulatedReplaceSpecType_NoGlobalAccess(r randyTypes, easy bool) *ReplaceSpecType_NoGlobalAccess {
	this := &ReplaceSpecType_NoGlobalAccess{}
	this.NoGlobalAccess = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedReplaceSpecType_GlobalAccessEnable(r randyTypes, easy bool) *ReplaceSpecType_GlobalAccessEnable {
	this := &ReplaceSpecType_GlobalAccessEnable{}
	this.GlobalAccessEnable = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedReplaceSpecType_UseDefaultPsp(r randyTypes, easy bool) *ReplaceSpecType_UseDefaultPsp {
	this := &ReplaceSpecType_UseDefaultPsp{}
	this.UseDefaultPsp = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedReplaceSpecType_UseCustomPspList(r randyTypes, easy bool) *ReplaceSpecType_UseCustomPspList {
	this := &ReplaceSpecType_UseCustomPspList{}
	this.UseCustomPspList = NewPopulatedPodSecurityPolicyListType(r, easy)
	return this
}
func NewPopulatedReplaceSpecType_UseDefaultClusterRoles(r randyTypes, easy bool) *ReplaceSpecType_UseDefaultClusterRoles {
	this := &ReplaceSpecType_UseDefaultClusterRoles{}
	this.UseDefaultClusterRoles = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedReplaceSpecType_UseCustomClusterRoleList(r randyTypes, easy bool) *ReplaceSpecType_UseCustomClusterRoleList {
	this := &ReplaceSpecType_UseCustomClusterRoleList{}
	this.UseCustomClusterRoleList = NewPopulatedClusterRoleListType(r, easy)
	return this
}
func NewPopulatedReplaceSpecType_UseDefaultClusterRoleBindings(r randyTypes, easy bool) *ReplaceSpecType_UseDefaultClusterRoleBindings {
	this := &ReplaceSpecType_UseDefaultClusterRoleBindings{}
	this.UseDefaultClusterRoleBindings = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedReplaceSpecType_UseCustomClusterRoleBindings(r randyTypes, easy bool) *ReplaceSpecType_UseCustomClusterRoleBindings {
	this := &ReplaceSpecType_UseCustomClusterRoleBindings{}
	this.UseCustomClusterRoleBindings = NewPopulatedClusterRoleBindingListType(r, easy)
	return this
}
func NewPopulatedGetSpecType(r randyTypes, easy bool) *GetSpecType {
	this := &GetSpecType{}
	oneofNumber_LocalAccessChoice := []int32{2, 3}[r.Intn(2)]
	switch oneofNumber_LocalAccessChoice {
	case 2:
		this.LocalAccessChoice = NewPopulatedGetSpecType_NoLocalAccess(r, easy)
	case 3:
		this.LocalAccessChoice = NewPopulatedGetSpecType_LocalAccessConfig(r, easy)
	}
	oneofNumber_GlobalAccessChoice := []int32{5, 6}[r.Intn(2)]
	switch oneofNumber_GlobalAccessChoice {
	case 5:
		this.GlobalAccessChoice = NewPopulatedGetSpecType_NoGlobalAccess(r, easy)
	case 6:
		this.GlobalAccessChoice = NewPopulatedGetSpecType_GlobalAccessEnable(r, easy)
	}
	oneofNumber_PodSecurityPolicyChoice := []int32{8, 9}[r.Intn(2)]
	switch oneofNumber_PodSecurityPolicyChoice {
	case 8:
		this.PodSecurityPolicyChoice = NewPopulatedGetSpecType_UseDefaultPsp(r, easy)
	case 9:
		this.PodSecurityPolicyChoice = NewPopulatedGetSpecType_UseCustomPspList(r, easy)
	}
	oneofNumber_ClusterRoleChoice := []int32{11, 12}[r.Intn(2)]
	switch oneofNumber_ClusterRoleChoice {
	case 11:
		this.ClusterRoleChoice = NewPopulatedGetSpecType_UseDefaultClusterRoles(r, easy)
	case 12:
		this.ClusterRoleChoice = NewPopulatedGetSpecType_UseCustomClusterRoleList(r, easy)
	}
	oneofNumber_ClusterRoleBindingsChoice := []int32{14, 15}[r.Intn(2)]
	switch oneofNumber_ClusterRoleBindingsChoice {
	case 14:
		this.ClusterRoleBindingsChoice = NewPopulatedGetSpecType_UseDefaultClusterRoleBindings(r, easy)
	case 15:
		this.ClusterRoleBindingsChoice = NewPopulatedGetSpecType_UseCustomClusterRoleBindings(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedGetSpecType_NoLocalAccess(r randyTypes, easy bool) *GetSpecType_NoLocalAccess {
	this := &GetSpecType_NoLocalAccess{}
	this.NoLocalAccess = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedGetSpecType_LocalAccessConfig(r randyTypes, easy bool) *GetSpecType_LocalAccessConfig {
	this := &GetSpecType_LocalAccessConfig{}
	this.LocalAccessConfig = NewPopulatedLocalAccessConfigType(r, easy)
	return this
}
func NewPopulatedGetSpecType_NoGlobalAccess(r randyTypes, easy bool) *GetSpecType_NoGlobalAccess {
	this := &GetSpecType_NoGlobalAccess{}
	this.NoGlobalAccess = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedGetSpecType_GlobalAccessEnable(r randyTypes, easy bool) *GetSpecType_GlobalAccessEnable {
	this := &GetSpecType_GlobalAccessEnable{}
	this.GlobalAccessEnable = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedGetSpecType_UseDefaultPsp(r randyTypes, easy bool) *GetSpecType_UseDefaultPsp {
	this := &GetSpecType_UseDefaultPsp{}
	this.UseDefaultPsp = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedGetSpecType_UseCustomPspList(r randyTypes, easy bool) *GetSpecType_UseCustomPspList {
	this := &GetSpecType_UseCustomPspList{}
	this.UseCustomPspList = NewPopulatedPodSecurityPolicyListType(r, easy)
	return this
}
func NewPopulatedGetSpecType_UseDefaultClusterRoles(r randyTypes, easy bool) *GetSpecType_UseDefaultClusterRoles {
	this := &GetSpecType_UseDefaultClusterRoles{}
	this.UseDefaultClusterRoles = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedGetSpecType_UseCustomClusterRoleList(r randyTypes, easy bool) *GetSpecType_UseCustomClusterRoleList {
	this := &GetSpecType_UseCustomClusterRoleList{}
	this.UseCustomClusterRoleList = NewPopulatedClusterRoleListType(r, easy)
	return this
}
func NewPopulatedGetSpecType_UseDefaultClusterRoleBindings(r randyTypes, easy bool) *GetSpecType_UseDefaultClusterRoleBindings {
	this := &GetSpecType_UseDefaultClusterRoleBindings{}
	this.UseDefaultClusterRoleBindings = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedGetSpecType_UseCustomClusterRoleBindings(r randyTypes, easy bool) *GetSpecType_UseCustomClusterRoleBindings {
	this := &GetSpecType_UseCustomClusterRoleBindings{}
	this.UseCustomClusterRoleBindings = NewPopulatedClusterRoleBindingListType(r, easy)
	return this
}

type randyTypes interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneTypes(r randyTypes) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringTypes(r randyTypes) string {
	v8 := r.Intn(100)
	tmps := make([]rune, v8)
	for i := 0; i < v8; i++ {
		tmps[i] = randUTF8RuneTypes(r)
	}
	return string(tmps)
}
func randUnrecognizedTypes(r randyTypes, maxFieldNumber int) (dAtA []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		dAtA = randFieldTypes(dAtA, r, fieldNumber, wire)
	}
	return dAtA
}
func randFieldTypes(dAtA []byte, r randyTypes, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		dAtA = encodeVarintPopulateTypes(dAtA, uint64(key))
		v9 := r.Int63()
		if r.Intn(2) == 0 {
			v9 *= -1
		}
		dAtA = encodeVarintPopulateTypes(dAtA, uint64(v9))
	case 1:
		dAtA = encodeVarintPopulateTypes(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		dAtA = encodeVarintPopulateTypes(dAtA, uint64(key))
		ll := r.Intn(100)
		dAtA = encodeVarintPopulateTypes(dAtA, uint64(ll))
		for j := 0; j < ll; j++ {
			dAtA = append(dAtA, byte(r.Intn(256)))
		}
	default:
		dAtA = encodeVarintPopulateTypes(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return dAtA
}
func encodeVarintPopulateTypes(dAtA []byte, v uint64) []byte {
	for v >= 1<<7 {
		dAtA = append(dAtA, uint8(uint64(v)&0x7f|0x80))
		v >>= 7
	}
	dAtA = append(dAtA, uint8(v))
	return dAtA
}
func (m *ApplicationArgoCDType) Size() (n int) {
	var l int
	_ = l
	l = len(m.GeneratedYaml)
	if l > 0 {
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *ApplicationDashboardType) Size() (n int) {
	var l int
	_ = l
	l = len(m.GeneratedYaml)
	if l > 0 {
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *ClusterWideAppType) Size() (n int) {
	var l int
	_ = l
	if m.AppChoice != nil {
		n += m.AppChoice.Size()
	}
	return n
}

func (m *ClusterWideAppType_ArgoCd) Size() (n int) {
	var l int
	_ = l
	if m.ArgoCd != nil {
		l = m.ArgoCd.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ClusterWideAppType_Dashboard) Size() (n int) {
	var l int
	_ = l
	if m.Dashboard != nil {
		l = m.Dashboard.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ClusterWideAppListType) Size() (n int) {
	var l int
	_ = l
	if len(m.ClusterWideApps) > 0 {
		for _, e := range m.ClusterWideApps {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	return n
}

func (m *LocalAccessConfigType) Size() (n int) {
	var l int
	_ = l
	l = len(m.LocalDomain)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.PortChoice != nil {
		n += m.PortChoice.Size()
	}
	return n
}

func (m *LocalAccessConfigType_DefaultPort) Size() (n int) {
	var l int
	_ = l
	if m.DefaultPort != nil {
		l = m.DefaultPort.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *LocalAccessConfigType_Port) Size() (n int) {
	var l int
	_ = l
	n += 1 + sovTypes(uint64(m.Port))
	return n
}
func (m *PodSecurityPolicyListType) Size() (n int) {
	var l int
	_ = l
	if len(m.PodSecurityPolicies) > 0 {
		for _, e := range m.PodSecurityPolicies {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	return n
}

func (m *ClusterRoleListType) Size() (n int) {
	var l int
	_ = l
	if len(m.ClusterRoles) > 0 {
		for _, e := range m.ClusterRoles {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	return n
}

func (m *ClusterRoleBindingListType) Size() (n int) {
	var l int
	_ = l
	if len(m.ClusterRoleBindings) > 0 {
		for _, e := range m.ClusterRoleBindings {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	return n
}

func (m *GlobalSpecType) Size() (n int) {
	var l int
	_ = l
	if m.LocalAccessChoice != nil {
		n += m.LocalAccessChoice.Size()
	}
	if m.GlobalAccessChoice != nil {
		n += m.GlobalAccessChoice.Size()
	}
	if m.PodSecurityPolicyChoice != nil {
		n += m.PodSecurityPolicyChoice.Size()
	}
	if m.ClusterRoleChoice != nil {
		n += m.ClusterRoleChoice.Size()
	}
	if m.ClusterRoleBindingsChoice != nil {
		n += m.ClusterRoleBindingsChoice.Size()
	}
	if m.AppsChoice != nil {
		n += m.AppsChoice.Size()
	}
	if m.ViewInternal != nil {
		l = m.ViewInternal.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	if len(m.FinalClusterRoleBindings) > 0 {
		for _, e := range m.FinalClusterRoleBindings {
			l = e.Size()
			n += 2 + l + sovTypes(uint64(l))
		}
	}
	if len(m.FinalClusterRoles) > 0 {
		for _, e := range m.FinalClusterRoles {
			l = e.Size()
			n += 2 + l + sovTypes(uint64(l))
		}
	}
	if len(m.FinalPodSecurityPolicies) > 0 {
		for _, e := range m.FinalPodSecurityPolicies {
			l = e.Size()
			n += 2 + l + sovTypes(uint64(l))
		}
	}
	return n
}

func (m *GlobalSpecType_NoLocalAccess) Size() (n int) {
	var l int
	_ = l
	if m.NoLocalAccess != nil {
		l = m.NoLocalAccess.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_LocalAccessConfig) Size() (n int) {
	var l int
	_ = l
	if m.LocalAccessConfig != nil {
		l = m.LocalAccessConfig.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_NoGlobalAccess) Size() (n int) {
	var l int
	_ = l
	if m.NoGlobalAccess != nil {
		l = m.NoGlobalAccess.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_GlobalAccessEnable) Size() (n int) {
	var l int
	_ = l
	if m.GlobalAccessEnable != nil {
		l = m.GlobalAccessEnable.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_UseDefaultPsp) Size() (n int) {
	var l int
	_ = l
	if m.UseDefaultPsp != nil {
		l = m.UseDefaultPsp.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_UseCustomPspList) Size() (n int) {
	var l int
	_ = l
	if m.UseCustomPspList != nil {
		l = m.UseCustomPspList.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_UseDefaultClusterRoles) Size() (n int) {
	var l int
	_ = l
	if m.UseDefaultClusterRoles != nil {
		l = m.UseDefaultClusterRoles.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_UseCustomClusterRoleList) Size() (n int) {
	var l int
	_ = l
	if m.UseCustomClusterRoleList != nil {
		l = m.UseCustomClusterRoleList.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_UseDefaultClusterRoleBindings) Size() (n int) {
	var l int
	_ = l
	if m.UseDefaultClusterRoleBindings != nil {
		l = m.UseDefaultClusterRoleBindings.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_UseCustomClusterRoleBindings) Size() (n int) {
	var l int
	_ = l
	if m.UseCustomClusterRoleBindings != nil {
		l = m.UseCustomClusterRoleBindings.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_NoClusterWideApps) Size() (n int) {
	var l int
	_ = l
	if m.NoClusterWideApps != nil {
		l = m.NoClusterWideApps.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_ClusterWideAppList) Size() (n int) {
	var l int
	_ = l
	if m.ClusterWideAppList != nil {
		l = m.ClusterWideAppList.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType) Size() (n int) {
	var l int
	_ = l
	if m.LocalAccessChoice != nil {
		n += m.LocalAccessChoice.Size()
	}
	if m.GlobalAccessChoice != nil {
		n += m.GlobalAccessChoice.Size()
	}
	if m.PodSecurityPolicyChoice != nil {
		n += m.PodSecurityPolicyChoice.Size()
	}
	if m.ClusterRoleChoice != nil {
		n += m.ClusterRoleChoice.Size()
	}
	if m.ClusterRoleBindingsChoice != nil {
		n += m.ClusterRoleBindingsChoice.Size()
	}
	return n
}

func (m *CreateSpecType_NoLocalAccess) Size() (n int) {
	var l int
	_ = l
	if m.NoLocalAccess != nil {
		l = m.NoLocalAccess.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_LocalAccessConfig) Size() (n int) {
	var l int
	_ = l
	if m.LocalAccessConfig != nil {
		l = m.LocalAccessConfig.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_NoGlobalAccess) Size() (n int) {
	var l int
	_ = l
	if m.NoGlobalAccess != nil {
		l = m.NoGlobalAccess.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_GlobalAccessEnable) Size() (n int) {
	var l int
	_ = l
	if m.GlobalAccessEnable != nil {
		l = m.GlobalAccessEnable.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_UseDefaultPsp) Size() (n int) {
	var l int
	_ = l
	if m.UseDefaultPsp != nil {
		l = m.UseDefaultPsp.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_UseCustomPspList) Size() (n int) {
	var l int
	_ = l
	if m.UseCustomPspList != nil {
		l = m.UseCustomPspList.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_UseDefaultClusterRoles) Size() (n int) {
	var l int
	_ = l
	if m.UseDefaultClusterRoles != nil {
		l = m.UseDefaultClusterRoles.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_UseCustomClusterRoleList) Size() (n int) {
	var l int
	_ = l
	if m.UseCustomClusterRoleList != nil {
		l = m.UseCustomClusterRoleList.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_UseDefaultClusterRoleBindings) Size() (n int) {
	var l int
	_ = l
	if m.UseDefaultClusterRoleBindings != nil {
		l = m.UseDefaultClusterRoleBindings.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_UseCustomClusterRoleBindings) Size() (n int) {
	var l int
	_ = l
	if m.UseCustomClusterRoleBindings != nil {
		l = m.UseCustomClusterRoleBindings.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType) Size() (n int) {
	var l int
	_ = l
	if m.LocalAccessChoice != nil {
		n += m.LocalAccessChoice.Size()
	}
	if m.GlobalAccessChoice != nil {
		n += m.GlobalAccessChoice.Size()
	}
	if m.PodSecurityPolicyChoice != nil {
		n += m.PodSecurityPolicyChoice.Size()
	}
	if m.ClusterRoleChoice != nil {
		n += m.ClusterRoleChoice.Size()
	}
	if m.ClusterRoleBindingsChoice != nil {
		n += m.ClusterRoleBindingsChoice.Size()
	}
	return n
}

func (m *ReplaceSpecType_NoLocalAccess) Size() (n int) {
	var l int
	_ = l
	if m.NoLocalAccess != nil {
		l = m.NoLocalAccess.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_LocalAccessConfig) Size() (n int) {
	var l int
	_ = l
	if m.LocalAccessConfig != nil {
		l = m.LocalAccessConfig.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_NoGlobalAccess) Size() (n int) {
	var l int
	_ = l
	if m.NoGlobalAccess != nil {
		l = m.NoGlobalAccess.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_GlobalAccessEnable) Size() (n int) {
	var l int
	_ = l
	if m.GlobalAccessEnable != nil {
		l = m.GlobalAccessEnable.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_UseDefaultPsp) Size() (n int) {
	var l int
	_ = l
	if m.UseDefaultPsp != nil {
		l = m.UseDefaultPsp.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_UseCustomPspList) Size() (n int) {
	var l int
	_ = l
	if m.UseCustomPspList != nil {
		l = m.UseCustomPspList.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_UseDefaultClusterRoles) Size() (n int) {
	var l int
	_ = l
	if m.UseDefaultClusterRoles != nil {
		l = m.UseDefaultClusterRoles.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_UseCustomClusterRoleList) Size() (n int) {
	var l int
	_ = l
	if m.UseCustomClusterRoleList != nil {
		l = m.UseCustomClusterRoleList.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_UseDefaultClusterRoleBindings) Size() (n int) {
	var l int
	_ = l
	if m.UseDefaultClusterRoleBindings != nil {
		l = m.UseDefaultClusterRoleBindings.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_UseCustomClusterRoleBindings) Size() (n int) {
	var l int
	_ = l
	if m.UseCustomClusterRoleBindings != nil {
		l = m.UseCustomClusterRoleBindings.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType) Size() (n int) {
	var l int
	_ = l
	if m.LocalAccessChoice != nil {
		n += m.LocalAccessChoice.Size()
	}
	if m.GlobalAccessChoice != nil {
		n += m.GlobalAccessChoice.Size()
	}
	if m.PodSecurityPolicyChoice != nil {
		n += m.PodSecurityPolicyChoice.Size()
	}
	if m.ClusterRoleChoice != nil {
		n += m.ClusterRoleChoice.Size()
	}
	if m.ClusterRoleBindingsChoice != nil {
		n += m.ClusterRoleBindingsChoice.Size()
	}
	return n
}

func (m *GetSpecType_NoLocalAccess) Size() (n int) {
	var l int
	_ = l
	if m.NoLocalAccess != nil {
		l = m.NoLocalAccess.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_LocalAccessConfig) Size() (n int) {
	var l int
	_ = l
	if m.LocalAccessConfig != nil {
		l = m.LocalAccessConfig.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_NoGlobalAccess) Size() (n int) {
	var l int
	_ = l
	if m.NoGlobalAccess != nil {
		l = m.NoGlobalAccess.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_GlobalAccessEnable) Size() (n int) {
	var l int
	_ = l
	if m.GlobalAccessEnable != nil {
		l = m.GlobalAccessEnable.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_UseDefaultPsp) Size() (n int) {
	var l int
	_ = l
	if m.UseDefaultPsp != nil {
		l = m.UseDefaultPsp.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_UseCustomPspList) Size() (n int) {
	var l int
	_ = l
	if m.UseCustomPspList != nil {
		l = m.UseCustomPspList.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_UseDefaultClusterRoles) Size() (n int) {
	var l int
	_ = l
	if m.UseDefaultClusterRoles != nil {
		l = m.UseDefaultClusterRoles.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_UseCustomClusterRoleList) Size() (n int) {
	var l int
	_ = l
	if m.UseCustomClusterRoleList != nil {
		l = m.UseCustomClusterRoleList.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_UseDefaultClusterRoleBindings) Size() (n int) {
	var l int
	_ = l
	if m.UseDefaultClusterRoleBindings != nil {
		l = m.UseDefaultClusterRoleBindings.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_UseCustomClusterRoleBindings) Size() (n int) {
	var l int
	_ = l
	if m.UseCustomClusterRoleBindings != nil {
		l = m.UseCustomClusterRoleBindings.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}

func sovTypes(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozTypes(x uint64) (n int) {
	return sovTypes(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *ApplicationArgoCDType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ApplicationArgoCDType{`,
		`GeneratedYaml:` + fmt.Sprintf("%v", this.GeneratedYaml) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ApplicationDashboardType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ApplicationDashboardType{`,
		`GeneratedYaml:` + fmt.Sprintf("%v", this.GeneratedYaml) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ClusterWideAppType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ClusterWideAppType{`,
		`AppChoice:` + fmt.Sprintf("%v", this.AppChoice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ClusterWideAppType_ArgoCd) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ClusterWideAppType_ArgoCd{`,
		`ArgoCd:` + strings.Replace(fmt.Sprintf("%v", this.ArgoCd), "ApplicationArgoCDType", "ApplicationArgoCDType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ClusterWideAppType_Dashboard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ClusterWideAppType_Dashboard{`,
		`Dashboard:` + strings.Replace(fmt.Sprintf("%v", this.Dashboard), "ApplicationDashboardType", "ApplicationDashboardType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ClusterWideAppListType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ClusterWideAppListType{`,
		`ClusterWideApps:` + strings.Replace(fmt.Sprintf("%v", this.ClusterWideApps), "ClusterWideAppType", "ClusterWideAppType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *LocalAccessConfigType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&LocalAccessConfigType{`,
		`LocalDomain:` + fmt.Sprintf("%v", this.LocalDomain) + `,`,
		`PortChoice:` + fmt.Sprintf("%v", this.PortChoice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *LocalAccessConfigType_DefaultPort) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&LocalAccessConfigType_DefaultPort{`,
		`DefaultPort:` + strings.Replace(fmt.Sprintf("%v", this.DefaultPort), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *LocalAccessConfigType_Port) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&LocalAccessConfigType_Port{`,
		`Port:` + fmt.Sprintf("%v", this.Port) + `,`,
		`}`,
	}, "")
	return s
}
func (this *PodSecurityPolicyListType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&PodSecurityPolicyListType{`,
		`PodSecurityPolicies:` + strings.Replace(fmt.Sprintf("%v", this.PodSecurityPolicies), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ClusterRoleListType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ClusterRoleListType{`,
		`ClusterRoles:` + strings.Replace(fmt.Sprintf("%v", this.ClusterRoles), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ClusterRoleBindingListType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ClusterRoleBindingListType{`,
		`ClusterRoleBindings:` + strings.Replace(fmt.Sprintf("%v", this.ClusterRoleBindings), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType{`,
		`LocalAccessChoice:` + fmt.Sprintf("%v", this.LocalAccessChoice) + `,`,
		`GlobalAccessChoice:` + fmt.Sprintf("%v", this.GlobalAccessChoice) + `,`,
		`PodSecurityPolicyChoice:` + fmt.Sprintf("%v", this.PodSecurityPolicyChoice) + `,`,
		`ClusterRoleChoice:` + fmt.Sprintf("%v", this.ClusterRoleChoice) + `,`,
		`ClusterRoleBindingsChoice:` + fmt.Sprintf("%v", this.ClusterRoleBindingsChoice) + `,`,
		`AppsChoice:` + fmt.Sprintf("%v", this.AppsChoice) + `,`,
		`ViewInternal:` + strings.Replace(fmt.Sprintf("%v", this.ViewInternal), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`FinalClusterRoleBindings:` + strings.Replace(fmt.Sprintf("%v", this.FinalClusterRoleBindings), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`FinalClusterRoles:` + strings.Replace(fmt.Sprintf("%v", this.FinalClusterRoles), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`FinalPodSecurityPolicies:` + strings.Replace(fmt.Sprintf("%v", this.FinalPodSecurityPolicies), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_NoLocalAccess) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_NoLocalAccess{`,
		`NoLocalAccess:` + strings.Replace(fmt.Sprintf("%v", this.NoLocalAccess), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_LocalAccessConfig) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_LocalAccessConfig{`,
		`LocalAccessConfig:` + strings.Replace(fmt.Sprintf("%v", this.LocalAccessConfig), "LocalAccessConfigType", "LocalAccessConfigType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_NoGlobalAccess) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_NoGlobalAccess{`,
		`NoGlobalAccess:` + strings.Replace(fmt.Sprintf("%v", this.NoGlobalAccess), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_GlobalAccessEnable) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_GlobalAccessEnable{`,
		`GlobalAccessEnable:` + strings.Replace(fmt.Sprintf("%v", this.GlobalAccessEnable), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_UseDefaultPsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_UseDefaultPsp{`,
		`UseDefaultPsp:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultPsp), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_UseCustomPspList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_UseCustomPspList{`,
		`UseCustomPspList:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomPspList), "PodSecurityPolicyListType", "PodSecurityPolicyListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_UseDefaultClusterRoles) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_UseDefaultClusterRoles{`,
		`UseDefaultClusterRoles:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultClusterRoles), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_UseCustomClusterRoleList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_UseCustomClusterRoleList{`,
		`UseCustomClusterRoleList:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomClusterRoleList), "ClusterRoleListType", "ClusterRoleListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_UseDefaultClusterRoleBindings) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_UseDefaultClusterRoleBindings{`,
		`UseDefaultClusterRoleBindings:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultClusterRoleBindings), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_UseCustomClusterRoleBindings) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_UseCustomClusterRoleBindings{`,
		`UseCustomClusterRoleBindings:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomClusterRoleBindings), "ClusterRoleBindingListType", "ClusterRoleBindingListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_NoClusterWideApps) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_NoClusterWideApps{`,
		`NoClusterWideApps:` + strings.Replace(fmt.Sprintf("%v", this.NoClusterWideApps), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_ClusterWideAppList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_ClusterWideAppList{`,
		`ClusterWideAppList:` + strings.Replace(fmt.Sprintf("%v", this.ClusterWideAppList), "ClusterWideAppListType", "ClusterWideAppListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType{`,
		`LocalAccessChoice:` + fmt.Sprintf("%v", this.LocalAccessChoice) + `,`,
		`GlobalAccessChoice:` + fmt.Sprintf("%v", this.GlobalAccessChoice) + `,`,
		`PodSecurityPolicyChoice:` + fmt.Sprintf("%v", this.PodSecurityPolicyChoice) + `,`,
		`ClusterRoleChoice:` + fmt.Sprintf("%v", this.ClusterRoleChoice) + `,`,
		`ClusterRoleBindingsChoice:` + fmt.Sprintf("%v", this.ClusterRoleBindingsChoice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_NoLocalAccess) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_NoLocalAccess{`,
		`NoLocalAccess:` + strings.Replace(fmt.Sprintf("%v", this.NoLocalAccess), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_LocalAccessConfig) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_LocalAccessConfig{`,
		`LocalAccessConfig:` + strings.Replace(fmt.Sprintf("%v", this.LocalAccessConfig), "LocalAccessConfigType", "LocalAccessConfigType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_NoGlobalAccess) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_NoGlobalAccess{`,
		`NoGlobalAccess:` + strings.Replace(fmt.Sprintf("%v", this.NoGlobalAccess), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_GlobalAccessEnable) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_GlobalAccessEnable{`,
		`GlobalAccessEnable:` + strings.Replace(fmt.Sprintf("%v", this.GlobalAccessEnable), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_UseDefaultPsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_UseDefaultPsp{`,
		`UseDefaultPsp:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultPsp), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_UseCustomPspList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_UseCustomPspList{`,
		`UseCustomPspList:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomPspList), "PodSecurityPolicyListType", "PodSecurityPolicyListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_UseDefaultClusterRoles) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_UseDefaultClusterRoles{`,
		`UseDefaultClusterRoles:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultClusterRoles), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_UseCustomClusterRoleList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_UseCustomClusterRoleList{`,
		`UseCustomClusterRoleList:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomClusterRoleList), "ClusterRoleListType", "ClusterRoleListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_UseDefaultClusterRoleBindings) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_UseDefaultClusterRoleBindings{`,
		`UseDefaultClusterRoleBindings:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultClusterRoleBindings), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_UseCustomClusterRoleBindings) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_UseCustomClusterRoleBindings{`,
		`UseCustomClusterRoleBindings:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomClusterRoleBindings), "ClusterRoleBindingListType", "ClusterRoleBindingListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType{`,
		`LocalAccessChoice:` + fmt.Sprintf("%v", this.LocalAccessChoice) + `,`,
		`GlobalAccessChoice:` + fmt.Sprintf("%v", this.GlobalAccessChoice) + `,`,
		`PodSecurityPolicyChoice:` + fmt.Sprintf("%v", this.PodSecurityPolicyChoice) + `,`,
		`ClusterRoleChoice:` + fmt.Sprintf("%v", this.ClusterRoleChoice) + `,`,
		`ClusterRoleBindingsChoice:` + fmt.Sprintf("%v", this.ClusterRoleBindingsChoice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_NoLocalAccess) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_NoLocalAccess{`,
		`NoLocalAccess:` + strings.Replace(fmt.Sprintf("%v", this.NoLocalAccess), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_LocalAccessConfig) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_LocalAccessConfig{`,
		`LocalAccessConfig:` + strings.Replace(fmt.Sprintf("%v", this.LocalAccessConfig), "LocalAccessConfigType", "LocalAccessConfigType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_NoGlobalAccess) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_NoGlobalAccess{`,
		`NoGlobalAccess:` + strings.Replace(fmt.Sprintf("%v", this.NoGlobalAccess), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_GlobalAccessEnable) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_GlobalAccessEnable{`,
		`GlobalAccessEnable:` + strings.Replace(fmt.Sprintf("%v", this.GlobalAccessEnable), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_UseDefaultPsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_UseDefaultPsp{`,
		`UseDefaultPsp:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultPsp), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_UseCustomPspList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_UseCustomPspList{`,
		`UseCustomPspList:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomPspList), "PodSecurityPolicyListType", "PodSecurityPolicyListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_UseDefaultClusterRoles) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_UseDefaultClusterRoles{`,
		`UseDefaultClusterRoles:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultClusterRoles), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_UseCustomClusterRoleList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_UseCustomClusterRoleList{`,
		`UseCustomClusterRoleList:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomClusterRoleList), "ClusterRoleListType", "ClusterRoleListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_UseDefaultClusterRoleBindings) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_UseDefaultClusterRoleBindings{`,
		`UseDefaultClusterRoleBindings:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultClusterRoleBindings), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_UseCustomClusterRoleBindings) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_UseCustomClusterRoleBindings{`,
		`UseCustomClusterRoleBindings:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomClusterRoleBindings), "ClusterRoleBindingListType", "ClusterRoleBindingListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType{`,
		`LocalAccessChoice:` + fmt.Sprintf("%v", this.LocalAccessChoice) + `,`,
		`GlobalAccessChoice:` + fmt.Sprintf("%v", this.GlobalAccessChoice) + `,`,
		`PodSecurityPolicyChoice:` + fmt.Sprintf("%v", this.PodSecurityPolicyChoice) + `,`,
		`ClusterRoleChoice:` + fmt.Sprintf("%v", this.ClusterRoleChoice) + `,`,
		`ClusterRoleBindingsChoice:` + fmt.Sprintf("%v", this.ClusterRoleBindingsChoice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_NoLocalAccess) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_NoLocalAccess{`,
		`NoLocalAccess:` + strings.Replace(fmt.Sprintf("%v", this.NoLocalAccess), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_LocalAccessConfig) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_LocalAccessConfig{`,
		`LocalAccessConfig:` + strings.Replace(fmt.Sprintf("%v", this.LocalAccessConfig), "LocalAccessConfigType", "LocalAccessConfigType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_NoGlobalAccess) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_NoGlobalAccess{`,
		`NoGlobalAccess:` + strings.Replace(fmt.Sprintf("%v", this.NoGlobalAccess), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_GlobalAccessEnable) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_GlobalAccessEnable{`,
		`GlobalAccessEnable:` + strings.Replace(fmt.Sprintf("%v", this.GlobalAccessEnable), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_UseDefaultPsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_UseDefaultPsp{`,
		`UseDefaultPsp:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultPsp), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_UseCustomPspList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_UseCustomPspList{`,
		`UseCustomPspList:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomPspList), "PodSecurityPolicyListType", "PodSecurityPolicyListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_UseDefaultClusterRoles) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_UseDefaultClusterRoles{`,
		`UseDefaultClusterRoles:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultClusterRoles), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_UseCustomClusterRoleList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_UseCustomClusterRoleList{`,
		`UseCustomClusterRoleList:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomClusterRoleList), "ClusterRoleListType", "ClusterRoleListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_UseDefaultClusterRoleBindings) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_UseDefaultClusterRoleBindings{`,
		`UseDefaultClusterRoleBindings:` + strings.Replace(fmt.Sprintf("%v", this.UseDefaultClusterRoleBindings), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_UseCustomClusterRoleBindings) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_UseCustomClusterRoleBindings{`,
		`UseCustomClusterRoleBindings:` + strings.Replace(fmt.Sprintf("%v", this.UseCustomClusterRoleBindings), "ClusterRoleBindingListType", "ClusterRoleBindingListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringTypes(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *ApplicationArgoCDType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ApplicationArgoCDType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ApplicationArgoCDType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1001:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeneratedYaml", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GeneratedYaml = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ApplicationDashboardType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ApplicationDashboardType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ApplicationDashboardType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1001:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeneratedYaml", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GeneratedYaml = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClusterWideAppType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClusterWideAppType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClusterWideAppType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ArgoCd", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ApplicationArgoCDType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.AppChoice = &ClusterWideAppType_ArgoCd{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dashboard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ApplicationDashboardType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.AppChoice = &ClusterWideAppType_Dashboard{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClusterWideAppListType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClusterWideAppListType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClusterWideAppListType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterWideApps", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClusterWideApps = append(m.ClusterWideApps, &ClusterWideAppType{})
			if err := m.ClusterWideApps[len(m.ClusterWideApps)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LocalAccessConfigType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LocalAccessConfigType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LocalAccessConfigType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalDomain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocalDomain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultPort", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.PortChoice = &LocalAccessConfigType_DefaultPort{v}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Port", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PortChoice = &LocalAccessConfigType_Port{v}
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PodSecurityPolicyListType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PodSecurityPolicyListType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PodSecurityPolicyListType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PodSecurityPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PodSecurityPolicies = append(m.PodSecurityPolicies, &ves_io_schema_views.ObjectRefType{})
			if err := m.PodSecurityPolicies[len(m.PodSecurityPolicies)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClusterRoleListType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClusterRoleListType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClusterRoleListType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterRoles", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClusterRoles = append(m.ClusterRoles, &ves_io_schema_views.ObjectRefType{})
			if err := m.ClusterRoles[len(m.ClusterRoles)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClusterRoleBindingListType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClusterRoleBindingListType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClusterRoleBindingListType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterRoleBindings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClusterRoleBindings = append(m.ClusterRoleBindings, &ves_io_schema_views.ObjectRefType{})
			if err := m.ClusterRoleBindings[len(m.ClusterRoleBindings)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GlobalSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GlobalSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GlobalSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoLocalAccess", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LocalAccessChoice = &GlobalSpecType_NoLocalAccess{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalAccessConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LocalAccessConfigType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LocalAccessChoice = &GlobalSpecType_LocalAccessConfig{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoGlobalAccess", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalAccessChoice = &GlobalSpecType_NoGlobalAccess{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalAccessEnable", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalAccessChoice = &GlobalSpecType_GlobalAccessEnable{v}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultPsp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.PodSecurityPolicyChoice = &GlobalSpecType_UseDefaultPsp{v}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomPspList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PodSecurityPolicyListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.PodSecurityPolicyChoice = &GlobalSpecType_UseCustomPspList{v}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultClusterRoles", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleChoice = &GlobalSpecType_UseDefaultClusterRoles{v}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomClusterRoleList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClusterRoleListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleChoice = &GlobalSpecType_UseCustomClusterRoleList{v}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultClusterRoleBindings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleBindingsChoice = &GlobalSpecType_UseDefaultClusterRoleBindings{v}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomClusterRoleBindings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClusterRoleBindingListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleBindingsChoice = &GlobalSpecType_UseCustomClusterRoleBindings{v}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoClusterWideApps", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.AppsChoice = &GlobalSpecType_NoClusterWideApps{v}
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterWideAppList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClusterWideAppListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.AppsChoice = &GlobalSpecType_ClusterWideAppList{v}
			iNdEx = postIndex
		case 1000:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewInternal", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ViewInternal == nil {
				m.ViewInternal = &ves_io_schema_views.ObjectRefType{}
			}
			if err := m.ViewInternal.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 1001:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FinalClusterRoleBindings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FinalClusterRoleBindings = append(m.FinalClusterRoleBindings, &ves_io_schema_views.ObjectRefType{})
			if err := m.FinalClusterRoleBindings[len(m.FinalClusterRoleBindings)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 1002:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FinalClusterRoles", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FinalClusterRoles = append(m.FinalClusterRoles, &ves_io_schema_views.ObjectRefType{})
			if err := m.FinalClusterRoles[len(m.FinalClusterRoles)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 1003:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FinalPodSecurityPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FinalPodSecurityPolicies = append(m.FinalPodSecurityPolicies, &ves_io_schema_views.ObjectRefType{})
			if err := m.FinalPodSecurityPolicies[len(m.FinalPodSecurityPolicies)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoLocalAccess", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LocalAccessChoice = &CreateSpecType_NoLocalAccess{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalAccessConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LocalAccessConfigType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LocalAccessChoice = &CreateSpecType_LocalAccessConfig{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoGlobalAccess", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalAccessChoice = &CreateSpecType_NoGlobalAccess{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalAccessEnable", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalAccessChoice = &CreateSpecType_GlobalAccessEnable{v}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultPsp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.PodSecurityPolicyChoice = &CreateSpecType_UseDefaultPsp{v}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomPspList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PodSecurityPolicyListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.PodSecurityPolicyChoice = &CreateSpecType_UseCustomPspList{v}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultClusterRoles", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleChoice = &CreateSpecType_UseDefaultClusterRoles{v}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomClusterRoleList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClusterRoleListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleChoice = &CreateSpecType_UseCustomClusterRoleList{v}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultClusterRoleBindings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleBindingsChoice = &CreateSpecType_UseDefaultClusterRoleBindings{v}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomClusterRoleBindings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClusterRoleBindingListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleBindingsChoice = &CreateSpecType_UseCustomClusterRoleBindings{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReplaceSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReplaceSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReplaceSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoLocalAccess", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LocalAccessChoice = &ReplaceSpecType_NoLocalAccess{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalAccessConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LocalAccessConfigType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LocalAccessChoice = &ReplaceSpecType_LocalAccessConfig{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoGlobalAccess", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalAccessChoice = &ReplaceSpecType_NoGlobalAccess{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalAccessEnable", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalAccessChoice = &ReplaceSpecType_GlobalAccessEnable{v}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultPsp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.PodSecurityPolicyChoice = &ReplaceSpecType_UseDefaultPsp{v}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomPspList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PodSecurityPolicyListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.PodSecurityPolicyChoice = &ReplaceSpecType_UseCustomPspList{v}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultClusterRoles", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleChoice = &ReplaceSpecType_UseDefaultClusterRoles{v}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomClusterRoleList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClusterRoleListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleChoice = &ReplaceSpecType_UseCustomClusterRoleList{v}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultClusterRoleBindings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleBindingsChoice = &ReplaceSpecType_UseDefaultClusterRoleBindings{v}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomClusterRoleBindings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClusterRoleBindingListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleBindingsChoice = &ReplaceSpecType_UseCustomClusterRoleBindings{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoLocalAccess", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LocalAccessChoice = &GetSpecType_NoLocalAccess{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalAccessConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LocalAccessConfigType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LocalAccessChoice = &GetSpecType_LocalAccessConfig{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoGlobalAccess", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalAccessChoice = &GetSpecType_NoGlobalAccess{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalAccessEnable", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalAccessChoice = &GetSpecType_GlobalAccessEnable{v}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultPsp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.PodSecurityPolicyChoice = &GetSpecType_UseDefaultPsp{v}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomPspList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PodSecurityPolicyListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.PodSecurityPolicyChoice = &GetSpecType_UseCustomPspList{v}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultClusterRoles", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleChoice = &GetSpecType_UseDefaultClusterRoles{v}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomClusterRoleList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClusterRoleListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleChoice = &GetSpecType_UseCustomClusterRoleList{v}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseDefaultClusterRoleBindings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleBindingsChoice = &GetSpecType_UseDefaultClusterRoleBindings{v}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCustomClusterRoleBindings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClusterRoleBindingListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ClusterRoleBindingsChoice = &GetSpecType_UseCustomClusterRoleBindings{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTypes(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthTypes
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowTypes
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipTypes(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthTypes = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTypes   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("ves.io/schema/k8s_cluster/types.proto", fileDescriptorTypes) }
func init() { golang_proto.RegisterFile("ves.io/schema/k8s_cluster/types.proto", fileDescriptorTypes) }

var fileDescriptorTypes = []byte{
	// 1568 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x59, 0xdf, 0x4f, 0xdb, 0xd6,
	0x17, 0xcf, 0x49, 0x0c, 0x84, 0x1b, 0x02, 0x89, 0x81, 0xd6, 0x50, 0xea, 0xe6, 0x1b, 0x7d, 0xbf,
	0xdf, 0xa2, 0x2a, 0x24, 0x0d, 0xd0, 0x96, 0x56, 0x53, 0x57, 0x0c, 0x15, 0x29, 0xaa, 0x54, 0xea,
	0x4e, 0x9a, 0xba, 0x87, 0xb9, 0x8e, 0x73, 0x09, 0x5e, 0x1d, 0x5f, 0xcb, 0x76, 0xe8, 0x98, 0x86,
	0x56, 0xf1, 0x17, 0xb4, 0xdd, 0x3f, 0x31, 0x31, 0x69, 0xdb, 0xe3, 0xb4, 0x68, 0x12, 0xea, 0xd3,
	0xb4, 0x97, 0x45, 0xdb, 0x4b, 0x1f, 0x47, 0xfa, 0x30, 0xba, 0x3d, 0xac, 0x8f, 0x15, 0x7b, 0x99,
	0x7c, 0xe3, 0x04, 0xe7, 0x07, 0x69, 0x2a, 0x4d, 0x9a, 0x36, 0xe5, 0x29, 0x8e, 0xcf, 0xaf, 0xcf,
	0xb9, 0xe7, 0x9c, 0xcf, 0xb9, 0x92, 0xd1, 0xff, 0x36, 0xb1, 0x95, 0x54, 0x49, 0xca, 0x52, 0x36,
	0x70, 0x41, 0x4e, 0xdd, 0x5f, 0xb0, 0x24, 0x45, 0x2b, 0x5a, 0x36, 0x36, 0x53, 0xf6, 0x96, 0x81,
	0xad, 0xa4, 0x61, 0x12, 0x9b, 0xb0, 0x13, 0x55, 0xb5, 0x64, 0x55, 0x2d, 0xe9, 0x51, 0x9b, 0x9c,
	0xc9, 0xab, 0xf6, 0x46, 0x31, 0x9b, 0x54, 0x48, 0x21, 0x95, 0x27, 0x79, 0x92, 0xa2, 0x16, 0xd9,
	0xe2, 0x3a, 0xfd, 0x47, 0xff, 0xd0, 0xa7, 0xaa, 0xa7, 0xc9, 0x53, 0x8d, 0x01, 0x89, 0x61, 0xab,
	0x44, 0x77, 0xc3, 0x4c, 0x4e, 0x34, 0x0a, 0x3d, 0x08, 0x26, 0xa7, 0x1a, 0x45, 0x9b, 0xb2, 0xa6,
	0xe6, 0x64, 0x1b, 0xbb, 0xd2, 0x58, 0x93, 0x54, 0xc5, 0x0f, 0xa4, 0x46, 0xd7, 0x67, 0x5a, 0x35,
	0x2c, 0x6f, 0x80, 0xf8, 0x3d, 0x34, 0xbe, 0x68, 0x18, 0x9a, 0xaa, 0xc8, 0x8e, 0xd9, 0xa2, 0x99,
	0x27, 0x4b, 0xcb, 0xef, 0x6c, 0x19, 0x98, 0x5d, 0x41, 0xc3, 0x79, 0xac, 0x63, 0x53, 0xb6, 0x71,
	0x4e, 0xda, 0x92, 0x0b, 0x1a, 0xf7, 0x62, 0x20, 0x06, 0xd3, 0x83, 0xc2, 0x99, 0x67, 0xdb, 0x70,
	0x50, 0x02, 0x78, 0x55, 0x02, 0xe6, 0x9b, 0x17, 0x7b, 0x81, 0x3e, 0x33, 0xc0, 0x3d, 0x8c, 0xb9,
	0x4f, 0x8f, 0x00, 0xc4, 0x70, 0xdd, 0xee, 0xae, 0x5c, 0xd0, 0xe2, 0x0a, 0xe2, 0x3c, 0x11, 0x96,
	0x65, 0x6b, 0x23, 0x4b, 0x64, 0x33, 0xf7, 0xd7, 0x06, 0xf9, 0x05, 0x10, 0xbb, 0x54, 0x2d, 0xcd,
	0xbb, 0x6a, 0x0e, 0x2f, 0x1a, 0x06, 0xf5, 0x7f, 0x1b, 0x0d, 0xc8, 0x66, 0x9e, 0x48, 0x4a, 0x8e,
	0xf3, 0xc7, 0x60, 0x3a, 0x34, 0x7b, 0x3e, 0x79, 0x6c, 0x49, 0x93, 0x6d, 0xcf, 0x41, 0x60, 0xca,
	0x25, 0x80, 0x8c, 0x4f, 0xec, 0x77, 0x1c, 0x2d, 0xe5, 0xd8, 0xbb, 0x68, 0x30, 0x57, 0xcb, 0x81,
	0x0b, 0x50, 0xa7, 0x73, 0xdd, 0x39, 0x6d, 0x48, 0xbd, 0xee, 0xf7, 0xc8, 0x9b, 0x70, 0x1a, 0x21,
	0xd9, 0x30, 0x24, 0x65, 0x83, 0xa8, 0x0a, 0x66, 0x47, 0xf6, 0x4a, 0xe0, 0x77, 0x94, 0x2a, 0x25,
	0x08, 0xcc, 0x26, 0xe6, 0x56, 0x99, 0x20, 0x44, 0xfc, 0xf1, 0x2f, 0x01, 0x9d, 0x68, 0xcc, 0xf4,
	0xa6, 0x6a, 0xd9, 0x34, 0x5b, 0x82, 0xa2, 0x6e, 0x58, 0xe9, 0x81, 0x9a, 0xc3, 0x92, 0x6c, 0x18,
	0x16, 0x07, 0xb1, 0xc0, 0x74, 0x68, 0x76, 0xa6, 0x03, 0xc4, 0xd6, 0x73, 0x13, 0xc6, 0xe8, 0x49,
	0x3f, 0x01, 0x7f, 0xc4, 0x5f, 0x7b, 0x0a, 0x82, 0x38, 0xa2, 0x34, 0x68, 0x5a, 0x57, 0xfe, 0xfb,
	0xb4, 0x04, 0x31, 0xc4, 0xa3, 0x09, 0xd7, 0x45, 0xcc, 0x91, 0xc4, 0x3c, 0x29, 0x5b, 0x2c, 0xa4,
	0xe3, 0xbf, 0x03, 0x1a, 0xbf, 0x49, 0x14, 0x59, 0x5b, 0x54, 0x14, 0x6c, 0x59, 0x4b, 0x44, 0x5f,
	0x57, 0xf3, 0x14, 0xf0, 0xdb, 0x68, 0x48, 0x73, 0x04, 0x52, 0x8e, 0x14, 0x64, 0x55, 0xe7, 0x80,
	0xd6, 0x7e, 0xca, 0x09, 0xc9, 0x98, 0xfe, 0x0d, 0xa8, 0x55, 0x7e, 0x0f, 0xdc, 0x57, 0x11, 0x10,
	0x43, 0xd4, 0x62, 0x99, 0x1a, 0xb0, 0x97, 0xd1, 0x50, 0x0e, 0xaf, 0xcb, 0x45, 0xcd, 0x96, 0x0c,
	0x62, 0xda, 0x6e, 0x3d, 0xc6, 0x9a, 0x92, 0xbd, 0x5e, 0x30, 0xec, 0xad, 0x8c, 0x4f, 0x0c, 0xb9,
	0xba, 0x6b, 0xc4, 0xb4, 0xd9, 0x79, 0xc4, 0x50, 0x13, 0x26, 0x06, 0xd3, 0x61, 0x81, 0xa7, 0x01,
	0xce, 0xf9, 0xa7, 0x69, 0xa4, 0xfe, 0x73, 0x0c, 0x77, 0xf0, 0x47, 0x80, 0x86, 0x3f, 0x17, 0x58,
	0xf8, 0x7c, 0x36, 0xe3, 0x13, 0xa9, 0xb6, 0xc0, 0xa3, 0x90, 0xf3, 0xeb, 0xad, 0x51, 0xa0, 0x5c,
	0x02, 0xbf, 0x53, 0xa3, 0xb9, 0xc4, 0xfc, 0x2a, 0x13, 0xf4, 0x47, 0x02, 0xf1, 0x2f, 0x00, 0x4d,
	0xac, 0x91, 0xdc, 0x1d, 0xac, 0x14, 0x4d, 0xd5, 0xde, 0x5a, 0x23, 0x9a, 0xaa, 0x6c, 0xd5, 0xcb,
	0xf4, 0x08, 0xd0, 0xb8, 0x41, 0x72, 0x92, 0xe5, 0x8a, 0x25, 0xc3, 0x91, 0xab, 0xb8, 0x56, 0xab,
	0x78, 0x13, 0x7c, 0x3a, 0xb4, 0xc9, 0x5b, 0xd9, 0x0f, 0xb0, 0x62, 0x8b, 0x78, 0x9d, 0x16, 0x68,
	0x61, 0x77, 0xfb, 0xa4, 0x53, 0xc3, 0x56, 0x3f, 0x5b, 0xf5, 0xd2, 0x45, 0x8e, 0x4a, 0x57, 0x7b,
	0xe2, 0x40, 0x1c, 0x35, 0x9a, 0x80, 0xa9, 0xd8, 0x8a, 0x3f, 0x06, 0x34, 0xea, 0xd6, 0x50, 0x24,
	0x1a, 0xae, 0x43, 0xfd, 0x08, 0x85, 0x6b, 0x1d, 0x65, 0x12, 0xed, 0x8d, 0x10, 0xa6, 0x77, 0xb7,
	0x23, 0x9e, 0x2e, 0xa3, 0xf6, 0xaf, 0x81, 0x36, 0xa4, 0x1c, 0x41, 0xb0, 0xe2, 0x5f, 0x01, 0x9a,
	0xf4, 0x60, 0x12, 0x54, 0x3d, 0xa7, 0xea, 0xf9, 0x3a, 0xb4, 0xc7, 0x80, 0xc6, 0xbd, 0xbe, 0xa5,
	0x6c, 0x55, 0xe1, 0x4d, 0x30, 0x5e, 0xde, 0xdd, 0xe6, 0x9a, 0x31, 0xd6, 0xfc, 0xd4, 0xb1, 0xc6,
	0xda, 0x1f, 0xa3, 0xd2, 0x02, 0xcd, 0x8a, 0x7f, 0x3b, 0x82, 0x86, 0x57, 0x34, 0x92, 0x95, 0xb5,
	0x3b, 0x06, 0x56, 0x28, 0xcc, 0xab, 0x68, 0x44, 0x27, 0x52, 0xb5, 0xcb, 0x65, 0xda, 0xff, 0x2e,
	0x13, 0x1d, 0xd7, 0xa4, 0x61, 0x9d, 0x78, 0x86, 0x85, 0xcd, 0xa2, 0x51, 0xaf, 0xb1, 0xa4, 0xd0,
	0xe9, 0x71, 0x1b, 0xbd, 0x13, 0x9b, 0xb5, 0x9d, 0xb8, 0x8c, 0x4f, 0x8c, 0x6a, 0xcd, 0x02, 0xf6,
	0x1a, 0x8a, 0xe8, 0x44, 0xca, 0x53, 0xe0, 0x35, 0x90, 0x7d, 0x1d, 0x40, 0x82, 0x38, 0xac, 0x93,
	0x6a, 0x9e, 0x2e, 0xca, 0x0c, 0x1a, 0x6b, 0x30, 0x97, 0xb0, 0x2e, 0x67, 0x35, 0xcc, 0xf5, 0x77,
	0xf4, 0xc2, 0xe6, 0x3d, 0x3e, 0xae, 0x53, 0x0b, 0xe7, 0xbc, 0x8a, 0x16, 0x96, 0xea, 0x53, 0x6d,
	0x19, 0x5c, 0xb0, 0x83, 0x13, 0xbf, 0x18, 0x2e, 0x5a, 0x78, 0xd9, 0x9d, 0x6b, 0xcb, 0x60, 0x31,
	0x1a, 0x75, 0xec, 0x95, 0xa2, 0x65, 0x93, 0x82, 0x63, 0x2e, 0x69, 0xaa, 0x65, 0x73, 0x83, 0xd4,
	0xc7, 0x7c, 0x87, 0xf3, 0x3a, 0x76, 0x5e, 0x33, 0x7e, 0x31, 0x52, 0xb4, 0xf0, 0x12, 0xf5, 0xb8,
	0x66, 0x51, 0xba, 0x65, 0x6f, 0xa3, 0x09, 0x2f, 0xcc, 0xc6, 0x21, 0x09, 0x75, 0x00, 0x1c, 0x10,
	0x4f, 0x1c, 0x01, 0xf6, 0xb4, 0xb7, 0xc5, 0x1a, 0x68, 0xca, 0x83, 0xbc, 0xa1, 0x25, 0x69, 0x0a,
	0x43, 0xd4, 0x6b, 0xf2, 0xf5, 0x44, 0xee, 0x9d, 0xe0, 0x4c, 0x40, 0xe4, 0xea, 0xe0, 0x9b, 0xe4,
	0xec, 0x3d, 0xf4, 0x9f, 0xe3, 0x92, 0x38, 0x9a, 0xa6, 0xe1, 0x0e, 0xc9, 0x30, 0xe2, 0xe9, 0xb6,
	0xc9, 0xd4, 0x06, 0x82, 0xfd, 0x04, 0xc5, 0x8e, 0xcb, 0xa9, 0x1e, 0x60, 0x84, 0x06, 0xb8, 0xd0,
	0x5d, 0x5e, 0x4d, 0x2c, 0x90, 0x61, 0xc4, 0xa9, 0x76, 0xe9, 0xd5, 0x01, 0xac, 0xa0, 0x31, 0x9d,
	0x48, 0xad, 0x5b, 0x31, 0xda, 0x21, 0xab, 0x3e, 0x31, 0xaa, 0x93, 0xc6, 0xa5, 0x68, 0xb1, 0xda,
	0x11, 0xdb, 0xd4, 0xbc, 0x54, 0xcb, 0xc2, 0x52, 0x4f, 0xe9, 0xae, 0xf7, 0x6b, 0x0d, 0xba, 0xc0,
	0xec, 0x39, 0x17, 0x80, 0x3e, 0x91, 0x55, 0x5a, 0xe4, 0xec, 0xfb, 0x28, 0x4c, 0x2f, 0x73, 0xaa,
	0x6e, 0x63, 0x53, 0x97, 0x35, 0xee, 0x60, 0x80, 0x86, 0xe9, 0x86, 0xd4, 0xc6, 0x76, 0xb7, 0x1b,
	0x8d, 0x9d, 0x7b, 0x94, 0x38, 0xe4, 0xbc, 0xba, 0xe1, 0xbe, 0x61, 0x3f, 0x05, 0x74, 0x6a, 0x5d,
	0xd5, 0x65, 0xed, 0x98, 0x9a, 0xbc, 0x18, 0xe8, 0x9a, 0x43, 0x53, 0xdd, 0x70, 0x68, 0xdc, 0xc3,
	0x9c, 0x1c, 0x0d, 0xdc, 0xae, 0x58, 0x1f, 0xa3, 0xd1, 0x56, 0x50, 0x16, 0xf7, 0x6b, 0xf7, 0x60,
	0xce, 0x76, 0x5a, 0x3a, 0x5e, 0x10, 0xd1, 0x66, 0x10, 0x16, 0xfb, 0xa4, 0x7e, 0x26, 0xed, 0x97,
	0xf3, 0x6f, 0xdd, 0xc3, 0x48, 0x76, 0xb1, 0x9d, 0x5b, 0x8f, 0x64, 0xad, 0x75, 0x31, 0x5f, 0xb9,
	0xf1, 0xb4, 0x04, 0xd7, 0x51, 0x18, 0xf5, 0xbb, 0x44, 0x1b, 0x48, 0x27, 0xe6, 0xd1, 0x28, 0x0a,
	0xd6, 0x14, 0xd9, 0x81, 0x4b, 0x89, 0xf4, 0xf9, 0x44, 0x7a, 0x0e, 0x9d, 0xe9, 0x74, 0x0b, 0xf3,
	0xa7, 0x2f, 0x0a, 0xff, 0x6f, 0xde, 0x24, 0xed, 0xaf, 0x99, 0xc2, 0xd9, 0x66, 0x2e, 0xf7, 0x28,
	0xf6, 0x95, 0x4b, 0xc0, 0x38, 0x8a, 0x17, 0x12, 0x17, 0x85, 0x19, 0x34, 0xd9, 0x26, 0x41, 0xaf,
	0x7a, 0xb0, 0x5c, 0x82, 0x01, 0x47, 0x7d, 0x21, 0x71, 0x59, 0x98, 0x46, 0xa3, 0x0d, 0x3d, 0xe2,
	0xea, 0x45, 0xf7, 0x4a, 0x10, 0x2a, 0x97, 0x00, 0x55, 0x4a, 0xd0, 0x97, 0x4e, 0x27, 0xd2, 0xb3,
	0x42, 0x1a, 0x4d, 0xb5, 0x6d, 0x4b, 0xaf, 0xc9, 0x70, 0xb9, 0x04, 0x61, 0x6a, 0x32, 0x9f, 0x48,
	0x5f, 0x10, 0x62, 0x28, 0xe4, 0xcc, 0xb5, 0x57, 0x23, 0x5a, 0x2e, 0x41, 0x84, 0x6a, 0x5c, 0x4a,
	0xa4, 0x17, 0xaa, 0xb7, 0xe7, 0x55, 0x26, 0xc8, 0x44, 0xfa, 0x56, 0x99, 0xe0, 0x40, 0x24, 0xb8,
	0xca, 0x04, 0x51, 0x24, 0xb4, 0xca, 0x04, 0xc3, 0x91, 0xe1, 0x55, 0x26, 0x18, 0x89, 0x44, 0xe3,
	0x3f, 0x0e, 0xa2, 0xe1, 0x25, 0x13, 0xcb, 0x36, 0xee, 0xed, 0xef, 0xde, 0xfe, 0xee, 0xed, 0xef,
	0xbf, 0x7d, 0x7f, 0x5f, 0x89, 0x7e, 0x7f, 0xb5, 0xe9, 0x46, 0x2d, 0x24, 0xdb, 0xf3, 0xd8, 0xc9,
	0x9d, 0x43, 0x68, 0x27, 0x10, 0xce, 0x1f, 0xc3, 0x67, 0xdc, 0xce, 0x21, 0xb4, 0x95, 0x08, 0x6f,
	0x75, 0x24, 0x36, 0x7e, 0xe7, 0x10, 0x3a, 0xc8, 0x1d, 0x7c, 0xed, 0x78, 0x8e, 0xe2, 0x6b, 0x23,
	0x10, 0xae, 0xbd, 0x86, 0xed, 0x62, 0x3b, 0x87, 0xd0, 0x51, 0xa3, 0x33, 0xb5, 0xc5, 0x7f, 0x1a,
	0x44, 0x23, 0x22, 0x36, 0x34, 0x59, 0xe9, 0xb1, 0x5a, 0x8f, 0xd5, 0x7a, 0xac, 0xd6, 0x63, 0xb5,
	0x7f, 0x03, 0xab, 0xfd, 0x30, 0x88, 0x42, 0x2b, 0xd8, 0xee, 0x31, 0x5a, 0x8f, 0xd1, 0x7a, 0x8c,
	0xd6, 0x63, 0xb4, 0x7f, 0x3e, 0xa3, 0x09, 0x8f, 0xa1, 0xbc, 0xcf, 0xfb, 0x9e, 0xed, 0xf3, 0xbe,
	0x97, 0xfb, 0x3c, 0xbc, 0xda, 0xe7, 0xe1, 0x61, 0x85, 0x87, 0xcf, 0x2a, 0x3c, 0x7c, 0x5d, 0xe1,
	0x61, 0xaf, 0xc2, 0xc3, 0x77, 0x15, 0x1e, 0xca, 0x15, 0x1e, 0x9e, 0x55, 0x78, 0xf8, 0xb9, 0xc2,
	0xc3, 0x41, 0x85, 0xf7, 0xbd, 0xac, 0xf0, 0xf0, 0xe8, 0x39, 0xef, 0xdb, 0x7b, 0xce, 0xc3, 0x7b,
	0xb7, 0xf2, 0xc4, 0xb8, 0x9f, 0x4f, 0x6e, 0x12, 0xcd, 0xc6, 0xa6, 0x29, 0x27, 0x8b, 0x56, 0x8a,
	0x3e, 0xac, 0x13, 0xb3, 0x30, 0x63, 0x98, 0x64, 0x53, 0xcd, 0x61, 0x73, 0xa6, 0x26, 0x4e, 0x19,
	0xd9, 0x3c, 0x49, 0xe1, 0x0f, 0x6d, 0xf7, 0xe3, 0x60, 0xeb, 0xc7, 0xd0, 0x6c, 0x3f, 0xfd, 0x48,
	0x38, 0xf7, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x36, 0x2c, 0xa6, 0xc4, 0x30, 0x1d, 0x00, 0x00,
}
