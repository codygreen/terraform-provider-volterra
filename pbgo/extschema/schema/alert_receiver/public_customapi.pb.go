// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/alert_receiver/public_customapi.proto

package alert_receiver

import (
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"

	fmt "fmt"

	math "math"

	_ "github.com/gogo/protobuf/gogoproto"

	_ "github.com/gogo/googleapis/google/api"

	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"

	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"

	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"

	strings "strings"

	reflect "reflect"

	context "golang.org/x/net/context"

	grpc "google.golang.org/grpc"

	io "io"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Verify Alert Receiver Request
//
// x-displayName: "Verify Alert Receiver Request"
// Send request to verify Alert Receiver
type VerifyAlertReceiverRequest struct {
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-required
	// x-example: "ns1"
	// Namespace in which the alert receiver is configured
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Name
	//
	// x-displayName: "Name"
	// x-example: "email1"
	// Name of the alert receiver
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *VerifyAlertReceiverRequest) Reset()      { *m = VerifyAlertReceiverRequest{} }
func (*VerifyAlertReceiverRequest) ProtoMessage() {}
func (*VerifyAlertReceiverRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorPublicCustomapi, []int{0}
}

func (m *VerifyAlertReceiverRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *VerifyAlertReceiverRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Verify Alert Receiver Response
//
// x-displayName: "Verify Alert Receiver Response"
// Response for the Alert Receiver Verify request; empty because the only returned
// information is error message.
type VerifyAlertReceiverResponse struct {
}

func (m *VerifyAlertReceiverResponse) Reset()      { *m = VerifyAlertReceiverResponse{} }
func (*VerifyAlertReceiverResponse) ProtoMessage() {}
func (*VerifyAlertReceiverResponse) Descriptor() ([]byte, []int) {
	return fileDescriptorPublicCustomapi, []int{1}
}

// Confirm Alert Receiver Request
//
// x-displayName: "Confirm Alert Receiver Request"
// Request to confirm the Alert Receiver
type ConfirmAlertReceiverRequest struct {
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-required
	// x-example: "ns1"
	// Namespace in which the alert receiver is configured
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Name
	//
	// x-displayName: "Name"
	// x-example: "email1"
	// Name of the alert receiver
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Verification Code
	//
	// x-displayName: "Verification Code"
	// x-example: "123456"
	// Verification Code received by the user
	VerificationCode string `protobuf:"bytes,3,opt,name=verification_code,json=verificationCode,proto3" json:"verification_code,omitempty"`
}

func (m *ConfirmAlertReceiverRequest) Reset()      { *m = ConfirmAlertReceiverRequest{} }
func (*ConfirmAlertReceiverRequest) ProtoMessage() {}
func (*ConfirmAlertReceiverRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorPublicCustomapi, []int{2}
}

func (m *ConfirmAlertReceiverRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ConfirmAlertReceiverRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ConfirmAlertReceiverRequest) GetVerificationCode() string {
	if m != nil {
		return m.VerificationCode
	}
	return ""
}

// Confirm Alert Receiver Response
//
// x-displayName: "Confirm Alert Receiver Response"
// Response for the Alert Receiver Confirm request; empty because the only returned
// information is error message.
type ConfirmAlertReceiverResponse struct {
}

func (m *ConfirmAlertReceiverResponse) Reset()      { *m = ConfirmAlertReceiverResponse{} }
func (*ConfirmAlertReceiverResponse) ProtoMessage() {}
func (*ConfirmAlertReceiverResponse) Descriptor() ([]byte, []int) {
	return fileDescriptorPublicCustomapi, []int{3}
}

// Test Alert Receiver Request
//
// x-displayName: "Test Alert Receiver Request"
// Request to send test alert
type TestAlertReceiverRequest struct {
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-required
	// x-example: "ns1"
	// Namespace in which the alert receiver is configured
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Name
	//
	// x-displayName: "Name"
	// x-example: "slack1"
	// Name of the alert receiver
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *TestAlertReceiverRequest) Reset()      { *m = TestAlertReceiverRequest{} }
func (*TestAlertReceiverRequest) ProtoMessage() {}
func (*TestAlertReceiverRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorPublicCustomapi, []int{4}
}

func (m *TestAlertReceiverRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *TestAlertReceiverRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Test Alert Receiver Response
//
// x-displayName: "Test Alert Receiver Response"
// Response for the Alert Receiver test request; empty because the only returned
// information is error message.
type TestAlertReceiverResponse struct {
}

func (m *TestAlertReceiverResponse) Reset()      { *m = TestAlertReceiverResponse{} }
func (*TestAlertReceiverResponse) ProtoMessage() {}
func (*TestAlertReceiverResponse) Descriptor() ([]byte, []int) {
	return fileDescriptorPublicCustomapi, []int{5}
}

func init() {
	proto.RegisterType((*VerifyAlertReceiverRequest)(nil), "ves.io.schema.alert_receiver.VerifyAlertReceiverRequest")
	golang_proto.RegisterType((*VerifyAlertReceiverRequest)(nil), "ves.io.schema.alert_receiver.VerifyAlertReceiverRequest")
	proto.RegisterType((*VerifyAlertReceiverResponse)(nil), "ves.io.schema.alert_receiver.VerifyAlertReceiverResponse")
	golang_proto.RegisterType((*VerifyAlertReceiverResponse)(nil), "ves.io.schema.alert_receiver.VerifyAlertReceiverResponse")
	proto.RegisterType((*ConfirmAlertReceiverRequest)(nil), "ves.io.schema.alert_receiver.ConfirmAlertReceiverRequest")
	golang_proto.RegisterType((*ConfirmAlertReceiverRequest)(nil), "ves.io.schema.alert_receiver.ConfirmAlertReceiverRequest")
	proto.RegisterType((*ConfirmAlertReceiverResponse)(nil), "ves.io.schema.alert_receiver.ConfirmAlertReceiverResponse")
	golang_proto.RegisterType((*ConfirmAlertReceiverResponse)(nil), "ves.io.schema.alert_receiver.ConfirmAlertReceiverResponse")
	proto.RegisterType((*TestAlertReceiverRequest)(nil), "ves.io.schema.alert_receiver.TestAlertReceiverRequest")
	golang_proto.RegisterType((*TestAlertReceiverRequest)(nil), "ves.io.schema.alert_receiver.TestAlertReceiverRequest")
	proto.RegisterType((*TestAlertReceiverResponse)(nil), "ves.io.schema.alert_receiver.TestAlertReceiverResponse")
	golang_proto.RegisterType((*TestAlertReceiverResponse)(nil), "ves.io.schema.alert_receiver.TestAlertReceiverResponse")
}
func (this *VerifyAlertReceiverRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*VerifyAlertReceiverRequest)
	if !ok {
		that2, ok := that.(VerifyAlertReceiverRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	return true
}
func (this *VerifyAlertReceiverResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*VerifyAlertReceiverResponse)
	if !ok {
		that2, ok := that.(VerifyAlertReceiverResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *ConfirmAlertReceiverRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ConfirmAlertReceiverRequest)
	if !ok {
		that2, ok := that.(ConfirmAlertReceiverRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.VerificationCode != that1.VerificationCode {
		return false
	}
	return true
}
func (this *ConfirmAlertReceiverResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ConfirmAlertReceiverResponse)
	if !ok {
		that2, ok := that.(ConfirmAlertReceiverResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *TestAlertReceiverRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*TestAlertReceiverRequest)
	if !ok {
		that2, ok := that.(TestAlertReceiverRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	return true
}
func (this *TestAlertReceiverResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*TestAlertReceiverResponse)
	if !ok {
		that2, ok := that.(TestAlertReceiverResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *VerifyAlertReceiverRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&alert_receiver.VerifyAlertReceiverRequest{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *VerifyAlertReceiverResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&alert_receiver.VerifyAlertReceiverResponse{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ConfirmAlertReceiverRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&alert_receiver.ConfirmAlertReceiverRequest{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "VerificationCode: "+fmt.Sprintf("%#v", this.VerificationCode)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ConfirmAlertReceiverResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&alert_receiver.ConfirmAlertReceiverResponse{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TestAlertReceiverRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&alert_receiver.TestAlertReceiverRequest{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TestAlertReceiverResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&alert_receiver.TestAlertReceiverResponse{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringPublicCustomapi(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for CustomAPI service

type CustomAPIClient interface {
	// Verify Alert Receiver
	//
	// x-displayName: "Verify Alert Receiver"
	// API to send request to verify Alert Receiver - applicable only for email and sms
	VerifyAlertReceiver(ctx context.Context, in *VerifyAlertReceiverRequest, opts ...grpc.CallOption) (*VerifyAlertReceiverResponse, error)
	// Confirm Alert Receiver
	//
	// x-displayName: "Confirm Alert Receiver"
	// API to confirm the Alert Receiver - applicable only for email and sms
	ConfirmAlertReceiver(ctx context.Context, in *ConfirmAlertReceiverRequest, opts ...grpc.CallOption) (*ConfirmAlertReceiverResponse, error)
	// Test Alert Receiver
	//
	// x-displayName: "Test Alert Receiver"
	// API to send test alert
	TestAlertReceiver(ctx context.Context, in *TestAlertReceiverRequest, opts ...grpc.CallOption) (*TestAlertReceiverResponse, error)
}

type customAPIClient struct {
	cc *grpc.ClientConn
}

func NewCustomAPIClient(cc *grpc.ClientConn) CustomAPIClient {
	return &customAPIClient{cc}
}

func (c *customAPIClient) VerifyAlertReceiver(ctx context.Context, in *VerifyAlertReceiverRequest, opts ...grpc.CallOption) (*VerifyAlertReceiverResponse, error) {
	out := new(VerifyAlertReceiverResponse)
	err := grpc.Invoke(ctx, "/ves.io.schema.alert_receiver.CustomAPI/VerifyAlertReceiver", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAPIClient) ConfirmAlertReceiver(ctx context.Context, in *ConfirmAlertReceiverRequest, opts ...grpc.CallOption) (*ConfirmAlertReceiverResponse, error) {
	out := new(ConfirmAlertReceiverResponse)
	err := grpc.Invoke(ctx, "/ves.io.schema.alert_receiver.CustomAPI/ConfirmAlertReceiver", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAPIClient) TestAlertReceiver(ctx context.Context, in *TestAlertReceiverRequest, opts ...grpc.CallOption) (*TestAlertReceiverResponse, error) {
	out := new(TestAlertReceiverResponse)
	err := grpc.Invoke(ctx, "/ves.io.schema.alert_receiver.CustomAPI/TestAlertReceiver", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CustomAPI service

type CustomAPIServer interface {
	// Verify Alert Receiver
	//
	// x-displayName: "Verify Alert Receiver"
	// API to send request to verify Alert Receiver - applicable only for email and sms
	VerifyAlertReceiver(context.Context, *VerifyAlertReceiverRequest) (*VerifyAlertReceiverResponse, error)
	// Confirm Alert Receiver
	//
	// x-displayName: "Confirm Alert Receiver"
	// API to confirm the Alert Receiver - applicable only for email and sms
	ConfirmAlertReceiver(context.Context, *ConfirmAlertReceiverRequest) (*ConfirmAlertReceiverResponse, error)
	// Test Alert Receiver
	//
	// x-displayName: "Test Alert Receiver"
	// API to send test alert
	TestAlertReceiver(context.Context, *TestAlertReceiverRequest) (*TestAlertReceiverResponse, error)
}

func RegisterCustomAPIServer(s *grpc.Server, srv CustomAPIServer) {
	s.RegisterService(&_CustomAPI_serviceDesc, srv)
}

func _CustomAPI_VerifyAlertReceiver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyAlertReceiverRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).VerifyAlertReceiver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.alert_receiver.CustomAPI/VerifyAlertReceiver",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).VerifyAlertReceiver(ctx, req.(*VerifyAlertReceiverRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAPI_ConfirmAlertReceiver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmAlertReceiverRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).ConfirmAlertReceiver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.alert_receiver.CustomAPI/ConfirmAlertReceiver",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).ConfirmAlertReceiver(ctx, req.(*ConfirmAlertReceiverRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAPI_TestAlertReceiver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestAlertReceiverRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).TestAlertReceiver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.alert_receiver.CustomAPI/TestAlertReceiver",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).TestAlertReceiver(ctx, req.(*TestAlertReceiverRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ves.io.schema.alert_receiver.CustomAPI",
	HandlerType: (*CustomAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "VerifyAlertReceiver",
			Handler:    _CustomAPI_VerifyAlertReceiver_Handler,
		},
		{
			MethodName: "ConfirmAlertReceiver",
			Handler:    _CustomAPI_ConfirmAlertReceiver_Handler,
		},
		{
			MethodName: "TestAlertReceiver",
			Handler:    _CustomAPI_TestAlertReceiver_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ves.io/schema/alert_receiver/public_customapi.proto",
}

func (m *VerifyAlertReceiverRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VerifyAlertReceiverRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Namespace) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintPublicCustomapi(dAtA, i, uint64(len(m.Namespace)))
		i += copy(dAtA[i:], m.Namespace)
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintPublicCustomapi(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	return i, nil
}

func (m *VerifyAlertReceiverResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VerifyAlertReceiverResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *ConfirmAlertReceiverRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConfirmAlertReceiverRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Namespace) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintPublicCustomapi(dAtA, i, uint64(len(m.Namespace)))
		i += copy(dAtA[i:], m.Namespace)
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintPublicCustomapi(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.VerificationCode) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintPublicCustomapi(dAtA, i, uint64(len(m.VerificationCode)))
		i += copy(dAtA[i:], m.VerificationCode)
	}
	return i, nil
}

func (m *ConfirmAlertReceiverResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConfirmAlertReceiverResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *TestAlertReceiverRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TestAlertReceiverRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Namespace) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintPublicCustomapi(dAtA, i, uint64(len(m.Namespace)))
		i += copy(dAtA[i:], m.Namespace)
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintPublicCustomapi(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	return i, nil
}

func (m *TestAlertReceiverResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TestAlertReceiverResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func encodeVarintPublicCustomapi(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *VerifyAlertReceiverRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicCustomapi(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovPublicCustomapi(uint64(l))
	}
	return n
}

func (m *VerifyAlertReceiverResponse) Size() (n int) {
	var l int
	_ = l
	return n
}

func (m *ConfirmAlertReceiverRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicCustomapi(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovPublicCustomapi(uint64(l))
	}
	l = len(m.VerificationCode)
	if l > 0 {
		n += 1 + l + sovPublicCustomapi(uint64(l))
	}
	return n
}

func (m *ConfirmAlertReceiverResponse) Size() (n int) {
	var l int
	_ = l
	return n
}

func (m *TestAlertReceiverRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicCustomapi(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovPublicCustomapi(uint64(l))
	}
	return n
}

func (m *TestAlertReceiverResponse) Size() (n int) {
	var l int
	_ = l
	return n
}

func sovPublicCustomapi(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozPublicCustomapi(x uint64) (n int) {
	return sovPublicCustomapi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *VerifyAlertReceiverRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&VerifyAlertReceiverRequest{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`}`,
	}, "")
	return s
}
func (this *VerifyAlertReceiverResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&VerifyAlertReceiverResponse{`,
		`}`,
	}, "")
	return s
}
func (this *ConfirmAlertReceiverRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ConfirmAlertReceiverRequest{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`VerificationCode:` + fmt.Sprintf("%v", this.VerificationCode) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ConfirmAlertReceiverResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ConfirmAlertReceiverResponse{`,
		`}`,
	}, "")
	return s
}
func (this *TestAlertReceiverRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&TestAlertReceiverRequest{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`}`,
	}, "")
	return s
}
func (this *TestAlertReceiverResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&TestAlertReceiverResponse{`,
		`}`,
	}, "")
	return s
}
func valueToStringPublicCustomapi(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *VerifyAlertReceiverRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VerifyAlertReceiverRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VerifyAlertReceiverRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VerifyAlertReceiverResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VerifyAlertReceiverResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VerifyAlertReceiverResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConfirmAlertReceiverRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConfirmAlertReceiverRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConfirmAlertReceiverRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerificationCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VerificationCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConfirmAlertReceiverResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConfirmAlertReceiverResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConfirmAlertReceiverResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TestAlertReceiverRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TestAlertReceiverRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TestAlertReceiverRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TestAlertReceiverResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TestAlertReceiverResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TestAlertReceiverResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPublicCustomapi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPublicCustomapi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthPublicCustomapi
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowPublicCustomapi
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipPublicCustomapi(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthPublicCustomapi = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPublicCustomapi   = fmt.Errorf("proto: integer overflow")
)

func init() {
	proto.RegisterFile("ves.io/schema/alert_receiver/public_customapi.proto", fileDescriptorPublicCustomapi)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/alert_receiver/public_customapi.proto", fileDescriptorPublicCustomapi)
}

var fileDescriptorPublicCustomapi = []byte{
	// 577 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xc1, 0x6b, 0x13, 0x4f,
	0x18, 0xcd, 0x34, 0xbf, 0x16, 0x3a, 0xa7, 0x5f, 0x57, 0x0f, 0xe9, 0x26, 0x0e, 0xb2, 0x5e, 0xa4,
	0xd2, 0x1d, 0xb0, 0x60, 0x35, 0x28, 0x92, 0x04, 0x51, 0x41, 0x54, 0x82, 0x78, 0xf0, 0x12, 0x76,
	0x37, 0x5f, 0xb6, 0xa3, 0xd9, 0x9d, 0x75, 0x66, 0x76, 0x31, 0x48, 0x41, 0xc4, 0x83, 0x47, 0xc1,
	0x7f, 0xc0, 0xa3, 0x7f, 0x81, 0x07, 0x7b, 0xc9, 0x51, 0xf0, 0x52, 0xec, 0x41, 0x8f, 0x66, 0xeb,
	0x41, 0x6f, 0xfd, 0x13, 0x24, 0xb3, 0xdb, 0xda, 0xe8, 0x36, 0x62, 0xe8, 0xed, 0x9b, 0x7d, 0xfb,
	0xbe, 0x79, 0xef, 0xcd, 0x37, 0x83, 0xd7, 0x12, 0x90, 0x36, 0xe3, 0x54, 0x7a, 0x1b, 0x10, 0x38,
	0xd4, 0xe9, 0x83, 0x50, 0x1d, 0x01, 0x1e, 0xb0, 0x04, 0x04, 0x8d, 0x62, 0xb7, 0xcf, 0xbc, 0x8e,
	0x17, 0x4b, 0xc5, 0x03, 0x27, 0x62, 0x76, 0x24, 0xb8, 0xe2, 0x46, 0x2d, 0x23, 0xd9, 0x19, 0xc9,
	0x9e, 0x24, 0x99, 0xab, 0x3e, 0x53, 0x1b, 0xb1, 0x6b, 0x7b, 0x3c, 0xa0, 0x3e, 0xf7, 0x39, 0xd5,
	0x24, 0x37, 0xee, 0xe9, 0x95, 0x5e, 0xe8, 0x2a, 0x6b, 0x66, 0xd6, 0x7c, 0xce, 0xfd, 0x3e, 0x50,
	0x27, 0x62, 0xd4, 0x09, 0x43, 0xae, 0x1c, 0xc5, 0x78, 0x28, 0x73, 0xb4, 0x3a, 0xa9, 0x8f, 0x47,
	0x87, 0xc1, 0xe5, 0x49, 0x50, 0x0d, 0x22, 0xd8, 0x87, 0x6a, 0x93, 0x50, 0xe2, 0xf4, 0x59, 0xd7,
	0x51, 0x90, 0xa1, 0xd6, 0x6d, 0x6c, 0xde, 0x07, 0xc1, 0x7a, 0x83, 0xc6, 0x58, 0x7a, 0x3b, 0x57,
	0xde, 0x86, 0xc7, 0x31, 0x48, 0x65, 0xd4, 0xf0, 0x62, 0xe8, 0x04, 0x20, 0x23, 0xc7, 0x83, 0x0a,
	0x3a, 0x8d, 0xce, 0x2e, 0xb6, 0x7f, 0x7d, 0x30, 0x0c, 0xfc, 0xdf, 0x78, 0x51, 0x99, 0xd3, 0x80,
	0xae, 0xad, 0x53, 0xb8, 0x5a, 0xd8, 0x4f, 0x46, 0x3c, 0x94, 0x60, 0xbd, 0x44, 0xb8, 0xda, 0xe2,
	0x61, 0x8f, 0x89, 0xe0, 0x78, 0x36, 0x34, 0xd6, 0xf1, 0x52, 0x32, 0xde, 0x90, 0x79, 0x3a, 0xad,
	0x8e, 0xc7, 0xbb, 0x50, 0x29, 0x8f, 0x7f, 0x68, 0xe2, 0xf7, 0x3f, 0x86, 0xe5, 0x79, 0x51, 0x7e,
	0x83, 0x16, 0xda, 0xff, 0x1f, 0xfe, 0xa9, 0xc5, 0xbb, 0x60, 0x11, 0x5c, 0x2b, 0x56, 0x92, 0x4b,
	0xbd, 0x85, 0x2b, 0xf7, 0x40, 0xaa, 0x63, 0xca, 0xa5, 0x8a, 0x97, 0x0b, 0xba, 0x65, 0x5b, 0x9d,
	0x7f, 0x37, 0x8f, 0x17, 0x5b, 0x7a, 0xb2, 0x1a, 0x77, 0x6f, 0x1a, 0x3b, 0x08, 0x9f, 0x28, 0xc8,
	0xd0, 0xb8, 0x68, 0x4f, 0x1b, 0x36, 0xfb, 0xe8, 0x63, 0x34, 0x2f, 0xcd, 0xc0, 0xcc, 0x53, 0xb8,
	0xfe, 0x7c, 0xe7, 0xdb, 0xeb, 0xb9, 0x86, 0x75, 0x39, 0xbf, 0x01, 0xf4, 0xc0, 0xa6, 0xa4, 0x4f,
	0x0f, 0xea, 0xcd, 0xdf, 0xae, 0x4b, 0x8e, 0x6d, 0x52, 0x9d, 0xfa, 0xa0, 0x8e, 0x56, 0x8c, 0xcf,
	0x08, 0x9f, 0x2c, 0xca, 0xdb, 0xf8, 0x8b, 0xb8, 0x29, 0xd3, 0x62, 0xd6, 0x67, 0xa1, 0xe6, 0xc6,
	0x6e, 0x68, 0x63, 0x4d, 0xeb, 0xca, 0x6c, 0xc6, 0xbc, 0xac, 0xf7, 0xd8, 0xd9, 0x47, 0x84, 0x97,
	0xfe, 0x38, 0x5b, 0xe3, 0xc2, 0x74, 0x6d, 0x47, 0x8d, 0x96, 0xb9, 0xfe, 0xcf, 0xbc, 0xdc, 0xd0,
	0x35, 0x6d, 0xe8, 0xaa, 0x55, 0x9f, 0xcd, 0x90, 0x02, 0xa9, 0xea, 0x68, 0xc5, 0x3c, 0x37, 0xdc,
	0x42, 0xe5, 0x4f, 0x5b, 0xe8, 0xcc, 0x54, 0x19, 0x77, 0xdc, 0x87, 0xe0, 0xa9, 0xe6, 0x0b, 0xb4,
	0x3d, 0x22, 0xa5, 0x2f, 0x23, 0x52, 0xda, 0x1b, 0x11, 0xf4, 0x2c, 0x25, 0xe8, 0x6d, 0x4a, 0xd0,
	0x87, 0x94, 0xa0, 0xed, 0x94, 0xa0, 0xaf, 0x29, 0x41, 0xdf, 0x53, 0x52, 0xda, 0x4b, 0x09, 0x7a,
	0xb5, 0x4b, 0x4a, 0xc3, 0x5d, 0x82, 0x1e, 0xb4, 0x7d, 0x1e, 0x3d, 0xf2, 0xed, 0x84, 0xf7, 0x15,
	0x08, 0xe1, 0xd8, 0xb1, 0xa4, 0xba, 0xe8, 0x71, 0x11, 0xac, 0x46, 0x82, 0x27, 0xac, 0x0b, 0x62,
	0x75, 0x1f, 0xa6, 0x91, 0xeb, 0x73, 0x0a, 0x4f, 0x54, 0xfe, 0x7a, 0x15, 0x3e, 0xce, 0xee, 0x82,
	0x7e, 0xcb, 0xd6, 0x7e, 0x06, 0x00, 0x00, 0xff, 0xff, 0x4a, 0x0a, 0x19, 0xce, 0xc3, 0x05, 0x00,
	0x00,
}
