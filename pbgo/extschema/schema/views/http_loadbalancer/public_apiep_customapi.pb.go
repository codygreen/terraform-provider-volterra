// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/views/http_loadbalancer/public_apiep_customapi.proto

package http_loadbalancer

import proto "github.com/gogo/protobuf/proto"
import golang_proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "github.com/gogo/googleapis/google/api"
import _ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
import _ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
import _ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/vesenv"
import _ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/virtual_host_dns_info"

import strings "strings"
import reflect "reflect"

import context "golang.org/x/net/context"
import grpc "google.golang.org/grpc"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Swagger spec request
//
// x-displayName: "Swagger spec Request"
// Request shape for GET Swagger Spec API
type SwaggerSpecReq struct {
	// Virtual Host Name
	//
	// x-displayName: "Virtual Host Name"
	// x-example: "blogging-app"
	// Http LoadBalancer for current request
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "shared"
	// Namespace of the Http Loadbalancer for current request
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (m *SwaggerSpecReq) Reset()      { *m = SwaggerSpecReq{} }
func (*SwaggerSpecReq) ProtoMessage() {}
func (*SwaggerSpecReq) Descriptor() ([]byte, []int) {
	return fileDescriptorPublicApiepCustomapi, []int{0}
}

func (m *SwaggerSpecReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SwaggerSpecReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

// Swagger Spec Response
//
// x-displayName: "Swagger Spec Response"
// Json encoded swagger spec for the given http loadbalancer.
type SwaggerSpecRsp struct {
	// Swagger Spec
	//
	// x-displayName: "Swagger Spec"
	// x-example: "{\"info\": {\"description\": \"\",\"title\": \"\",\"version\": \"\"},\"paths\": {\"\/api\/Addresss\": {\"post\": {\"consumes\": [\"application\/json\"],\"description\": \"Swagger auto-generated from learnt schema\",\"parameters\": [{\"description\": \"\",\"in\": \"query\",\"name\": \"test1\",\"type\": \"string\"},{\"description\": \"\",\"in\": \"query\",\"items\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"},\"name\": \"test\",\"type\": \"array\"},{\"description\": \"\",\"in\": \"body\",\"name\": \"body\",\"schema\": {\"example\": [\"{\\\"country\\\": \\\"dummy\\\", \\\"fullName\\\": \\\"dummy\\\", \\\"mobileNum\\\": 1234567890, \\\"zipCode\\\": \\\"121\\\", \\\"streetAddress\\\": \\\"dummy\\\", \\\"city\\\": \\\"dummy\\\", \\\"state\\\": \\\"dummy\\\", \\\"test\\\": \\\"Hello, \\\\u4e16\\\\u754c\\\", \\\"abc\\\": \\\"def\\\"}\"],\"properties\": {\"abc\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"city\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"country\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"fullName\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"mobileNum\": {\"type\": \"integer\"},\"state\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"streetAddress\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"test\": {\"type\": \"string\"},\"zipCode\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"}},\"required\": [\"fullName\",\"mobileNum\",\"city\",\"test\",\"zipCode\",\"state\",\"streetAddress\",\"country\",\"abc\"],\"type\": \"object\"}}],\"responses\": {\"200\": {\"description\": \"\"}}}},\"\/api\/Cards\": {\"post\": {\"consumes\": [\"application\/json\"],\"description\": \"Swagger auto-generated from learnt schema\",\"parameters\": [{\"description\": \"\",\"in\": \"body\",\"name\": \"body\",\"schema\": {\"example\": [\"{\\\"fullName\\\": \\\"dummy\\\", \\\"cardNum\\\": 0, \\\"expMonth\\\": \\\"0\\\", \\\"expYear\\\": \\\"0\\\"}\"],\"properties\": {\"cardNum\": {\"type\": \"integer\"},\"expMonth\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"},\"expYear\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"},\"fullName\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"}},\"required\": [\"expMonth\",\"expYear\",\"fullName\",\"cardNum\"],\"type\": \"object\"}}],\"responses\": {\"200\": {\"description\": \"\"}}}},\"\/rest\/basket\/6\/checkout\": {\"post\": {\"consumes\": [\"application\/json\"],\"description\": \"Swagger auto-generated from learnt schema\",\"parameters\": [{\"description\": \"\",\"in\": \"body\",\"name\": \"body\",\"schema\": {\"example\": [\"{\\\"couponData\\\": \\\"MTIzNDU2Nzg5MC0xNTg3MzM3MjAwMDAw\\\", \\\"orderDetails\\\": {\\\"paymentId\\\": \\\"9792\\\", \\\"addressId\\\": \\\"21189\\\", \\\"deliveryMethodId\\\": \\\"1\\\"}}\",\"{\\\"couponData\\\": \\\"MTIzNDU2Nzg5MC0xNTg3MzM3MjAwMDAw\\\", \\\"orderDetails\\\": {\\\"paymentId\\\": \\\"9814\\\", \\\"addressId\\\": \\\"21409\\\", \\\"deliveryMethodId\\\": \\\"1\\\"}}\",\"{\\\"couponData\\\": \\\"MTIzNDU2Nzg5MC0xNTg3MzM3MjAwMDAw\\\", \\\"orderDetails\\\": {\\\"paymentId\\\": \\\"9822\\\", \\\"addressId\\\": \\\"21489\\\", \\\"deliveryMethodId\\\": \\\"1\\\"}}\",\"{\\\"couponData\\\": \\\"MTIzNDU2Nzg5MC0xNTg3MzM3MjAwMDAw\\\", \\\"orderDetails\\\": {\\\"paymentId\\\": \\\"9793\\\", \\\"addressId\\\": \\\"21199\\\", \\\"deliveryMethodId\\\": \\\"1\\\"}}\",\"{\\\"couponData\\\": \\\"MTIzNDU2Nzg5MC0xNTg3MzM3MjAwMDAw\\\", \\\"orderDetails\\\": {\\\"paymentId\\\": \\\"9817\\\", \\\"addressId\\\": \\\"21439\\\", \\\"deliveryMethodId\\\": \\\"1\\\"}}\"],\"properties\": {\"couponData\": {\"type\": \"string\"},\"orderDetails\": {\"properties\": {\"addressId\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"},\"deliveryMethodId\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"},\"paymentId\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"}},\"required\": [\"addressId\",\"paymentId\",\"deliveryMethodId\"],\"type\": \"object\"}},\"required\": [\"orderDetails\",\"couponData\"],\"type\": \"object\"}}],\"responses\": {\"200\": {\"description\": \"\"}}}},\"\/rest\/products\/1\/reviews\": {\"put\": {\"consumes\": [\"application\/json\"],\"description\": \"Swagger auto-generated from learnt schema\",\"parameters\": [],\"responses\": {\"200\": {\"description\": \"\"}}}},\"\/rest\/user\/login\": {\"post\": {\"consumes\": [\"application\/json\"],\"description\": \"Swagger auto-generated from learnt schema\",\"parameters\": [{\"description\": \"\",\"in\": \"body\",\"name\": \"body\",\"schema\": {\"example\": [\"{\\\"email\\\":\\\"dummy0@dummy.com\\\",\\\"password\\\":\\\"redacted\\\",\\\"test\\\":\\\"Hello, \u4E16\u754C\\\"}\",\"{\\\"email\\\":\\\"dummy1@dummy.com\\\",\\\"password\\\":\\\"redacted\\\",\\\"test\\\":\\\"Hello, \u4E16\u754C\\\"}\",\"{\\\"email\\\":\\\"dummy2@dummy.com\\\",\\\"password\\\":\\\"redacted\\\",\\\"test\\\":\\\"Hello, \u4E16\u754C\\\"}\",\"{\\\"email\\\":\\\"dummy3@dummy.com\\\",\\\"password\\\":\\\"redacted\\\",\\\"test\\\":\\\"Hello, \u4E16\u754C\\\"}\"],\"properties\": {\"email\": {\"description\": \"Email\",\"pattern\": \".+@.+\",\"type\": \"string\",\"x-pii\": {\"examples\": [\"dummy0@dummy.com\",\"dummy1@dummy.com\",\"dummy2@dummy.com\",\"dummy3@dummy.com\"]}},\"password\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"test\": {\"type\": \"string\"}},\"required\": [\"email\",\"test\",\"password\"],\"type\": \"object\"}}],\"responses\": {\"200\": {\"description\": \"\"}}}}},\"schemes\": [\"https\",\"http\"],\"swagger\": \"2.0\"}"
	// Swagger spec json encoded string for current request
	SwaggerSpec string `protobuf:"bytes,1,opt,name=swagger_spec,json=swaggerSpec,proto3" json:"swagger_spec,omitempty"`
}

func (m *SwaggerSpecRsp) Reset()      { *m = SwaggerSpecRsp{} }
func (*SwaggerSpecRsp) ProtoMessage() {}
func (*SwaggerSpecRsp) Descriptor() ([]byte, []int) {
	return fileDescriptorPublicApiepCustomapi, []int{1}
}

func (m *SwaggerSpecRsp) GetSwaggerSpec() string {
	if m != nil {
		return m.SwaggerSpec
	}
	return ""
}

func init() {
	proto.RegisterType((*SwaggerSpecReq)(nil), "ves.io.schema.views.http_loadbalancer.SwaggerSpecReq")
	golang_proto.RegisterType((*SwaggerSpecReq)(nil), "ves.io.schema.views.http_loadbalancer.SwaggerSpecReq")
	proto.RegisterType((*SwaggerSpecRsp)(nil), "ves.io.schema.views.http_loadbalancer.SwaggerSpecRsp")
	golang_proto.RegisterType((*SwaggerSpecRsp)(nil), "ves.io.schema.views.http_loadbalancer.SwaggerSpecRsp")
}
func (this *SwaggerSpecReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SwaggerSpecReq)
	if !ok {
		that2, ok := that.(SwaggerSpecReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	return true
}
func (this *SwaggerSpecRsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SwaggerSpecRsp)
	if !ok {
		that2, ok := that.(SwaggerSpecRsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.SwaggerSpec != that1.SwaggerSpec {
		return false
	}
	return true
}
func (this *SwaggerSpecReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&http_loadbalancer.SwaggerSpecReq{")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SwaggerSpecRsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&http_loadbalancer.SwaggerSpecRsp{")
	s = append(s, "SwaggerSpec: "+fmt.Sprintf("%#v", this.SwaggerSpec)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringPublicApiepCustomapi(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ApiepLBCustomAPI service

type ApiepLBCustomAPIClient interface {
	// Get Swagger Spec for App Type
	//
	// x-displayName: "Get Swagger Spec for Http Loadbalancer"
	// Get the corresponding Swagger spec for the given Http Loadbalancer
	GetSwaggerSpec(ctx context.Context, in *SwaggerSpecReq, opts ...grpc.CallOption) (*SwaggerSpecRsp, error)
}

type apiepLBCustomAPIClient struct {
	cc *grpc.ClientConn
}

func NewApiepLBCustomAPIClient(cc *grpc.ClientConn) ApiepLBCustomAPIClient {
	return &apiepLBCustomAPIClient{cc}
}

func (c *apiepLBCustomAPIClient) GetSwaggerSpec(ctx context.Context, in *SwaggerSpecReq, opts ...grpc.CallOption) (*SwaggerSpecRsp, error) {
	out := new(SwaggerSpecRsp)
	err := grpc.Invoke(ctx, "/ves.io.schema.views.http_loadbalancer.ApiepLBCustomAPI/GetSwaggerSpec", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ApiepLBCustomAPI service

type ApiepLBCustomAPIServer interface {
	// Get Swagger Spec for App Type
	//
	// x-displayName: "Get Swagger Spec for Http Loadbalancer"
	// Get the corresponding Swagger spec for the given Http Loadbalancer
	GetSwaggerSpec(context.Context, *SwaggerSpecReq) (*SwaggerSpecRsp, error)
}

func RegisterApiepLBCustomAPIServer(s *grpc.Server, srv ApiepLBCustomAPIServer) {
	s.RegisterService(&_ApiepLBCustomAPI_serviceDesc, srv)
}

func _ApiepLBCustomAPI_GetSwaggerSpec_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SwaggerSpecReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiepLBCustomAPIServer).GetSwaggerSpec(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.views.http_loadbalancer.ApiepLBCustomAPI/GetSwaggerSpec",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiepLBCustomAPIServer).GetSwaggerSpec(ctx, req.(*SwaggerSpecReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApiepLBCustomAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ves.io.schema.views.http_loadbalancer.ApiepLBCustomAPI",
	HandlerType: (*ApiepLBCustomAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSwaggerSpec",
			Handler:    _ApiepLBCustomAPI_GetSwaggerSpec_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ves.io/schema/views/http_loadbalancer/public_apiep_customapi.proto",
}

func (m *SwaggerSpecReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SwaggerSpecReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.Namespace) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(len(m.Namespace)))
		i += copy(dAtA[i:], m.Namespace)
	}
	return i, nil
}

func (m *SwaggerSpecRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SwaggerSpecRsp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.SwaggerSpec) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(len(m.SwaggerSpec)))
		i += copy(dAtA[i:], m.SwaggerSpec)
	}
	return i, nil
}

func encodeVarintPublicApiepCustomapi(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *SwaggerSpecReq) Size() (n int) {
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	return n
}

func (m *SwaggerSpecRsp) Size() (n int) {
	var l int
	_ = l
	l = len(m.SwaggerSpec)
	if l > 0 {
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	return n
}

func sovPublicApiepCustomapi(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozPublicApiepCustomapi(x uint64) (n int) {
	return sovPublicApiepCustomapi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *SwaggerSpecReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SwaggerSpecReq{`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SwaggerSpecRsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SwaggerSpecRsp{`,
		`SwaggerSpec:` + fmt.Sprintf("%v", this.SwaggerSpec) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringPublicApiepCustomapi(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *SwaggerSpecReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicApiepCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SwaggerSpecReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SwaggerSpecReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicApiepCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SwaggerSpecRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicApiepCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SwaggerSpecRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SwaggerSpecRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SwaggerSpec", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SwaggerSpec = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicApiepCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPublicApiepCustomapi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPublicApiepCustomapi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthPublicApiepCustomapi
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowPublicApiepCustomapi
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipPublicApiepCustomapi(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthPublicApiepCustomapi = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPublicApiepCustomapi   = fmt.Errorf("proto: integer overflow")
)

func init() {
	proto.RegisterFile("ves.io/schema/views/http_loadbalancer/public_apiep_customapi.proto", fileDescriptorPublicApiepCustomapi)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/views/http_loadbalancer/public_apiep_customapi.proto", fileDescriptorPublicApiepCustomapi)
}

var fileDescriptorPublicApiepCustomapi = []byte{
	// 511 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0xb1, 0x6b, 0x14, 0x41,
	0x14, 0xc6, 0x6f, 0x4e, 0x11, 0xb2, 0x4a, 0x08, 0x6b, 0x73, 0x9c, 0x61, 0xd0, 0x03, 0xc1, 0xc2,
	0xdd, 0x11, 0x83, 0x8d, 0x5d, 0xce, 0x42, 0x04, 0x41, 0x49, 0xb0, 0xd1, 0x62, 0x99, 0xdd, 0x7d,
	0x37, 0x37, 0xba, 0x37, 0x6f, 0x9c, 0x99, 0xdd, 0x08, 0x12, 0x90, 0xf4, 0x82, 0xe0, 0x3f, 0xe1,
	0x9f, 0x20, 0xa4, 0x49, 0x97, 0x54, 0x12, 0xb4, 0xb1, 0xf4, 0x36, 0x16, 0x96, 0xa9, 0xac, 0xe5,
	0xe6, 0xd6, 0xe4, 0xee, 0x02, 0x12, 0xac, 0xf6, 0xcd, 0x7c, 0xfb, 0x7e, 0xcc, 0xbc, 0xef, 0x9b,
	0xa0, 0x5f, 0x81, 0x8d, 0x25, 0x32, 0x9b, 0x0d, 0x61, 0xc4, 0x59, 0x25, 0x61, 0xcb, 0xb2, 0xa1,
	0x73, 0x3a, 0x29, 0x90, 0xe7, 0x29, 0x2f, 0xb8, 0xca, 0xc0, 0x30, 0x5d, 0xa6, 0x85, 0xcc, 0x12,
	0xae, 0x25, 0xe8, 0x24, 0x2b, 0xad, 0xc3, 0x11, 0xd7, 0x32, 0xd6, 0x06, 0x1d, 0x86, 0x37, 0xa7,
	0x8c, 0x78, 0xca, 0x88, 0x3d, 0x23, 0x3e, 0xc3, 0xe8, 0x46, 0x42, 0xba, 0x61, 0x99, 0xc6, 0x19,
	0x8e, 0x98, 0x40, 0x81, 0xcc, 0x77, 0xa7, 0xe5, 0xc0, 0xaf, 0xfc, 0xc2, 0x57, 0x53, 0x6a, 0x77,
	0x55, 0x20, 0x8a, 0x02, 0x18, 0xd7, 0x92, 0x71, 0xa5, 0xd0, 0x71, 0x27, 0x51, 0xd9, 0x46, 0xbd,
	0x36, 0x7f, 0x6e, 0xd4, 0xb3, 0xe2, 0xea, 0xc2, 0xa5, 0x78, 0x21, 0x73, 0xee, 0xa0, 0x51, 0x7b,
	0x0b, 0x2a, 0x58, 0x50, 0xd5, 0x02, 0xe1, 0xce, 0xe2, 0x58, 0x8c, 0x2b, 0x79, 0x91, 0x0c, 0xd1,
	0xba, 0x24, 0x57, 0x36, 0x91, 0x6a, 0x80, 0x0c, 0xd3, 0x97, 0x90, 0xb9, 0x69, 0x47, 0xaf, 0x1f,
	0x2c, 0x6f, 0x6e, 0x71, 0x21, 0xc0, 0x6c, 0x6a, 0xc8, 0x36, 0xe0, 0x75, 0x18, 0x06, 0x17, 0x15,
	0x1f, 0x41, 0x87, 0x5c, 0x27, 0xb7, 0x96, 0x36, 0x7c, 0x1d, 0xae, 0x06, 0x4b, 0x93, 0xaf, 0xd5,
	0x3c, 0x83, 0x4e, 0xdb, 0x0b, 0xa7, 0x1b, 0xbd, 0xb5, 0x79, 0x86, 0xd5, 0xe1, 0x8d, 0xe0, 0x8a,
	0x9d, 0xee, 0x24, 0x56, 0x43, 0xd6, 0xb0, 0x2e, 0xdb, 0xd3, 0xbf, 0xee, 0xee, 0xb7, 0x83, 0x95,
	0xf5, 0x89, 0x2f, 0x8f, 0xfb, 0x0f, 0xbc, 0x31, 0xeb, 0x4f, 0x1f, 0x85, 0xbf, 0x49, 0xb0, 0xfc,
	0x10, 0xdc, 0x0c, 0x2d, 0xbc, 0x17, 0x9f, 0xcb, 0xa6, 0x78, 0xfe, 0x16, 0xdd, 0xff, 0x69, 0xb3,
	0xba, 0x57, 0x1d, 0x7c, 0x6e, 0x93, 0x7a, 0xbf, 0x73, 0xb5, 0x02, 0x1b, 0x49, 0x8c, 0x04, 0x28,
	0x30, 0xbc, 0x88, 0x0c, 0xf0, 0x7c, 0xe7, 0xdb, 0xcf, 0x8f, 0xed, 0x67, 0xe1, 0x66, 0x93, 0x2a,
	0x76, 0x32, 0x00, 0xcb, 0xde, 0x9e, 0xd4, 0xdb, 0x67, 0x53, 0xd8, 0xc8, 0xdb, 0x93, 0x48, 0x24,
	0xa0, 0x72, 0x8d, 0x52, 0x39, 0xcb, 0x66, 0x07, 0xd4, 0xbd, 0xbf, 0xb7, 0x4b, 0x2e, 0x7c, 0xdd,
	0x25, 0xb7, 0xcf, 0x77, 0xea, 0x27, 0xde, 0xc2, 0x9d, 0x2f, 0x9d, 0xf6, 0x0a, 0xe9, 0xbf, 0x27,
	0x87, 0x63, 0xda, 0xfa, 0x3e, 0xa6, 0xad, 0xe3, 0x31, 0x25, 0xef, 0x6a, 0x4a, 0x3e, 0xd5, 0x94,
	0x1c, 0xd4, 0x94, 0x1c, 0xd6, 0x94, 0xfc, 0xa8, 0x29, 0xf9, 0x55, 0xd3, 0xd6, 0x71, 0x4d, 0xc9,
	0x87, 0x23, 0xda, 0xda, 0x3b, 0xa2, 0xe4, 0xf9, 0x0b, 0x81, 0xfa, 0x95, 0x88, 0x2b, 0x2c, 0x1c,
	0x18, 0xc3, 0xe3, 0xd2, 0x32, 0x5f, 0x0c, 0xd0, 0x8c, 0x22, 0x6d, 0xb0, 0x92, 0x39, 0x98, 0xe8,
	0xaf, 0xcc, 0x74, 0x2a, 0x90, 0xc1, 0x1b, 0xd7, 0xc4, 0xea, 0xdf, 0x8f, 0x2e, 0xbd, 0xe4, 0x93,
	0xb5, 0xf6, 0x27, 0x00, 0x00, 0xff, 0xff, 0x5c, 0x89, 0x51, 0xee, 0xa4, 0x03, 0x00, 0x00,
}
