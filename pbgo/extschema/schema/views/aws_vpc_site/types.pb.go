// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/views/aws_vpc_site/types.proto

package aws_vpc_site

import proto "github.com/gogo/protobuf/proto"
import golang_proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import google_protobuf1 "github.com/gogo/protobuf/types"
import ves_io_schema_network_firewall "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/network_firewall"
import _ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
import ves_io_schema_site "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/site"
import ves_io_schema4 "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
import _ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
import _ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
import ves_io_schema_views1 "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/views"
import ves_io_schema_views2 "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/views"
import ves_io_schema_views "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/views"

import strings "strings"
import reflect "reflect"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// AWS Ingress Gateway
//
// x-displayName: "AWS Ingress Gateway"
// Single interface AWS ingress site
type AWSVPCIngressGwType struct {
	// Nodes
	//
	// x-displayName: "Ingress Gateway (One Interface) Nodes in AZ"
	// x-required
	// Only Single AZ or Three AZ(s) nodes are supported currently.
	AzNodes []*ves_io_schema_views1.AWSVPCOneInterfaceNodeType `protobuf:"bytes,1,rep,name=az_nodes,json=azNodes" json:"az_nodes,omitempty"`
	// AWS Certified Hardware
	//
	// x-displayName: "AWS Certified Hardware"
	// x-example: "aws-byol-voltmesh"
	// x-required
	// Name for AWS certified hardware.
	AwsCertifiedHw string `protobuf:"bytes,2,opt,name=aws_certified_hw,json=awsCertifiedHw,proto3" json:"aws_certified_hw,omitempty"`
	// Allowed VIP Port Configuration
	//
	// x-displayName: "Allowed VIP Port Configuration"
	// Allowed VIP Port Configuration
	AllowedVipPort *ves_io_schema_views1.AllowedVIPPorts `protobuf:"bytes,3,opt,name=allowed_vip_port,json=allowedVipPort" json:"allowed_vip_port,omitempty"`
}

func (m *AWSVPCIngressGwType) Reset()                    { *m = AWSVPCIngressGwType{} }
func (*AWSVPCIngressGwType) ProtoMessage()               {}
func (*AWSVPCIngressGwType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{0} }

func (m *AWSVPCIngressGwType) GetAzNodes() []*ves_io_schema_views1.AWSVPCOneInterfaceNodeType {
	if m != nil {
		return m.AzNodes
	}
	return nil
}

func (m *AWSVPCIngressGwType) GetAwsCertifiedHw() string {
	if m != nil {
		return m.AwsCertifiedHw
	}
	return ""
}

func (m *AWSVPCIngressGwType) GetAllowedVipPort() *ves_io_schema_views1.AllowedVIPPorts {
	if m != nil {
		return m.AllowedVipPort
	}
	return nil
}

// AWS Ingress Egress Gateway
//
// x-displayName: "AWS Ingress/Egress Gateway"
// Two interface AWS ingress/egress site
type AWSVPCIngressEgressGwType struct {
	// Nodes
	//
	// x-displayName: "Ingress/Egress Gateway (two Interface) Nodes in AZ"
	// Only Single AZ or Three AZ(s) nodes are supported currently.
	AzNodes []*ves_io_schema_views1.AWSVPCTwoInterfaceNodeType `protobuf:"bytes,1,rep,name=az_nodes,json=azNodes" json:"az_nodes,omitempty"`
	// Manage Network Policy
	//
	// x-displayName: "Manage Network Policy"
	// x-required
	// Manage Network Policy via this view
	//
	// Types that are valid to be assigned to NetworkPolicyChoice:
	//	*AWSVPCIngressEgressGwType_NoNetworkPolicy
	//	*AWSVPCIngressEgressGwType_ActiveNetworkPolicies
	NetworkPolicyChoice isAWSVPCIngressEgressGwType_NetworkPolicyChoice `protobuf_oneof:"network_policy_choice"`
	// Manage Forward Proxy
	//
	// x-displayName: "Manage Forward Proxy"
	// x-required
	// Manage Forward Proxy for this site
	//
	// Types that are valid to be assigned to ForwardProxyChoice:
	//	*AWSVPCIngressEgressGwType_NoForwardProxy
	//	*AWSVPCIngressEgressGwType_ActiveForwardProxyPolicies
	//	*AWSVPCIngressEgressGwType_ForwardProxyAllowAll
	ForwardProxyChoice isAWSVPCIngressEgressGwType_ForwardProxyChoice `protobuf_oneof:"forward_proxy_choice"`
	// AWS Certified Hardware
	//
	// x-displayName: "AWS Certified Hardware"
	// x-example: "aws-byol-multi-nic-voltmesh"
	// x-required
	// Name for AWS certified hardware.
	AwsCertifiedHw string `protobuf:"bytes,8,opt,name=aws_certified_hw,json=awsCertifiedHw,proto3" json:"aws_certified_hw,omitempty"`
	// Manage Static Routes for Inside Network
	//
	// x-displayName: "Manage Static Routes for Inside Network"
	// x-required
	// Add static routes to inside network. Used to reach indirectly connected subnets.
	//
	// Types that are valid to be assigned to InsideStaticRouteChoice:
	//	*AWSVPCIngressEgressGwType_NoInsideStaticRoutes
	//	*AWSVPCIngressEgressGwType_InsideStaticRoutes
	InsideStaticRouteChoice isAWSVPCIngressEgressGwType_InsideStaticRouteChoice `protobuf_oneof:"inside_static_route_choice"`
	// Manage Static Routes for Outside Network
	//
	// x-displayName: "Manage Static Routes for Outside Network"
	// x-required
	// Add static routes to outside network. Used to reach indirectly connected subnets.
	//
	// Types that are valid to be assigned to OutsideStaticRouteChoice:
	//	*AWSVPCIngressEgressGwType_NoOutsideStaticRoutes
	//	*AWSVPCIngressEgressGwType_OutsideStaticRoutes
	OutsideStaticRouteChoice isAWSVPCIngressEgressGwType_OutsideStaticRouteChoice `protobuf_oneof:"outside_static_route_choice"`
	// Connect to Global Network
	//
	// x-displayName: "Select Global Networks to Connect"
	// x-required
	// Select global networks to connect to inside or outside network
	//
	// Types that are valid to be assigned to GlobalNetworkChoice:
	//	*AWSVPCIngressEgressGwType_NoGlobalNetwork
	//	*AWSVPCIngressEgressGwType_GlobalNetworkList
	GlobalNetworkChoice isAWSVPCIngressEgressGwType_GlobalNetworkChoice `protobuf_oneof:"global_network_choice"`
	// Allowed VIP Port Configuration for Outside Network
	//
	// x-displayName: "Allowed VIP Port Configuration for Outside Network"
	// Allowed VIP Port Configuration for Outside Network
	AllowedVipPort *ves_io_schema_views1.AllowedVIPPorts `protobuf:"bytes,21,opt,name=allowed_vip_port,json=allowedVipPort" json:"allowed_vip_port,omitempty"`
	// Allowed VIP Port Configuration for Inside Network
	//
	// x-displayName: "Allowed VIP Port Configuration for Inside Network"
	// Allowed VIP Port Configuration for Inside Network
	AllowedVipPortSli *ves_io_schema_views1.AllowedVIPPorts `protobuf:"bytes,22,opt,name=allowed_vip_port_sli,json=allowedVipPortSli" json:"allowed_vip_port_sli,omitempty"`
}

func (m *AWSVPCIngressEgressGwType) Reset()                    { *m = AWSVPCIngressEgressGwType{} }
func (*AWSVPCIngressEgressGwType) ProtoMessage()               {}
func (*AWSVPCIngressEgressGwType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{1} }

type isAWSVPCIngressEgressGwType_NetworkPolicyChoice interface {
	isAWSVPCIngressEgressGwType_NetworkPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isAWSVPCIngressEgressGwType_ForwardProxyChoice interface {
	isAWSVPCIngressEgressGwType_ForwardProxyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isAWSVPCIngressEgressGwType_InsideStaticRouteChoice interface {
	isAWSVPCIngressEgressGwType_InsideStaticRouteChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isAWSVPCIngressEgressGwType_OutsideStaticRouteChoice interface {
	isAWSVPCIngressEgressGwType_OutsideStaticRouteChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isAWSVPCIngressEgressGwType_GlobalNetworkChoice interface {
	isAWSVPCIngressEgressGwType_GlobalNetworkChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type AWSVPCIngressEgressGwType_NoNetworkPolicy struct {
	NoNetworkPolicy *ves_io_schema4.Empty `protobuf:"bytes,2,opt,name=no_network_policy,json=noNetworkPolicy,oneof"`
}
type AWSVPCIngressEgressGwType_ActiveNetworkPolicies struct {
	ActiveNetworkPolicies *ves_io_schema_network_firewall.ActiveNetworkPoliciesType `protobuf:"bytes,10,opt,name=active_network_policies,json=activeNetworkPolicies,oneof"`
}
type AWSVPCIngressEgressGwType_NoForwardProxy struct {
	NoForwardProxy *ves_io_schema4.Empty `protobuf:"bytes,4,opt,name=no_forward_proxy,json=noForwardProxy,oneof"`
}
type AWSVPCIngressEgressGwType_ActiveForwardProxyPolicies struct {
	ActiveForwardProxyPolicies *ves_io_schema_network_firewall.ActiveForwardProxyPoliciesType `protobuf:"bytes,9,opt,name=active_forward_proxy_policies,json=activeForwardProxyPolicies,oneof"`
}
type AWSVPCIngressEgressGwType_ForwardProxyAllowAll struct {
	ForwardProxyAllowAll *ves_io_schema4.Empty `protobuf:"bytes,20,opt,name=forward_proxy_allow_all,json=forwardProxyAllowAll,oneof"`
}
type AWSVPCIngressEgressGwType_NoInsideStaticRoutes struct {
	NoInsideStaticRoutes *ves_io_schema4.Empty `protobuf:"bytes,12,opt,name=no_inside_static_routes,json=noInsideStaticRoutes,oneof"`
}
type AWSVPCIngressEgressGwType_InsideStaticRoutes struct {
	InsideStaticRoutes *ves_io_schema_views1.SiteStaticRoutesListType `protobuf:"bytes,13,opt,name=inside_static_routes,json=insideStaticRoutes,oneof"`
}
type AWSVPCIngressEgressGwType_NoOutsideStaticRoutes struct {
	NoOutsideStaticRoutes *ves_io_schema4.Empty `protobuf:"bytes,15,opt,name=no_outside_static_routes,json=noOutsideStaticRoutes,oneof"`
}
type AWSVPCIngressEgressGwType_OutsideStaticRoutes struct {
	OutsideStaticRoutes *ves_io_schema_views1.SiteStaticRoutesListType `protobuf:"bytes,16,opt,name=outside_static_routes,json=outsideStaticRoutes,oneof"`
}
type AWSVPCIngressEgressGwType_NoGlobalNetwork struct {
	NoGlobalNetwork *ves_io_schema4.Empty `protobuf:"bytes,18,opt,name=no_global_network,json=noGlobalNetwork,oneof"`
}
type AWSVPCIngressEgressGwType_GlobalNetworkList struct {
	GlobalNetworkList *ves_io_schema_views1.GlobalNetworkConnectionListType `protobuf:"bytes,19,opt,name=global_network_list,json=globalNetworkList,oneof"`
}

func (*AWSVPCIngressEgressGwType_NoNetworkPolicy) isAWSVPCIngressEgressGwType_NetworkPolicyChoice() {}
func (*AWSVPCIngressEgressGwType_ActiveNetworkPolicies) isAWSVPCIngressEgressGwType_NetworkPolicyChoice() {
}
func (*AWSVPCIngressEgressGwType_NoForwardProxy) isAWSVPCIngressEgressGwType_ForwardProxyChoice() {}
func (*AWSVPCIngressEgressGwType_ActiveForwardProxyPolicies) isAWSVPCIngressEgressGwType_ForwardProxyChoice() {
}
func (*AWSVPCIngressEgressGwType_ForwardProxyAllowAll) isAWSVPCIngressEgressGwType_ForwardProxyChoice() {
}
func (*AWSVPCIngressEgressGwType_NoInsideStaticRoutes) isAWSVPCIngressEgressGwType_InsideStaticRouteChoice() {
}
func (*AWSVPCIngressEgressGwType_InsideStaticRoutes) isAWSVPCIngressEgressGwType_InsideStaticRouteChoice() {
}
func (*AWSVPCIngressEgressGwType_NoOutsideStaticRoutes) isAWSVPCIngressEgressGwType_OutsideStaticRouteChoice() {
}
func (*AWSVPCIngressEgressGwType_OutsideStaticRoutes) isAWSVPCIngressEgressGwType_OutsideStaticRouteChoice() {
}
func (*AWSVPCIngressEgressGwType_NoGlobalNetwork) isAWSVPCIngressEgressGwType_GlobalNetworkChoice() {}
func (*AWSVPCIngressEgressGwType_GlobalNetworkList) isAWSVPCIngressEgressGwType_GlobalNetworkChoice() {
}

func (m *AWSVPCIngressEgressGwType) GetNetworkPolicyChoice() isAWSVPCIngressEgressGwType_NetworkPolicyChoice {
	if m != nil {
		return m.NetworkPolicyChoice
	}
	return nil
}
func (m *AWSVPCIngressEgressGwType) GetForwardProxyChoice() isAWSVPCIngressEgressGwType_ForwardProxyChoice {
	if m != nil {
		return m.ForwardProxyChoice
	}
	return nil
}
func (m *AWSVPCIngressEgressGwType) GetInsideStaticRouteChoice() isAWSVPCIngressEgressGwType_InsideStaticRouteChoice {
	if m != nil {
		return m.InsideStaticRouteChoice
	}
	return nil
}
func (m *AWSVPCIngressEgressGwType) GetOutsideStaticRouteChoice() isAWSVPCIngressEgressGwType_OutsideStaticRouteChoice {
	if m != nil {
		return m.OutsideStaticRouteChoice
	}
	return nil
}
func (m *AWSVPCIngressEgressGwType) GetGlobalNetworkChoice() isAWSVPCIngressEgressGwType_GlobalNetworkChoice {
	if m != nil {
		return m.GlobalNetworkChoice
	}
	return nil
}

func (m *AWSVPCIngressEgressGwType) GetAzNodes() []*ves_io_schema_views1.AWSVPCTwoInterfaceNodeType {
	if m != nil {
		return m.AzNodes
	}
	return nil
}

func (m *AWSVPCIngressEgressGwType) GetNoNetworkPolicy() *ves_io_schema4.Empty {
	if x, ok := m.GetNetworkPolicyChoice().(*AWSVPCIngressEgressGwType_NoNetworkPolicy); ok {
		return x.NoNetworkPolicy
	}
	return nil
}

func (m *AWSVPCIngressEgressGwType) GetActiveNetworkPolicies() *ves_io_schema_network_firewall.ActiveNetworkPoliciesType {
	if x, ok := m.GetNetworkPolicyChoice().(*AWSVPCIngressEgressGwType_ActiveNetworkPolicies); ok {
		return x.ActiveNetworkPolicies
	}
	return nil
}

func (m *AWSVPCIngressEgressGwType) GetNoForwardProxy() *ves_io_schema4.Empty {
	if x, ok := m.GetForwardProxyChoice().(*AWSVPCIngressEgressGwType_NoForwardProxy); ok {
		return x.NoForwardProxy
	}
	return nil
}

func (m *AWSVPCIngressEgressGwType) GetActiveForwardProxyPolicies() *ves_io_schema_network_firewall.ActiveForwardProxyPoliciesType {
	if x, ok := m.GetForwardProxyChoice().(*AWSVPCIngressEgressGwType_ActiveForwardProxyPolicies); ok {
		return x.ActiveForwardProxyPolicies
	}
	return nil
}

func (m *AWSVPCIngressEgressGwType) GetForwardProxyAllowAll() *ves_io_schema4.Empty {
	if x, ok := m.GetForwardProxyChoice().(*AWSVPCIngressEgressGwType_ForwardProxyAllowAll); ok {
		return x.ForwardProxyAllowAll
	}
	return nil
}

func (m *AWSVPCIngressEgressGwType) GetAwsCertifiedHw() string {
	if m != nil {
		return m.AwsCertifiedHw
	}
	return ""
}

func (m *AWSVPCIngressEgressGwType) GetNoInsideStaticRoutes() *ves_io_schema4.Empty {
	if x, ok := m.GetInsideStaticRouteChoice().(*AWSVPCIngressEgressGwType_NoInsideStaticRoutes); ok {
		return x.NoInsideStaticRoutes
	}
	return nil
}

func (m *AWSVPCIngressEgressGwType) GetInsideStaticRoutes() *ves_io_schema_views1.SiteStaticRoutesListType {
	if x, ok := m.GetInsideStaticRouteChoice().(*AWSVPCIngressEgressGwType_InsideStaticRoutes); ok {
		return x.InsideStaticRoutes
	}
	return nil
}

func (m *AWSVPCIngressEgressGwType) GetNoOutsideStaticRoutes() *ves_io_schema4.Empty {
	if x, ok := m.GetOutsideStaticRouteChoice().(*AWSVPCIngressEgressGwType_NoOutsideStaticRoutes); ok {
		return x.NoOutsideStaticRoutes
	}
	return nil
}

func (m *AWSVPCIngressEgressGwType) GetOutsideStaticRoutes() *ves_io_schema_views1.SiteStaticRoutesListType {
	if x, ok := m.GetOutsideStaticRouteChoice().(*AWSVPCIngressEgressGwType_OutsideStaticRoutes); ok {
		return x.OutsideStaticRoutes
	}
	return nil
}

func (m *AWSVPCIngressEgressGwType) GetNoGlobalNetwork() *ves_io_schema4.Empty {
	if x, ok := m.GetGlobalNetworkChoice().(*AWSVPCIngressEgressGwType_NoGlobalNetwork); ok {
		return x.NoGlobalNetwork
	}
	return nil
}

func (m *AWSVPCIngressEgressGwType) GetGlobalNetworkList() *ves_io_schema_views1.GlobalNetworkConnectionListType {
	if x, ok := m.GetGlobalNetworkChoice().(*AWSVPCIngressEgressGwType_GlobalNetworkList); ok {
		return x.GlobalNetworkList
	}
	return nil
}

func (m *AWSVPCIngressEgressGwType) GetAllowedVipPort() *ves_io_schema_views1.AllowedVIPPorts {
	if m != nil {
		return m.AllowedVipPort
	}
	return nil
}

func (m *AWSVPCIngressEgressGwType) GetAllowedVipPortSli() *ves_io_schema_views1.AllowedVIPPorts {
	if m != nil {
		return m.AllowedVipPortSli
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*AWSVPCIngressEgressGwType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _AWSVPCIngressEgressGwType_OneofMarshaler, _AWSVPCIngressEgressGwType_OneofUnmarshaler, _AWSVPCIngressEgressGwType_OneofSizer, []interface{}{
		(*AWSVPCIngressEgressGwType_NoNetworkPolicy)(nil),
		(*AWSVPCIngressEgressGwType_ActiveNetworkPolicies)(nil),
		(*AWSVPCIngressEgressGwType_NoForwardProxy)(nil),
		(*AWSVPCIngressEgressGwType_ActiveForwardProxyPolicies)(nil),
		(*AWSVPCIngressEgressGwType_ForwardProxyAllowAll)(nil),
		(*AWSVPCIngressEgressGwType_NoInsideStaticRoutes)(nil),
		(*AWSVPCIngressEgressGwType_InsideStaticRoutes)(nil),
		(*AWSVPCIngressEgressGwType_NoOutsideStaticRoutes)(nil),
		(*AWSVPCIngressEgressGwType_OutsideStaticRoutes)(nil),
		(*AWSVPCIngressEgressGwType_NoGlobalNetwork)(nil),
		(*AWSVPCIngressEgressGwType_GlobalNetworkList)(nil),
	}
}

func _AWSVPCIngressEgressGwType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*AWSVPCIngressEgressGwType)
	// network_policy_choice
	switch x := m.NetworkPolicyChoice.(type) {
	case *AWSVPCIngressEgressGwType_NoNetworkPolicy:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoNetworkPolicy); err != nil {
			return err
		}
	case *AWSVPCIngressEgressGwType_ActiveNetworkPolicies:
		_ = b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActiveNetworkPolicies); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AWSVPCIngressEgressGwType.NetworkPolicyChoice has unexpected type %T", x)
	}
	// forward_proxy_choice
	switch x := m.ForwardProxyChoice.(type) {
	case *AWSVPCIngressEgressGwType_NoForwardProxy:
		_ = b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoForwardProxy); err != nil {
			return err
		}
	case *AWSVPCIngressEgressGwType_ActiveForwardProxyPolicies:
		_ = b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActiveForwardProxyPolicies); err != nil {
			return err
		}
	case *AWSVPCIngressEgressGwType_ForwardProxyAllowAll:
		_ = b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ForwardProxyAllowAll); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AWSVPCIngressEgressGwType.ForwardProxyChoice has unexpected type %T", x)
	}
	// inside_static_route_choice
	switch x := m.InsideStaticRouteChoice.(type) {
	case *AWSVPCIngressEgressGwType_NoInsideStaticRoutes:
		_ = b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoInsideStaticRoutes); err != nil {
			return err
		}
	case *AWSVPCIngressEgressGwType_InsideStaticRoutes:
		_ = b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InsideStaticRoutes); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AWSVPCIngressEgressGwType.InsideStaticRouteChoice has unexpected type %T", x)
	}
	// outside_static_route_choice
	switch x := m.OutsideStaticRouteChoice.(type) {
	case *AWSVPCIngressEgressGwType_NoOutsideStaticRoutes:
		_ = b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoOutsideStaticRoutes); err != nil {
			return err
		}
	case *AWSVPCIngressEgressGwType_OutsideStaticRoutes:
		_ = b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OutsideStaticRoutes); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AWSVPCIngressEgressGwType.OutsideStaticRouteChoice has unexpected type %T", x)
	}
	// global_network_choice
	switch x := m.GlobalNetworkChoice.(type) {
	case *AWSVPCIngressEgressGwType_NoGlobalNetwork:
		_ = b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoGlobalNetwork); err != nil {
			return err
		}
	case *AWSVPCIngressEgressGwType_GlobalNetworkList:
		_ = b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GlobalNetworkList); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AWSVPCIngressEgressGwType.GlobalNetworkChoice has unexpected type %T", x)
	}
	return nil
}

func _AWSVPCIngressEgressGwType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*AWSVPCIngressEgressGwType)
	switch tag {
	case 2: // network_policy_choice.no_network_policy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.NetworkPolicyChoice = &AWSVPCIngressEgressGwType_NoNetworkPolicy{msg}
		return true, err
	case 10: // network_policy_choice.active_network_policies
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_network_firewall.ActiveNetworkPoliciesType)
		err := b.DecodeMessage(msg)
		m.NetworkPolicyChoice = &AWSVPCIngressEgressGwType_ActiveNetworkPolicies{msg}
		return true, err
	case 4: // forward_proxy_choice.no_forward_proxy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.ForwardProxyChoice = &AWSVPCIngressEgressGwType_NoForwardProxy{msg}
		return true, err
	case 9: // forward_proxy_choice.active_forward_proxy_policies
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_network_firewall.ActiveForwardProxyPoliciesType)
		err := b.DecodeMessage(msg)
		m.ForwardProxyChoice = &AWSVPCIngressEgressGwType_ActiveForwardProxyPolicies{msg}
		return true, err
	case 20: // forward_proxy_choice.forward_proxy_allow_all
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.ForwardProxyChoice = &AWSVPCIngressEgressGwType_ForwardProxyAllowAll{msg}
		return true, err
	case 12: // inside_static_route_choice.no_inside_static_routes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.InsideStaticRouteChoice = &AWSVPCIngressEgressGwType_NoInsideStaticRoutes{msg}
		return true, err
	case 13: // inside_static_route_choice.inside_static_routes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views1.SiteStaticRoutesListType)
		err := b.DecodeMessage(msg)
		m.InsideStaticRouteChoice = &AWSVPCIngressEgressGwType_InsideStaticRoutes{msg}
		return true, err
	case 15: // outside_static_route_choice.no_outside_static_routes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.OutsideStaticRouteChoice = &AWSVPCIngressEgressGwType_NoOutsideStaticRoutes{msg}
		return true, err
	case 16: // outside_static_route_choice.outside_static_routes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views1.SiteStaticRoutesListType)
		err := b.DecodeMessage(msg)
		m.OutsideStaticRouteChoice = &AWSVPCIngressEgressGwType_OutsideStaticRoutes{msg}
		return true, err
	case 18: // global_network_choice.no_global_network
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.GlobalNetworkChoice = &AWSVPCIngressEgressGwType_NoGlobalNetwork{msg}
		return true, err
	case 19: // global_network_choice.global_network_list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views1.GlobalNetworkConnectionListType)
		err := b.DecodeMessage(msg)
		m.GlobalNetworkChoice = &AWSVPCIngressEgressGwType_GlobalNetworkList{msg}
		return true, err
	default:
		return false, nil
	}
}

func _AWSVPCIngressEgressGwType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*AWSVPCIngressEgressGwType)
	// network_policy_choice
	switch x := m.NetworkPolicyChoice.(type) {
	case *AWSVPCIngressEgressGwType_NoNetworkPolicy:
		s := proto.Size(x.NoNetworkPolicy)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCIngressEgressGwType_ActiveNetworkPolicies:
		s := proto.Size(x.ActiveNetworkPolicies)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// forward_proxy_choice
	switch x := m.ForwardProxyChoice.(type) {
	case *AWSVPCIngressEgressGwType_NoForwardProxy:
		s := proto.Size(x.NoForwardProxy)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCIngressEgressGwType_ActiveForwardProxyPolicies:
		s := proto.Size(x.ActiveForwardProxyPolicies)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCIngressEgressGwType_ForwardProxyAllowAll:
		s := proto.Size(x.ForwardProxyAllowAll)
		n += proto.SizeVarint(20<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// inside_static_route_choice
	switch x := m.InsideStaticRouteChoice.(type) {
	case *AWSVPCIngressEgressGwType_NoInsideStaticRoutes:
		s := proto.Size(x.NoInsideStaticRoutes)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCIngressEgressGwType_InsideStaticRoutes:
		s := proto.Size(x.InsideStaticRoutes)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// outside_static_route_choice
	switch x := m.OutsideStaticRouteChoice.(type) {
	case *AWSVPCIngressEgressGwType_NoOutsideStaticRoutes:
		s := proto.Size(x.NoOutsideStaticRoutes)
		n += proto.SizeVarint(15<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCIngressEgressGwType_OutsideStaticRoutes:
		s := proto.Size(x.OutsideStaticRoutes)
		n += proto.SizeVarint(16<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// global_network_choice
	switch x := m.GlobalNetworkChoice.(type) {
	case *AWSVPCIngressEgressGwType_NoGlobalNetwork:
		s := proto.Size(x.NoGlobalNetwork)
		n += proto.SizeVarint(18<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCIngressEgressGwType_GlobalNetworkList:
		s := proto.Size(x.GlobalNetworkList)
		n += proto.SizeVarint(19<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// AWS Voltstack Cluster
//
// x-displayName: "AWS  Voltstack Cluster"
// Voltstack cluster of single interface AWS nodes
type AWSVPCVoltstackClusterType struct {
	// AWS Certified Hardware
	//
	// x-displayName: "AWS Certified Hardware"
	// x-example: "aws-byol-multi-nic-voltmesh"
	// x-required
	// Name for AWS certified hardware.
	AwsCertifiedHw string `protobuf:"bytes,1,opt,name=aws_certified_hw,json=awsCertifiedHw,proto3" json:"aws_certified_hw,omitempty"`
	// Nodes
	//
	// x-displayName: "VoltStack Cluster (One Interface) Nodes in AZ"
	// Only Single AZ or Three AZ(s) nodes are supported currently.
	AzNodes []*ves_io_schema_views1.AWSVPCOneInterfaceNodeType `protobuf:"bytes,2,rep,name=az_nodes,json=azNodes" json:"az_nodes,omitempty"`
	// Manage Network Policy
	//
	// x-displayName: "Manage Network Policy"
	// x-required
	// Manage Network Policy via this view
	//
	// Types that are valid to be assigned to NetworkPolicyChoice:
	//	*AWSVPCVoltstackClusterType_NoNetworkPolicy
	//	*AWSVPCVoltstackClusterType_ActiveNetworkPolicies
	NetworkPolicyChoice isAWSVPCVoltstackClusterType_NetworkPolicyChoice `protobuf_oneof:"network_policy_choice"`
	// Manage Forward Proxy
	//
	// x-displayName: "Manage Forward Proxy"
	// x-required
	// Manage Forward Proxy for this site
	//
	// Types that are valid to be assigned to ForwardProxyChoice:
	//	*AWSVPCVoltstackClusterType_NoForwardProxy
	//	*AWSVPCVoltstackClusterType_ActiveForwardProxyPolicies
	//	*AWSVPCVoltstackClusterType_ForwardProxyAllowAll
	ForwardProxyChoice isAWSVPCVoltstackClusterType_ForwardProxyChoice `protobuf_oneof:"forward_proxy_choice"`
	// Manage Static Routes for Site Local Network
	//
	// x-displayName: "Manage Static Routes for Site Local Network"
	// x-required
	// Add static routes to site local network. Used to reach indirectly connected subnets.
	//
	// Types that are valid to be assigned to OutsideStaticRouteChoice:
	//	*AWSVPCVoltstackClusterType_NoOutsideStaticRoutes
	//	*AWSVPCVoltstackClusterType_OutsideStaticRoutes
	OutsideStaticRouteChoice isAWSVPCVoltstackClusterType_OutsideStaticRouteChoice `protobuf_oneof:"outside_static_route_choice"`
	// Connect to Global Network
	//
	// x-displayName: "Select Global Networks to Connect"
	// x-required
	// Select global networks to connect to site local network.
	//
	// Types that are valid to be assigned to GlobalNetworkChoice:
	//	*AWSVPCVoltstackClusterType_NoGlobalNetwork
	//	*AWSVPCVoltstackClusterType_GlobalNetworkList
	GlobalNetworkChoice isAWSVPCVoltstackClusterType_GlobalNetworkChoice `protobuf_oneof:"global_network_choice"`
	// Storage Class Configuration
	//
	// x-displayName: "Select Configuration for Storage Classes"
	// x-required
	// Configure custom storage classes in kubernetes for this site
	//
	// Types that are valid to be assigned to StorageClassChoice:
	//	*AWSVPCVoltstackClusterType_DefaultStorage
	//	*AWSVPCVoltstackClusterType_StorageClassList
	StorageClassChoice isAWSVPCVoltstackClusterType_StorageClassChoice `protobuf_oneof:"storage_class_choice"`
	// Allowed VIP Port Configuration
	//
	// x-displayName: "Allowed VIP Port Configuration"
	// Allowed VIP Port Configuration
	AllowedVipPort *ves_io_schema_views1.AllowedVIPPorts `protobuf:"bytes,22,opt,name=allowed_vip_port,json=allowedVipPort" json:"allowed_vip_port,omitempty"`
	// Site Local K8s API access
	//
	// x-displayName: "Site Local K8s API access"
	// x-required
	// Enable/Disable choice for site local K8s API access
	//
	// Types that are valid to be assigned to K8SClusterChoice:
	//	*AWSVPCVoltstackClusterType_NoK8SCluster
	//	*AWSVPCVoltstackClusterType_K8SCluster
	K8SClusterChoice isAWSVPCVoltstackClusterType_K8SClusterChoice `protobuf_oneof:"k8s_cluster_choice"`
}

func (m *AWSVPCVoltstackClusterType) Reset()                    { *m = AWSVPCVoltstackClusterType{} }
func (*AWSVPCVoltstackClusterType) ProtoMessage()               {}
func (*AWSVPCVoltstackClusterType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{2} }

type isAWSVPCVoltstackClusterType_NetworkPolicyChoice interface {
	isAWSVPCVoltstackClusterType_NetworkPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isAWSVPCVoltstackClusterType_ForwardProxyChoice interface {
	isAWSVPCVoltstackClusterType_ForwardProxyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isAWSVPCVoltstackClusterType_OutsideStaticRouteChoice interface {
	isAWSVPCVoltstackClusterType_OutsideStaticRouteChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isAWSVPCVoltstackClusterType_GlobalNetworkChoice interface {
	isAWSVPCVoltstackClusterType_GlobalNetworkChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isAWSVPCVoltstackClusterType_StorageClassChoice interface {
	isAWSVPCVoltstackClusterType_StorageClassChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isAWSVPCVoltstackClusterType_K8SClusterChoice interface {
	isAWSVPCVoltstackClusterType_K8SClusterChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type AWSVPCVoltstackClusterType_NoNetworkPolicy struct {
	NoNetworkPolicy *ves_io_schema4.Empty `protobuf:"bytes,4,opt,name=no_network_policy,json=noNetworkPolicy,oneof"`
}
type AWSVPCVoltstackClusterType_ActiveNetworkPolicies struct {
	ActiveNetworkPolicies *ves_io_schema_network_firewall.ActiveNetworkPoliciesType `protobuf:"bytes,5,opt,name=active_network_policies,json=activeNetworkPolicies,oneof"`
}
type AWSVPCVoltstackClusterType_NoForwardProxy struct {
	NoForwardProxy *ves_io_schema4.Empty `protobuf:"bytes,7,opt,name=no_forward_proxy,json=noForwardProxy,oneof"`
}
type AWSVPCVoltstackClusterType_ActiveForwardProxyPolicies struct {
	ActiveForwardProxyPolicies *ves_io_schema_network_firewall.ActiveForwardProxyPoliciesType `protobuf:"bytes,8,opt,name=active_forward_proxy_policies,json=activeForwardProxyPolicies,oneof"`
}
type AWSVPCVoltstackClusterType_ForwardProxyAllowAll struct {
	ForwardProxyAllowAll *ves_io_schema4.Empty `protobuf:"bytes,15,opt,name=forward_proxy_allow_all,json=forwardProxyAllowAll,oneof"`
}
type AWSVPCVoltstackClusterType_NoOutsideStaticRoutes struct {
	NoOutsideStaticRoutes *ves_io_schema4.Empty `protobuf:"bytes,10,opt,name=no_outside_static_routes,json=noOutsideStaticRoutes,oneof"`
}
type AWSVPCVoltstackClusterType_OutsideStaticRoutes struct {
	OutsideStaticRoutes *ves_io_schema_views1.SiteStaticRoutesListType `protobuf:"bytes,11,opt,name=outside_static_routes,json=outsideStaticRoutes,oneof"`
}
type AWSVPCVoltstackClusterType_NoGlobalNetwork struct {
	NoGlobalNetwork *ves_io_schema4.Empty `protobuf:"bytes,13,opt,name=no_global_network,json=noGlobalNetwork,oneof"`
}
type AWSVPCVoltstackClusterType_GlobalNetworkList struct {
	GlobalNetworkList *ves_io_schema_views1.GlobalNetworkConnectionListType `protobuf:"bytes,14,opt,name=global_network_list,json=globalNetworkList,oneof"`
}
type AWSVPCVoltstackClusterType_DefaultStorage struct {
	DefaultStorage *ves_io_schema4.Empty `protobuf:"bytes,20,opt,name=default_storage,json=defaultStorage,oneof"`
}
type AWSVPCVoltstackClusterType_StorageClassList struct {
	StorageClassList *ves_io_schema_views2.StorageClassListType `protobuf:"bytes,21,opt,name=storage_class_list,json=storageClassList,oneof"`
}
type AWSVPCVoltstackClusterType_NoK8SCluster struct {
	NoK8SCluster *ves_io_schema4.Empty `protobuf:"bytes,26,opt,name=no_k8s_cluster,json=noK8sCluster,oneof"`
}
type AWSVPCVoltstackClusterType_K8SCluster struct {
	K8SCluster *ves_io_schema_views.ObjectRefType `protobuf:"bytes,27,opt,name=k8s_cluster,json=k8sCluster,oneof"`
}

func (*AWSVPCVoltstackClusterType_NoNetworkPolicy) isAWSVPCVoltstackClusterType_NetworkPolicyChoice() {
}
func (*AWSVPCVoltstackClusterType_ActiveNetworkPolicies) isAWSVPCVoltstackClusterType_NetworkPolicyChoice() {
}
func (*AWSVPCVoltstackClusterType_NoForwardProxy) isAWSVPCVoltstackClusterType_ForwardProxyChoice() {}
func (*AWSVPCVoltstackClusterType_ActiveForwardProxyPolicies) isAWSVPCVoltstackClusterType_ForwardProxyChoice() {
}
func (*AWSVPCVoltstackClusterType_ForwardProxyAllowAll) isAWSVPCVoltstackClusterType_ForwardProxyChoice() {
}
func (*AWSVPCVoltstackClusterType_NoOutsideStaticRoutes) isAWSVPCVoltstackClusterType_OutsideStaticRouteChoice() {
}
func (*AWSVPCVoltstackClusterType_OutsideStaticRoutes) isAWSVPCVoltstackClusterType_OutsideStaticRouteChoice() {
}
func (*AWSVPCVoltstackClusterType_NoGlobalNetwork) isAWSVPCVoltstackClusterType_GlobalNetworkChoice() {
}
func (*AWSVPCVoltstackClusterType_GlobalNetworkList) isAWSVPCVoltstackClusterType_GlobalNetworkChoice() {
}
func (*AWSVPCVoltstackClusterType_DefaultStorage) isAWSVPCVoltstackClusterType_StorageClassChoice() {}
func (*AWSVPCVoltstackClusterType_StorageClassList) isAWSVPCVoltstackClusterType_StorageClassChoice() {
}
func (*AWSVPCVoltstackClusterType_NoK8SCluster) isAWSVPCVoltstackClusterType_K8SClusterChoice() {}
func (*AWSVPCVoltstackClusterType_K8SCluster) isAWSVPCVoltstackClusterType_K8SClusterChoice()   {}

func (m *AWSVPCVoltstackClusterType) GetNetworkPolicyChoice() isAWSVPCVoltstackClusterType_NetworkPolicyChoice {
	if m != nil {
		return m.NetworkPolicyChoice
	}
	return nil
}
func (m *AWSVPCVoltstackClusterType) GetForwardProxyChoice() isAWSVPCVoltstackClusterType_ForwardProxyChoice {
	if m != nil {
		return m.ForwardProxyChoice
	}
	return nil
}
func (m *AWSVPCVoltstackClusterType) GetOutsideStaticRouteChoice() isAWSVPCVoltstackClusterType_OutsideStaticRouteChoice {
	if m != nil {
		return m.OutsideStaticRouteChoice
	}
	return nil
}
func (m *AWSVPCVoltstackClusterType) GetGlobalNetworkChoice() isAWSVPCVoltstackClusterType_GlobalNetworkChoice {
	if m != nil {
		return m.GlobalNetworkChoice
	}
	return nil
}
func (m *AWSVPCVoltstackClusterType) GetStorageClassChoice() isAWSVPCVoltstackClusterType_StorageClassChoice {
	if m != nil {
		return m.StorageClassChoice
	}
	return nil
}
func (m *AWSVPCVoltstackClusterType) GetK8SClusterChoice() isAWSVPCVoltstackClusterType_K8SClusterChoice {
	if m != nil {
		return m.K8SClusterChoice
	}
	return nil
}

func (m *AWSVPCVoltstackClusterType) GetAwsCertifiedHw() string {
	if m != nil {
		return m.AwsCertifiedHw
	}
	return ""
}

func (m *AWSVPCVoltstackClusterType) GetAzNodes() []*ves_io_schema_views1.AWSVPCOneInterfaceNodeType {
	if m != nil {
		return m.AzNodes
	}
	return nil
}

func (m *AWSVPCVoltstackClusterType) GetNoNetworkPolicy() *ves_io_schema4.Empty {
	if x, ok := m.GetNetworkPolicyChoice().(*AWSVPCVoltstackClusterType_NoNetworkPolicy); ok {
		return x.NoNetworkPolicy
	}
	return nil
}

func (m *AWSVPCVoltstackClusterType) GetActiveNetworkPolicies() *ves_io_schema_network_firewall.ActiveNetworkPoliciesType {
	if x, ok := m.GetNetworkPolicyChoice().(*AWSVPCVoltstackClusterType_ActiveNetworkPolicies); ok {
		return x.ActiveNetworkPolicies
	}
	return nil
}

func (m *AWSVPCVoltstackClusterType) GetNoForwardProxy() *ves_io_schema4.Empty {
	if x, ok := m.GetForwardProxyChoice().(*AWSVPCVoltstackClusterType_NoForwardProxy); ok {
		return x.NoForwardProxy
	}
	return nil
}

func (m *AWSVPCVoltstackClusterType) GetActiveForwardProxyPolicies() *ves_io_schema_network_firewall.ActiveForwardProxyPoliciesType {
	if x, ok := m.GetForwardProxyChoice().(*AWSVPCVoltstackClusterType_ActiveForwardProxyPolicies); ok {
		return x.ActiveForwardProxyPolicies
	}
	return nil
}

func (m *AWSVPCVoltstackClusterType) GetForwardProxyAllowAll() *ves_io_schema4.Empty {
	if x, ok := m.GetForwardProxyChoice().(*AWSVPCVoltstackClusterType_ForwardProxyAllowAll); ok {
		return x.ForwardProxyAllowAll
	}
	return nil
}

func (m *AWSVPCVoltstackClusterType) GetNoOutsideStaticRoutes() *ves_io_schema4.Empty {
	if x, ok := m.GetOutsideStaticRouteChoice().(*AWSVPCVoltstackClusterType_NoOutsideStaticRoutes); ok {
		return x.NoOutsideStaticRoutes
	}
	return nil
}

func (m *AWSVPCVoltstackClusterType) GetOutsideStaticRoutes() *ves_io_schema_views1.SiteStaticRoutesListType {
	if x, ok := m.GetOutsideStaticRouteChoice().(*AWSVPCVoltstackClusterType_OutsideStaticRoutes); ok {
		return x.OutsideStaticRoutes
	}
	return nil
}

func (m *AWSVPCVoltstackClusterType) GetNoGlobalNetwork() *ves_io_schema4.Empty {
	if x, ok := m.GetGlobalNetworkChoice().(*AWSVPCVoltstackClusterType_NoGlobalNetwork); ok {
		return x.NoGlobalNetwork
	}
	return nil
}

func (m *AWSVPCVoltstackClusterType) GetGlobalNetworkList() *ves_io_schema_views1.GlobalNetworkConnectionListType {
	if x, ok := m.GetGlobalNetworkChoice().(*AWSVPCVoltstackClusterType_GlobalNetworkList); ok {
		return x.GlobalNetworkList
	}
	return nil
}

func (m *AWSVPCVoltstackClusterType) GetDefaultStorage() *ves_io_schema4.Empty {
	if x, ok := m.GetStorageClassChoice().(*AWSVPCVoltstackClusterType_DefaultStorage); ok {
		return x.DefaultStorage
	}
	return nil
}

func (m *AWSVPCVoltstackClusterType) GetStorageClassList() *ves_io_schema_views2.StorageClassListType {
	if x, ok := m.GetStorageClassChoice().(*AWSVPCVoltstackClusterType_StorageClassList); ok {
		return x.StorageClassList
	}
	return nil
}

func (m *AWSVPCVoltstackClusterType) GetAllowedVipPort() *ves_io_schema_views1.AllowedVIPPorts {
	if m != nil {
		return m.AllowedVipPort
	}
	return nil
}

func (m *AWSVPCVoltstackClusterType) GetNoK8SCluster() *ves_io_schema4.Empty {
	if x, ok := m.GetK8SClusterChoice().(*AWSVPCVoltstackClusterType_NoK8SCluster); ok {
		return x.NoK8SCluster
	}
	return nil
}

func (m *AWSVPCVoltstackClusterType) GetK8SCluster() *ves_io_schema_views.ObjectRefType {
	if x, ok := m.GetK8SClusterChoice().(*AWSVPCVoltstackClusterType_K8SCluster); ok {
		return x.K8SCluster
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*AWSVPCVoltstackClusterType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _AWSVPCVoltstackClusterType_OneofMarshaler, _AWSVPCVoltstackClusterType_OneofUnmarshaler, _AWSVPCVoltstackClusterType_OneofSizer, []interface{}{
		(*AWSVPCVoltstackClusterType_NoNetworkPolicy)(nil),
		(*AWSVPCVoltstackClusterType_ActiveNetworkPolicies)(nil),
		(*AWSVPCVoltstackClusterType_NoForwardProxy)(nil),
		(*AWSVPCVoltstackClusterType_ActiveForwardProxyPolicies)(nil),
		(*AWSVPCVoltstackClusterType_ForwardProxyAllowAll)(nil),
		(*AWSVPCVoltstackClusterType_NoOutsideStaticRoutes)(nil),
		(*AWSVPCVoltstackClusterType_OutsideStaticRoutes)(nil),
		(*AWSVPCVoltstackClusterType_NoGlobalNetwork)(nil),
		(*AWSVPCVoltstackClusterType_GlobalNetworkList)(nil),
		(*AWSVPCVoltstackClusterType_DefaultStorage)(nil),
		(*AWSVPCVoltstackClusterType_StorageClassList)(nil),
		(*AWSVPCVoltstackClusterType_NoK8SCluster)(nil),
		(*AWSVPCVoltstackClusterType_K8SCluster)(nil),
	}
}

func _AWSVPCVoltstackClusterType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*AWSVPCVoltstackClusterType)
	// network_policy_choice
	switch x := m.NetworkPolicyChoice.(type) {
	case *AWSVPCVoltstackClusterType_NoNetworkPolicy:
		_ = b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoNetworkPolicy); err != nil {
			return err
		}
	case *AWSVPCVoltstackClusterType_ActiveNetworkPolicies:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActiveNetworkPolicies); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AWSVPCVoltstackClusterType.NetworkPolicyChoice has unexpected type %T", x)
	}
	// forward_proxy_choice
	switch x := m.ForwardProxyChoice.(type) {
	case *AWSVPCVoltstackClusterType_NoForwardProxy:
		_ = b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoForwardProxy); err != nil {
			return err
		}
	case *AWSVPCVoltstackClusterType_ActiveForwardProxyPolicies:
		_ = b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActiveForwardProxyPolicies); err != nil {
			return err
		}
	case *AWSVPCVoltstackClusterType_ForwardProxyAllowAll:
		_ = b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ForwardProxyAllowAll); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AWSVPCVoltstackClusterType.ForwardProxyChoice has unexpected type %T", x)
	}
	// outside_static_route_choice
	switch x := m.OutsideStaticRouteChoice.(type) {
	case *AWSVPCVoltstackClusterType_NoOutsideStaticRoutes:
		_ = b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoOutsideStaticRoutes); err != nil {
			return err
		}
	case *AWSVPCVoltstackClusterType_OutsideStaticRoutes:
		_ = b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OutsideStaticRoutes); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AWSVPCVoltstackClusterType.OutsideStaticRouteChoice has unexpected type %T", x)
	}
	// global_network_choice
	switch x := m.GlobalNetworkChoice.(type) {
	case *AWSVPCVoltstackClusterType_NoGlobalNetwork:
		_ = b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoGlobalNetwork); err != nil {
			return err
		}
	case *AWSVPCVoltstackClusterType_GlobalNetworkList:
		_ = b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GlobalNetworkList); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AWSVPCVoltstackClusterType.GlobalNetworkChoice has unexpected type %T", x)
	}
	// storage_class_choice
	switch x := m.StorageClassChoice.(type) {
	case *AWSVPCVoltstackClusterType_DefaultStorage:
		_ = b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DefaultStorage); err != nil {
			return err
		}
	case *AWSVPCVoltstackClusterType_StorageClassList:
		_ = b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StorageClassList); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AWSVPCVoltstackClusterType.StorageClassChoice has unexpected type %T", x)
	}
	// k8s_cluster_choice
	switch x := m.K8SClusterChoice.(type) {
	case *AWSVPCVoltstackClusterType_NoK8SCluster:
		_ = b.EncodeVarint(26<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoK8SCluster); err != nil {
			return err
		}
	case *AWSVPCVoltstackClusterType_K8SCluster:
		_ = b.EncodeVarint(27<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.K8SCluster); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AWSVPCVoltstackClusterType.K8SClusterChoice has unexpected type %T", x)
	}
	return nil
}

func _AWSVPCVoltstackClusterType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*AWSVPCVoltstackClusterType)
	switch tag {
	case 4: // network_policy_choice.no_network_policy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.NetworkPolicyChoice = &AWSVPCVoltstackClusterType_NoNetworkPolicy{msg}
		return true, err
	case 5: // network_policy_choice.active_network_policies
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_network_firewall.ActiveNetworkPoliciesType)
		err := b.DecodeMessage(msg)
		m.NetworkPolicyChoice = &AWSVPCVoltstackClusterType_ActiveNetworkPolicies{msg}
		return true, err
	case 7: // forward_proxy_choice.no_forward_proxy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.ForwardProxyChoice = &AWSVPCVoltstackClusterType_NoForwardProxy{msg}
		return true, err
	case 8: // forward_proxy_choice.active_forward_proxy_policies
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_network_firewall.ActiveForwardProxyPoliciesType)
		err := b.DecodeMessage(msg)
		m.ForwardProxyChoice = &AWSVPCVoltstackClusterType_ActiveForwardProxyPolicies{msg}
		return true, err
	case 15: // forward_proxy_choice.forward_proxy_allow_all
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.ForwardProxyChoice = &AWSVPCVoltstackClusterType_ForwardProxyAllowAll{msg}
		return true, err
	case 10: // outside_static_route_choice.no_outside_static_routes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.OutsideStaticRouteChoice = &AWSVPCVoltstackClusterType_NoOutsideStaticRoutes{msg}
		return true, err
	case 11: // outside_static_route_choice.outside_static_routes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views1.SiteStaticRoutesListType)
		err := b.DecodeMessage(msg)
		m.OutsideStaticRouteChoice = &AWSVPCVoltstackClusterType_OutsideStaticRoutes{msg}
		return true, err
	case 13: // global_network_choice.no_global_network
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.GlobalNetworkChoice = &AWSVPCVoltstackClusterType_NoGlobalNetwork{msg}
		return true, err
	case 14: // global_network_choice.global_network_list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views1.GlobalNetworkConnectionListType)
		err := b.DecodeMessage(msg)
		m.GlobalNetworkChoice = &AWSVPCVoltstackClusterType_GlobalNetworkList{msg}
		return true, err
	case 20: // storage_class_choice.default_storage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.StorageClassChoice = &AWSVPCVoltstackClusterType_DefaultStorage{msg}
		return true, err
	case 21: // storage_class_choice.storage_class_list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views2.StorageClassListType)
		err := b.DecodeMessage(msg)
		m.StorageClassChoice = &AWSVPCVoltstackClusterType_StorageClassList{msg}
		return true, err
	case 26: // k8s_cluster_choice.no_k8s_cluster
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.K8SClusterChoice = &AWSVPCVoltstackClusterType_NoK8SCluster{msg}
		return true, err
	case 27: // k8s_cluster_choice.k8s_cluster
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views.ObjectRefType)
		err := b.DecodeMessage(msg)
		m.K8SClusterChoice = &AWSVPCVoltstackClusterType_K8SCluster{msg}
		return true, err
	default:
		return false, nil
	}
}

func _AWSVPCVoltstackClusterType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*AWSVPCVoltstackClusterType)
	// network_policy_choice
	switch x := m.NetworkPolicyChoice.(type) {
	case *AWSVPCVoltstackClusterType_NoNetworkPolicy:
		s := proto.Size(x.NoNetworkPolicy)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCVoltstackClusterType_ActiveNetworkPolicies:
		s := proto.Size(x.ActiveNetworkPolicies)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// forward_proxy_choice
	switch x := m.ForwardProxyChoice.(type) {
	case *AWSVPCVoltstackClusterType_NoForwardProxy:
		s := proto.Size(x.NoForwardProxy)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCVoltstackClusterType_ActiveForwardProxyPolicies:
		s := proto.Size(x.ActiveForwardProxyPolicies)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCVoltstackClusterType_ForwardProxyAllowAll:
		s := proto.Size(x.ForwardProxyAllowAll)
		n += proto.SizeVarint(15<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// outside_static_route_choice
	switch x := m.OutsideStaticRouteChoice.(type) {
	case *AWSVPCVoltstackClusterType_NoOutsideStaticRoutes:
		s := proto.Size(x.NoOutsideStaticRoutes)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCVoltstackClusterType_OutsideStaticRoutes:
		s := proto.Size(x.OutsideStaticRoutes)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// global_network_choice
	switch x := m.GlobalNetworkChoice.(type) {
	case *AWSVPCVoltstackClusterType_NoGlobalNetwork:
		s := proto.Size(x.NoGlobalNetwork)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCVoltstackClusterType_GlobalNetworkList:
		s := proto.Size(x.GlobalNetworkList)
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// storage_class_choice
	switch x := m.StorageClassChoice.(type) {
	case *AWSVPCVoltstackClusterType_DefaultStorage:
		s := proto.Size(x.DefaultStorage)
		n += proto.SizeVarint(20<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCVoltstackClusterType_StorageClassList:
		s := proto.Size(x.StorageClassList)
		n += proto.SizeVarint(21<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// k8s_cluster_choice
	switch x := m.K8SClusterChoice.(type) {
	case *AWSVPCVoltstackClusterType_NoK8SCluster:
		s := proto.Size(x.NoK8SCluster)
		n += proto.SizeVarint(26<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCVoltstackClusterType_K8SCluster:
		s := proto.Size(x.K8SCluster)
		n += proto.SizeVarint(27<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// AWS Ingress Gateway
//
// x-displayName: "AWS Ingress Gateway"
// Single interface AWS ingress site
type AWSVPCIngressGwReplaceType struct {
	// Allowed VIP Port Configuration
	//
	// x-displayName: "Allowed VIP Port Configuration"
	// Allowed VIP Port Configuration
	AllowedVipPort *ves_io_schema_views1.AllowedVIPPorts `protobuf:"bytes,3,opt,name=allowed_vip_port,json=allowedVipPort" json:"allowed_vip_port,omitempty"`
}

func (m *AWSVPCIngressGwReplaceType) Reset()                    { *m = AWSVPCIngressGwReplaceType{} }
func (*AWSVPCIngressGwReplaceType) ProtoMessage()               {}
func (*AWSVPCIngressGwReplaceType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{3} }

func (m *AWSVPCIngressGwReplaceType) GetAllowedVipPort() *ves_io_schema_views1.AllowedVIPPorts {
	if m != nil {
		return m.AllowedVipPort
	}
	return nil
}

// AWS Ingress Egress Gateway
//
// x-displayName: "AWS Ingress/Egress Gateway"
// Two interface AWS ingress/egress site
type AWSVPCIngressEgressGwReplaceType struct {
	// Manage Network Policy
	//
	// x-displayName: "Manage Network Policy"
	// x-required
	// Manage Network Policy via this view
	//
	// Types that are valid to be assigned to NetworkPolicyChoice:
	//	*AWSVPCIngressEgressGwReplaceType_NoNetworkPolicy
	//	*AWSVPCIngressEgressGwReplaceType_ActiveNetworkPolicies
	NetworkPolicyChoice isAWSVPCIngressEgressGwReplaceType_NetworkPolicyChoice `protobuf_oneof:"network_policy_choice"`
	// Manage Forward Proxy
	//
	// x-displayName: "Manage Forward Proxy"
	// x-required
	// Manage Forward Proxy for this site
	//
	// Types that are valid to be assigned to ForwardProxyChoice:
	//	*AWSVPCIngressEgressGwReplaceType_NoForwardProxy
	//	*AWSVPCIngressEgressGwReplaceType_ActiveForwardProxyPolicies
	//	*AWSVPCIngressEgressGwReplaceType_ForwardProxyAllowAll
	ForwardProxyChoice isAWSVPCIngressEgressGwReplaceType_ForwardProxyChoice `protobuf_oneof:"forward_proxy_choice"`
	// Manage Static Routes for Inside Network
	//
	// x-displayName: "Manage Static Routes for Inside Network"
	// x-required
	// Add static routes to inside network. Used to reach indirectly connected subnets.
	//
	// Types that are valid to be assigned to InsideStaticRouteChoice:
	//	*AWSVPCIngressEgressGwReplaceType_NoInsideStaticRoutes
	//	*AWSVPCIngressEgressGwReplaceType_InsideStaticRoutes
	InsideStaticRouteChoice isAWSVPCIngressEgressGwReplaceType_InsideStaticRouteChoice `protobuf_oneof:"inside_static_route_choice"`
	// Manage Static Routes for Outside Network
	//
	// x-displayName: "Manage Static Routes for Outside Network"
	// x-required
	// Add static routes to outside network. Used to reach indirectly connected subnets.
	//
	// Types that are valid to be assigned to OutsideStaticRouteChoice:
	//	*AWSVPCIngressEgressGwReplaceType_NoOutsideStaticRoutes
	//	*AWSVPCIngressEgressGwReplaceType_OutsideStaticRoutes
	OutsideStaticRouteChoice isAWSVPCIngressEgressGwReplaceType_OutsideStaticRouteChoice `protobuf_oneof:"outside_static_route_choice"`
	// Connect to Global Network
	//
	// x-displayName: "Select Global Networks to Connect"
	// x-required
	// Select global networks to connect to inside or outside network
	//
	// Types that are valid to be assigned to GlobalNetworkChoice:
	//	*AWSVPCIngressEgressGwReplaceType_NoGlobalNetwork
	//	*AWSVPCIngressEgressGwReplaceType_GlobalNetworkList
	GlobalNetworkChoice isAWSVPCIngressEgressGwReplaceType_GlobalNetworkChoice `protobuf_oneof:"global_network_choice"`
	// Allowed VIP Port Configuration for Outside Network
	//
	// x-displayName: "Allowed VIP Port Configuration for Outside Network"
	// Allowed VIP Port Configuration for Outside Network
	AllowedVipPort *ves_io_schema_views1.AllowedVIPPorts `protobuf:"bytes,21,opt,name=allowed_vip_port,json=allowedVipPort" json:"allowed_vip_port,omitempty"`
	// Allowed VIP Port Configuration for Inside Network
	//
	// x-displayName: "Allowed VIP Port Configuration for Inside Network"
	// Allowed VIP Port Configuration for Inside Network
	AllowedVipPortSli *ves_io_schema_views1.AllowedVIPPorts `protobuf:"bytes,22,opt,name=allowed_vip_port_sli,json=allowedVipPortSli" json:"allowed_vip_port_sli,omitempty"`
}

func (m *AWSVPCIngressEgressGwReplaceType) Reset()      { *m = AWSVPCIngressEgressGwReplaceType{} }
func (*AWSVPCIngressEgressGwReplaceType) ProtoMessage() {}
func (*AWSVPCIngressEgressGwReplaceType) Descriptor() ([]byte, []int) {
	return fileDescriptorTypes, []int{4}
}

type isAWSVPCIngressEgressGwReplaceType_NetworkPolicyChoice interface {
	isAWSVPCIngressEgressGwReplaceType_NetworkPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isAWSVPCIngressEgressGwReplaceType_ForwardProxyChoice interface {
	isAWSVPCIngressEgressGwReplaceType_ForwardProxyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isAWSVPCIngressEgressGwReplaceType_InsideStaticRouteChoice interface {
	isAWSVPCIngressEgressGwReplaceType_InsideStaticRouteChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isAWSVPCIngressEgressGwReplaceType_OutsideStaticRouteChoice interface {
	isAWSVPCIngressEgressGwReplaceType_OutsideStaticRouteChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isAWSVPCIngressEgressGwReplaceType_GlobalNetworkChoice interface {
	isAWSVPCIngressEgressGwReplaceType_GlobalNetworkChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type AWSVPCIngressEgressGwReplaceType_NoNetworkPolicy struct {
	NoNetworkPolicy *ves_io_schema4.Empty `protobuf:"bytes,2,opt,name=no_network_policy,json=noNetworkPolicy,oneof"`
}
type AWSVPCIngressEgressGwReplaceType_ActiveNetworkPolicies struct {
	ActiveNetworkPolicies *ves_io_schema_network_firewall.ActiveNetworkPoliciesType `protobuf:"bytes,10,opt,name=active_network_policies,json=activeNetworkPolicies,oneof"`
}
type AWSVPCIngressEgressGwReplaceType_NoForwardProxy struct {
	NoForwardProxy *ves_io_schema4.Empty `protobuf:"bytes,4,opt,name=no_forward_proxy,json=noForwardProxy,oneof"`
}
type AWSVPCIngressEgressGwReplaceType_ActiveForwardProxyPolicies struct {
	ActiveForwardProxyPolicies *ves_io_schema_network_firewall.ActiveForwardProxyPoliciesType `protobuf:"bytes,9,opt,name=active_forward_proxy_policies,json=activeForwardProxyPolicies,oneof"`
}
type AWSVPCIngressEgressGwReplaceType_ForwardProxyAllowAll struct {
	ForwardProxyAllowAll *ves_io_schema4.Empty `protobuf:"bytes,20,opt,name=forward_proxy_allow_all,json=forwardProxyAllowAll,oneof"`
}
type AWSVPCIngressEgressGwReplaceType_NoInsideStaticRoutes struct {
	NoInsideStaticRoutes *ves_io_schema4.Empty `protobuf:"bytes,12,opt,name=no_inside_static_routes,json=noInsideStaticRoutes,oneof"`
}
type AWSVPCIngressEgressGwReplaceType_InsideStaticRoutes struct {
	InsideStaticRoutes *ves_io_schema_views1.SiteStaticRoutesListType `protobuf:"bytes,13,opt,name=inside_static_routes,json=insideStaticRoutes,oneof"`
}
type AWSVPCIngressEgressGwReplaceType_NoOutsideStaticRoutes struct {
	NoOutsideStaticRoutes *ves_io_schema4.Empty `protobuf:"bytes,15,opt,name=no_outside_static_routes,json=noOutsideStaticRoutes,oneof"`
}
type AWSVPCIngressEgressGwReplaceType_OutsideStaticRoutes struct {
	OutsideStaticRoutes *ves_io_schema_views1.SiteStaticRoutesListType `protobuf:"bytes,16,opt,name=outside_static_routes,json=outsideStaticRoutes,oneof"`
}
type AWSVPCIngressEgressGwReplaceType_NoGlobalNetwork struct {
	NoGlobalNetwork *ves_io_schema4.Empty `protobuf:"bytes,18,opt,name=no_global_network,json=noGlobalNetwork,oneof"`
}
type AWSVPCIngressEgressGwReplaceType_GlobalNetworkList struct {
	GlobalNetworkList *ves_io_schema_views1.GlobalNetworkConnectionListType `protobuf:"bytes,19,opt,name=global_network_list,json=globalNetworkList,oneof"`
}

func (*AWSVPCIngressEgressGwReplaceType_NoNetworkPolicy) isAWSVPCIngressEgressGwReplaceType_NetworkPolicyChoice() {
}
func (*AWSVPCIngressEgressGwReplaceType_ActiveNetworkPolicies) isAWSVPCIngressEgressGwReplaceType_NetworkPolicyChoice() {
}
func (*AWSVPCIngressEgressGwReplaceType_NoForwardProxy) isAWSVPCIngressEgressGwReplaceType_ForwardProxyChoice() {
}
func (*AWSVPCIngressEgressGwReplaceType_ActiveForwardProxyPolicies) isAWSVPCIngressEgressGwReplaceType_ForwardProxyChoice() {
}
func (*AWSVPCIngressEgressGwReplaceType_ForwardProxyAllowAll) isAWSVPCIngressEgressGwReplaceType_ForwardProxyChoice() {
}
func (*AWSVPCIngressEgressGwReplaceType_NoInsideStaticRoutes) isAWSVPCIngressEgressGwReplaceType_InsideStaticRouteChoice() {
}
func (*AWSVPCIngressEgressGwReplaceType_InsideStaticRoutes) isAWSVPCIngressEgressGwReplaceType_InsideStaticRouteChoice() {
}
func (*AWSVPCIngressEgressGwReplaceType_NoOutsideStaticRoutes) isAWSVPCIngressEgressGwReplaceType_OutsideStaticRouteChoice() {
}
func (*AWSVPCIngressEgressGwReplaceType_OutsideStaticRoutes) isAWSVPCIngressEgressGwReplaceType_OutsideStaticRouteChoice() {
}
func (*AWSVPCIngressEgressGwReplaceType_NoGlobalNetwork) isAWSVPCIngressEgressGwReplaceType_GlobalNetworkChoice() {
}
func (*AWSVPCIngressEgressGwReplaceType_GlobalNetworkList) isAWSVPCIngressEgressGwReplaceType_GlobalNetworkChoice() {
}

func (m *AWSVPCIngressEgressGwReplaceType) GetNetworkPolicyChoice() isAWSVPCIngressEgressGwReplaceType_NetworkPolicyChoice {
	if m != nil {
		return m.NetworkPolicyChoice
	}
	return nil
}
func (m *AWSVPCIngressEgressGwReplaceType) GetForwardProxyChoice() isAWSVPCIngressEgressGwReplaceType_ForwardProxyChoice {
	if m != nil {
		return m.ForwardProxyChoice
	}
	return nil
}
func (m *AWSVPCIngressEgressGwReplaceType) GetInsideStaticRouteChoice() isAWSVPCIngressEgressGwReplaceType_InsideStaticRouteChoice {
	if m != nil {
		return m.InsideStaticRouteChoice
	}
	return nil
}
func (m *AWSVPCIngressEgressGwReplaceType) GetOutsideStaticRouteChoice() isAWSVPCIngressEgressGwReplaceType_OutsideStaticRouteChoice {
	if m != nil {
		return m.OutsideStaticRouteChoice
	}
	return nil
}
func (m *AWSVPCIngressEgressGwReplaceType) GetGlobalNetworkChoice() isAWSVPCIngressEgressGwReplaceType_GlobalNetworkChoice {
	if m != nil {
		return m.GlobalNetworkChoice
	}
	return nil
}

func (m *AWSVPCIngressEgressGwReplaceType) GetNoNetworkPolicy() *ves_io_schema4.Empty {
	if x, ok := m.GetNetworkPolicyChoice().(*AWSVPCIngressEgressGwReplaceType_NoNetworkPolicy); ok {
		return x.NoNetworkPolicy
	}
	return nil
}

func (m *AWSVPCIngressEgressGwReplaceType) GetActiveNetworkPolicies() *ves_io_schema_network_firewall.ActiveNetworkPoliciesType {
	if x, ok := m.GetNetworkPolicyChoice().(*AWSVPCIngressEgressGwReplaceType_ActiveNetworkPolicies); ok {
		return x.ActiveNetworkPolicies
	}
	return nil
}

func (m *AWSVPCIngressEgressGwReplaceType) GetNoForwardProxy() *ves_io_schema4.Empty {
	if x, ok := m.GetForwardProxyChoice().(*AWSVPCIngressEgressGwReplaceType_NoForwardProxy); ok {
		return x.NoForwardProxy
	}
	return nil
}

func (m *AWSVPCIngressEgressGwReplaceType) GetActiveForwardProxyPolicies() *ves_io_schema_network_firewall.ActiveForwardProxyPoliciesType {
	if x, ok := m.GetForwardProxyChoice().(*AWSVPCIngressEgressGwReplaceType_ActiveForwardProxyPolicies); ok {
		return x.ActiveForwardProxyPolicies
	}
	return nil
}

func (m *AWSVPCIngressEgressGwReplaceType) GetForwardProxyAllowAll() *ves_io_schema4.Empty {
	if x, ok := m.GetForwardProxyChoice().(*AWSVPCIngressEgressGwReplaceType_ForwardProxyAllowAll); ok {
		return x.ForwardProxyAllowAll
	}
	return nil
}

func (m *AWSVPCIngressEgressGwReplaceType) GetNoInsideStaticRoutes() *ves_io_schema4.Empty {
	if x, ok := m.GetInsideStaticRouteChoice().(*AWSVPCIngressEgressGwReplaceType_NoInsideStaticRoutes); ok {
		return x.NoInsideStaticRoutes
	}
	return nil
}

func (m *AWSVPCIngressEgressGwReplaceType) GetInsideStaticRoutes() *ves_io_schema_views1.SiteStaticRoutesListType {
	if x, ok := m.GetInsideStaticRouteChoice().(*AWSVPCIngressEgressGwReplaceType_InsideStaticRoutes); ok {
		return x.InsideStaticRoutes
	}
	return nil
}

func (m *AWSVPCIngressEgressGwReplaceType) GetNoOutsideStaticRoutes() *ves_io_schema4.Empty {
	if x, ok := m.GetOutsideStaticRouteChoice().(*AWSVPCIngressEgressGwReplaceType_NoOutsideStaticRoutes); ok {
		return x.NoOutsideStaticRoutes
	}
	return nil
}

func (m *AWSVPCIngressEgressGwReplaceType) GetOutsideStaticRoutes() *ves_io_schema_views1.SiteStaticRoutesListType {
	if x, ok := m.GetOutsideStaticRouteChoice().(*AWSVPCIngressEgressGwReplaceType_OutsideStaticRoutes); ok {
		return x.OutsideStaticRoutes
	}
	return nil
}

func (m *AWSVPCIngressEgressGwReplaceType) GetNoGlobalNetwork() *ves_io_schema4.Empty {
	if x, ok := m.GetGlobalNetworkChoice().(*AWSVPCIngressEgressGwReplaceType_NoGlobalNetwork); ok {
		return x.NoGlobalNetwork
	}
	return nil
}

func (m *AWSVPCIngressEgressGwReplaceType) GetGlobalNetworkList() *ves_io_schema_views1.GlobalNetworkConnectionListType {
	if x, ok := m.GetGlobalNetworkChoice().(*AWSVPCIngressEgressGwReplaceType_GlobalNetworkList); ok {
		return x.GlobalNetworkList
	}
	return nil
}

func (m *AWSVPCIngressEgressGwReplaceType) GetAllowedVipPort() *ves_io_schema_views1.AllowedVIPPorts {
	if m != nil {
		return m.AllowedVipPort
	}
	return nil
}

func (m *AWSVPCIngressEgressGwReplaceType) GetAllowedVipPortSli() *ves_io_schema_views1.AllowedVIPPorts {
	if m != nil {
		return m.AllowedVipPortSli
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*AWSVPCIngressEgressGwReplaceType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _AWSVPCIngressEgressGwReplaceType_OneofMarshaler, _AWSVPCIngressEgressGwReplaceType_OneofUnmarshaler, _AWSVPCIngressEgressGwReplaceType_OneofSizer, []interface{}{
		(*AWSVPCIngressEgressGwReplaceType_NoNetworkPolicy)(nil),
		(*AWSVPCIngressEgressGwReplaceType_ActiveNetworkPolicies)(nil),
		(*AWSVPCIngressEgressGwReplaceType_NoForwardProxy)(nil),
		(*AWSVPCIngressEgressGwReplaceType_ActiveForwardProxyPolicies)(nil),
		(*AWSVPCIngressEgressGwReplaceType_ForwardProxyAllowAll)(nil),
		(*AWSVPCIngressEgressGwReplaceType_NoInsideStaticRoutes)(nil),
		(*AWSVPCIngressEgressGwReplaceType_InsideStaticRoutes)(nil),
		(*AWSVPCIngressEgressGwReplaceType_NoOutsideStaticRoutes)(nil),
		(*AWSVPCIngressEgressGwReplaceType_OutsideStaticRoutes)(nil),
		(*AWSVPCIngressEgressGwReplaceType_NoGlobalNetwork)(nil),
		(*AWSVPCIngressEgressGwReplaceType_GlobalNetworkList)(nil),
	}
}

func _AWSVPCIngressEgressGwReplaceType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*AWSVPCIngressEgressGwReplaceType)
	// network_policy_choice
	switch x := m.NetworkPolicyChoice.(type) {
	case *AWSVPCIngressEgressGwReplaceType_NoNetworkPolicy:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoNetworkPolicy); err != nil {
			return err
		}
	case *AWSVPCIngressEgressGwReplaceType_ActiveNetworkPolicies:
		_ = b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActiveNetworkPolicies); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AWSVPCIngressEgressGwReplaceType.NetworkPolicyChoice has unexpected type %T", x)
	}
	// forward_proxy_choice
	switch x := m.ForwardProxyChoice.(type) {
	case *AWSVPCIngressEgressGwReplaceType_NoForwardProxy:
		_ = b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoForwardProxy); err != nil {
			return err
		}
	case *AWSVPCIngressEgressGwReplaceType_ActiveForwardProxyPolicies:
		_ = b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActiveForwardProxyPolicies); err != nil {
			return err
		}
	case *AWSVPCIngressEgressGwReplaceType_ForwardProxyAllowAll:
		_ = b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ForwardProxyAllowAll); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AWSVPCIngressEgressGwReplaceType.ForwardProxyChoice has unexpected type %T", x)
	}
	// inside_static_route_choice
	switch x := m.InsideStaticRouteChoice.(type) {
	case *AWSVPCIngressEgressGwReplaceType_NoInsideStaticRoutes:
		_ = b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoInsideStaticRoutes); err != nil {
			return err
		}
	case *AWSVPCIngressEgressGwReplaceType_InsideStaticRoutes:
		_ = b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InsideStaticRoutes); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AWSVPCIngressEgressGwReplaceType.InsideStaticRouteChoice has unexpected type %T", x)
	}
	// outside_static_route_choice
	switch x := m.OutsideStaticRouteChoice.(type) {
	case *AWSVPCIngressEgressGwReplaceType_NoOutsideStaticRoutes:
		_ = b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoOutsideStaticRoutes); err != nil {
			return err
		}
	case *AWSVPCIngressEgressGwReplaceType_OutsideStaticRoutes:
		_ = b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OutsideStaticRoutes); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AWSVPCIngressEgressGwReplaceType.OutsideStaticRouteChoice has unexpected type %T", x)
	}
	// global_network_choice
	switch x := m.GlobalNetworkChoice.(type) {
	case *AWSVPCIngressEgressGwReplaceType_NoGlobalNetwork:
		_ = b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoGlobalNetwork); err != nil {
			return err
		}
	case *AWSVPCIngressEgressGwReplaceType_GlobalNetworkList:
		_ = b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GlobalNetworkList); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AWSVPCIngressEgressGwReplaceType.GlobalNetworkChoice has unexpected type %T", x)
	}
	return nil
}

func _AWSVPCIngressEgressGwReplaceType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*AWSVPCIngressEgressGwReplaceType)
	switch tag {
	case 2: // network_policy_choice.no_network_policy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.NetworkPolicyChoice = &AWSVPCIngressEgressGwReplaceType_NoNetworkPolicy{msg}
		return true, err
	case 10: // network_policy_choice.active_network_policies
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_network_firewall.ActiveNetworkPoliciesType)
		err := b.DecodeMessage(msg)
		m.NetworkPolicyChoice = &AWSVPCIngressEgressGwReplaceType_ActiveNetworkPolicies{msg}
		return true, err
	case 4: // forward_proxy_choice.no_forward_proxy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.ForwardProxyChoice = &AWSVPCIngressEgressGwReplaceType_NoForwardProxy{msg}
		return true, err
	case 9: // forward_proxy_choice.active_forward_proxy_policies
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_network_firewall.ActiveForwardProxyPoliciesType)
		err := b.DecodeMessage(msg)
		m.ForwardProxyChoice = &AWSVPCIngressEgressGwReplaceType_ActiveForwardProxyPolicies{msg}
		return true, err
	case 20: // forward_proxy_choice.forward_proxy_allow_all
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.ForwardProxyChoice = &AWSVPCIngressEgressGwReplaceType_ForwardProxyAllowAll{msg}
		return true, err
	case 12: // inside_static_route_choice.no_inside_static_routes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.InsideStaticRouteChoice = &AWSVPCIngressEgressGwReplaceType_NoInsideStaticRoutes{msg}
		return true, err
	case 13: // inside_static_route_choice.inside_static_routes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views1.SiteStaticRoutesListType)
		err := b.DecodeMessage(msg)
		m.InsideStaticRouteChoice = &AWSVPCIngressEgressGwReplaceType_InsideStaticRoutes{msg}
		return true, err
	case 15: // outside_static_route_choice.no_outside_static_routes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.OutsideStaticRouteChoice = &AWSVPCIngressEgressGwReplaceType_NoOutsideStaticRoutes{msg}
		return true, err
	case 16: // outside_static_route_choice.outside_static_routes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views1.SiteStaticRoutesListType)
		err := b.DecodeMessage(msg)
		m.OutsideStaticRouteChoice = &AWSVPCIngressEgressGwReplaceType_OutsideStaticRoutes{msg}
		return true, err
	case 18: // global_network_choice.no_global_network
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.GlobalNetworkChoice = &AWSVPCIngressEgressGwReplaceType_NoGlobalNetwork{msg}
		return true, err
	case 19: // global_network_choice.global_network_list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views1.GlobalNetworkConnectionListType)
		err := b.DecodeMessage(msg)
		m.GlobalNetworkChoice = &AWSVPCIngressEgressGwReplaceType_GlobalNetworkList{msg}
		return true, err
	default:
		return false, nil
	}
}

func _AWSVPCIngressEgressGwReplaceType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*AWSVPCIngressEgressGwReplaceType)
	// network_policy_choice
	switch x := m.NetworkPolicyChoice.(type) {
	case *AWSVPCIngressEgressGwReplaceType_NoNetworkPolicy:
		s := proto.Size(x.NoNetworkPolicy)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCIngressEgressGwReplaceType_ActiveNetworkPolicies:
		s := proto.Size(x.ActiveNetworkPolicies)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// forward_proxy_choice
	switch x := m.ForwardProxyChoice.(type) {
	case *AWSVPCIngressEgressGwReplaceType_NoForwardProxy:
		s := proto.Size(x.NoForwardProxy)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCIngressEgressGwReplaceType_ActiveForwardProxyPolicies:
		s := proto.Size(x.ActiveForwardProxyPolicies)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCIngressEgressGwReplaceType_ForwardProxyAllowAll:
		s := proto.Size(x.ForwardProxyAllowAll)
		n += proto.SizeVarint(20<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// inside_static_route_choice
	switch x := m.InsideStaticRouteChoice.(type) {
	case *AWSVPCIngressEgressGwReplaceType_NoInsideStaticRoutes:
		s := proto.Size(x.NoInsideStaticRoutes)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCIngressEgressGwReplaceType_InsideStaticRoutes:
		s := proto.Size(x.InsideStaticRoutes)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// outside_static_route_choice
	switch x := m.OutsideStaticRouteChoice.(type) {
	case *AWSVPCIngressEgressGwReplaceType_NoOutsideStaticRoutes:
		s := proto.Size(x.NoOutsideStaticRoutes)
		n += proto.SizeVarint(15<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCIngressEgressGwReplaceType_OutsideStaticRoutes:
		s := proto.Size(x.OutsideStaticRoutes)
		n += proto.SizeVarint(16<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// global_network_choice
	switch x := m.GlobalNetworkChoice.(type) {
	case *AWSVPCIngressEgressGwReplaceType_NoGlobalNetwork:
		s := proto.Size(x.NoGlobalNetwork)
		n += proto.SizeVarint(18<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCIngressEgressGwReplaceType_GlobalNetworkList:
		s := proto.Size(x.GlobalNetworkList)
		n += proto.SizeVarint(19<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// AWS Voltstack Cluster
//
// x-displayName: "AWS  Voltstack Cluster"
// Voltstack cluster of single interface AWS nodes
type AWSVPCVoltstackClusterReplaceType struct {
	// Manage Network Policy
	//
	// x-displayName: "Manage Network Policy"
	// x-required
	// Manage Network Policy via this view
	//
	// Types that are valid to be assigned to NetworkPolicyChoice:
	//	*AWSVPCVoltstackClusterReplaceType_NoNetworkPolicy
	//	*AWSVPCVoltstackClusterReplaceType_ActiveNetworkPolicies
	NetworkPolicyChoice isAWSVPCVoltstackClusterReplaceType_NetworkPolicyChoice `protobuf_oneof:"network_policy_choice"`
	// Manage Forward Proxy
	//
	// x-displayName: "Manage Forward Proxy"
	// x-required
	// Manage Forward Proxy for this site
	//
	// Types that are valid to be assigned to ForwardProxyChoice:
	//	*AWSVPCVoltstackClusterReplaceType_NoForwardProxy
	//	*AWSVPCVoltstackClusterReplaceType_ActiveForwardProxyPolicies
	//	*AWSVPCVoltstackClusterReplaceType_ForwardProxyAllowAll
	ForwardProxyChoice isAWSVPCVoltstackClusterReplaceType_ForwardProxyChoice `protobuf_oneof:"forward_proxy_choice"`
	// Manage Static Routes for Site Local Network
	//
	// x-displayName: "Manage Static Routes for Site Local Network"
	// x-required
	// Add static routes to site local network. Used to reach indirectly connected subnets.
	//
	// Types that are valid to be assigned to OutsideStaticRouteChoice:
	//	*AWSVPCVoltstackClusterReplaceType_NoOutsideStaticRoutes
	//	*AWSVPCVoltstackClusterReplaceType_OutsideStaticRoutes
	OutsideStaticRouteChoice isAWSVPCVoltstackClusterReplaceType_OutsideStaticRouteChoice `protobuf_oneof:"outside_static_route_choice"`
	// Connect to Global Network
	//
	// x-displayName: "Select Global Networks to Connect"
	// x-required
	// Select global networks to connect to site local network
	//
	// Types that are valid to be assigned to GlobalNetworkChoice:
	//	*AWSVPCVoltstackClusterReplaceType_NoGlobalNetwork
	//	*AWSVPCVoltstackClusterReplaceType_GlobalNetworkList
	GlobalNetworkChoice isAWSVPCVoltstackClusterReplaceType_GlobalNetworkChoice `protobuf_oneof:"global_network_choice"`
	// Allowed VIP Port Configuration
	//
	// x-displayName: "Allowed VIP Port Configuration"
	// Allowed VIP Port Configuration
	AllowedVipPort *ves_io_schema_views1.AllowedVIPPorts `protobuf:"bytes,22,opt,name=allowed_vip_port,json=allowedVipPort" json:"allowed_vip_port,omitempty"`
}

func (m *AWSVPCVoltstackClusterReplaceType) Reset()      { *m = AWSVPCVoltstackClusterReplaceType{} }
func (*AWSVPCVoltstackClusterReplaceType) ProtoMessage() {}
func (*AWSVPCVoltstackClusterReplaceType) Descriptor() ([]byte, []int) {
	return fileDescriptorTypes, []int{5}
}

type isAWSVPCVoltstackClusterReplaceType_NetworkPolicyChoice interface {
	isAWSVPCVoltstackClusterReplaceType_NetworkPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isAWSVPCVoltstackClusterReplaceType_ForwardProxyChoice interface {
	isAWSVPCVoltstackClusterReplaceType_ForwardProxyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isAWSVPCVoltstackClusterReplaceType_OutsideStaticRouteChoice interface {
	isAWSVPCVoltstackClusterReplaceType_OutsideStaticRouteChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isAWSVPCVoltstackClusterReplaceType_GlobalNetworkChoice interface {
	isAWSVPCVoltstackClusterReplaceType_GlobalNetworkChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type AWSVPCVoltstackClusterReplaceType_NoNetworkPolicy struct {
	NoNetworkPolicy *ves_io_schema4.Empty `protobuf:"bytes,4,opt,name=no_network_policy,json=noNetworkPolicy,oneof"`
}
type AWSVPCVoltstackClusterReplaceType_ActiveNetworkPolicies struct {
	ActiveNetworkPolicies *ves_io_schema_network_firewall.ActiveNetworkPoliciesType `protobuf:"bytes,5,opt,name=active_network_policies,json=activeNetworkPolicies,oneof"`
}
type AWSVPCVoltstackClusterReplaceType_NoForwardProxy struct {
	NoForwardProxy *ves_io_schema4.Empty `protobuf:"bytes,7,opt,name=no_forward_proxy,json=noForwardProxy,oneof"`
}
type AWSVPCVoltstackClusterReplaceType_ActiveForwardProxyPolicies struct {
	ActiveForwardProxyPolicies *ves_io_schema_network_firewall.ActiveForwardProxyPoliciesType `protobuf:"bytes,8,opt,name=active_forward_proxy_policies,json=activeForwardProxyPolicies,oneof"`
}
type AWSVPCVoltstackClusterReplaceType_ForwardProxyAllowAll struct {
	ForwardProxyAllowAll *ves_io_schema4.Empty `protobuf:"bytes,15,opt,name=forward_proxy_allow_all,json=forwardProxyAllowAll,oneof"`
}
type AWSVPCVoltstackClusterReplaceType_NoOutsideStaticRoutes struct {
	NoOutsideStaticRoutes *ves_io_schema4.Empty `protobuf:"bytes,10,opt,name=no_outside_static_routes,json=noOutsideStaticRoutes,oneof"`
}
type AWSVPCVoltstackClusterReplaceType_OutsideStaticRoutes struct {
	OutsideStaticRoutes *ves_io_schema_views1.SiteStaticRoutesListType `protobuf:"bytes,11,opt,name=outside_static_routes,json=outsideStaticRoutes,oneof"`
}
type AWSVPCVoltstackClusterReplaceType_NoGlobalNetwork struct {
	NoGlobalNetwork *ves_io_schema4.Empty `protobuf:"bytes,13,opt,name=no_global_network,json=noGlobalNetwork,oneof"`
}
type AWSVPCVoltstackClusterReplaceType_GlobalNetworkList struct {
	GlobalNetworkList *ves_io_schema_views1.GlobalNetworkConnectionListType `protobuf:"bytes,14,opt,name=global_network_list,json=globalNetworkList,oneof"`
}

func (*AWSVPCVoltstackClusterReplaceType_NoNetworkPolicy) isAWSVPCVoltstackClusterReplaceType_NetworkPolicyChoice() {
}
func (*AWSVPCVoltstackClusterReplaceType_ActiveNetworkPolicies) isAWSVPCVoltstackClusterReplaceType_NetworkPolicyChoice() {
}
func (*AWSVPCVoltstackClusterReplaceType_NoForwardProxy) isAWSVPCVoltstackClusterReplaceType_ForwardProxyChoice() {
}
func (*AWSVPCVoltstackClusterReplaceType_ActiveForwardProxyPolicies) isAWSVPCVoltstackClusterReplaceType_ForwardProxyChoice() {
}
func (*AWSVPCVoltstackClusterReplaceType_ForwardProxyAllowAll) isAWSVPCVoltstackClusterReplaceType_ForwardProxyChoice() {
}
func (*AWSVPCVoltstackClusterReplaceType_NoOutsideStaticRoutes) isAWSVPCVoltstackClusterReplaceType_OutsideStaticRouteChoice() {
}
func (*AWSVPCVoltstackClusterReplaceType_OutsideStaticRoutes) isAWSVPCVoltstackClusterReplaceType_OutsideStaticRouteChoice() {
}
func (*AWSVPCVoltstackClusterReplaceType_NoGlobalNetwork) isAWSVPCVoltstackClusterReplaceType_GlobalNetworkChoice() {
}
func (*AWSVPCVoltstackClusterReplaceType_GlobalNetworkList) isAWSVPCVoltstackClusterReplaceType_GlobalNetworkChoice() {
}

func (m *AWSVPCVoltstackClusterReplaceType) GetNetworkPolicyChoice() isAWSVPCVoltstackClusterReplaceType_NetworkPolicyChoice {
	if m != nil {
		return m.NetworkPolicyChoice
	}
	return nil
}
func (m *AWSVPCVoltstackClusterReplaceType) GetForwardProxyChoice() isAWSVPCVoltstackClusterReplaceType_ForwardProxyChoice {
	if m != nil {
		return m.ForwardProxyChoice
	}
	return nil
}
func (m *AWSVPCVoltstackClusterReplaceType) GetOutsideStaticRouteChoice() isAWSVPCVoltstackClusterReplaceType_OutsideStaticRouteChoice {
	if m != nil {
		return m.OutsideStaticRouteChoice
	}
	return nil
}
func (m *AWSVPCVoltstackClusterReplaceType) GetGlobalNetworkChoice() isAWSVPCVoltstackClusterReplaceType_GlobalNetworkChoice {
	if m != nil {
		return m.GlobalNetworkChoice
	}
	return nil
}

func (m *AWSVPCVoltstackClusterReplaceType) GetNoNetworkPolicy() *ves_io_schema4.Empty {
	if x, ok := m.GetNetworkPolicyChoice().(*AWSVPCVoltstackClusterReplaceType_NoNetworkPolicy); ok {
		return x.NoNetworkPolicy
	}
	return nil
}

func (m *AWSVPCVoltstackClusterReplaceType) GetActiveNetworkPolicies() *ves_io_schema_network_firewall.ActiveNetworkPoliciesType {
	if x, ok := m.GetNetworkPolicyChoice().(*AWSVPCVoltstackClusterReplaceType_ActiveNetworkPolicies); ok {
		return x.ActiveNetworkPolicies
	}
	return nil
}

func (m *AWSVPCVoltstackClusterReplaceType) GetNoForwardProxy() *ves_io_schema4.Empty {
	if x, ok := m.GetForwardProxyChoice().(*AWSVPCVoltstackClusterReplaceType_NoForwardProxy); ok {
		return x.NoForwardProxy
	}
	return nil
}

func (m *AWSVPCVoltstackClusterReplaceType) GetActiveForwardProxyPolicies() *ves_io_schema_network_firewall.ActiveForwardProxyPoliciesType {
	if x, ok := m.GetForwardProxyChoice().(*AWSVPCVoltstackClusterReplaceType_ActiveForwardProxyPolicies); ok {
		return x.ActiveForwardProxyPolicies
	}
	return nil
}

func (m *AWSVPCVoltstackClusterReplaceType) GetForwardProxyAllowAll() *ves_io_schema4.Empty {
	if x, ok := m.GetForwardProxyChoice().(*AWSVPCVoltstackClusterReplaceType_ForwardProxyAllowAll); ok {
		return x.ForwardProxyAllowAll
	}
	return nil
}

func (m *AWSVPCVoltstackClusterReplaceType) GetNoOutsideStaticRoutes() *ves_io_schema4.Empty {
	if x, ok := m.GetOutsideStaticRouteChoice().(*AWSVPCVoltstackClusterReplaceType_NoOutsideStaticRoutes); ok {
		return x.NoOutsideStaticRoutes
	}
	return nil
}

func (m *AWSVPCVoltstackClusterReplaceType) GetOutsideStaticRoutes() *ves_io_schema_views1.SiteStaticRoutesListType {
	if x, ok := m.GetOutsideStaticRouteChoice().(*AWSVPCVoltstackClusterReplaceType_OutsideStaticRoutes); ok {
		return x.OutsideStaticRoutes
	}
	return nil
}

func (m *AWSVPCVoltstackClusterReplaceType) GetNoGlobalNetwork() *ves_io_schema4.Empty {
	if x, ok := m.GetGlobalNetworkChoice().(*AWSVPCVoltstackClusterReplaceType_NoGlobalNetwork); ok {
		return x.NoGlobalNetwork
	}
	return nil
}

func (m *AWSVPCVoltstackClusterReplaceType) GetGlobalNetworkList() *ves_io_schema_views1.GlobalNetworkConnectionListType {
	if x, ok := m.GetGlobalNetworkChoice().(*AWSVPCVoltstackClusterReplaceType_GlobalNetworkList); ok {
		return x.GlobalNetworkList
	}
	return nil
}

func (m *AWSVPCVoltstackClusterReplaceType) GetAllowedVipPort() *ves_io_schema_views1.AllowedVIPPorts {
	if m != nil {
		return m.AllowedVipPort
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*AWSVPCVoltstackClusterReplaceType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _AWSVPCVoltstackClusterReplaceType_OneofMarshaler, _AWSVPCVoltstackClusterReplaceType_OneofUnmarshaler, _AWSVPCVoltstackClusterReplaceType_OneofSizer, []interface{}{
		(*AWSVPCVoltstackClusterReplaceType_NoNetworkPolicy)(nil),
		(*AWSVPCVoltstackClusterReplaceType_ActiveNetworkPolicies)(nil),
		(*AWSVPCVoltstackClusterReplaceType_NoForwardProxy)(nil),
		(*AWSVPCVoltstackClusterReplaceType_ActiveForwardProxyPolicies)(nil),
		(*AWSVPCVoltstackClusterReplaceType_ForwardProxyAllowAll)(nil),
		(*AWSVPCVoltstackClusterReplaceType_NoOutsideStaticRoutes)(nil),
		(*AWSVPCVoltstackClusterReplaceType_OutsideStaticRoutes)(nil),
		(*AWSVPCVoltstackClusterReplaceType_NoGlobalNetwork)(nil),
		(*AWSVPCVoltstackClusterReplaceType_GlobalNetworkList)(nil),
	}
}

func _AWSVPCVoltstackClusterReplaceType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*AWSVPCVoltstackClusterReplaceType)
	// network_policy_choice
	switch x := m.NetworkPolicyChoice.(type) {
	case *AWSVPCVoltstackClusterReplaceType_NoNetworkPolicy:
		_ = b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoNetworkPolicy); err != nil {
			return err
		}
	case *AWSVPCVoltstackClusterReplaceType_ActiveNetworkPolicies:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActiveNetworkPolicies); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AWSVPCVoltstackClusterReplaceType.NetworkPolicyChoice has unexpected type %T", x)
	}
	// forward_proxy_choice
	switch x := m.ForwardProxyChoice.(type) {
	case *AWSVPCVoltstackClusterReplaceType_NoForwardProxy:
		_ = b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoForwardProxy); err != nil {
			return err
		}
	case *AWSVPCVoltstackClusterReplaceType_ActiveForwardProxyPolicies:
		_ = b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActiveForwardProxyPolicies); err != nil {
			return err
		}
	case *AWSVPCVoltstackClusterReplaceType_ForwardProxyAllowAll:
		_ = b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ForwardProxyAllowAll); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AWSVPCVoltstackClusterReplaceType.ForwardProxyChoice has unexpected type %T", x)
	}
	// outside_static_route_choice
	switch x := m.OutsideStaticRouteChoice.(type) {
	case *AWSVPCVoltstackClusterReplaceType_NoOutsideStaticRoutes:
		_ = b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoOutsideStaticRoutes); err != nil {
			return err
		}
	case *AWSVPCVoltstackClusterReplaceType_OutsideStaticRoutes:
		_ = b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OutsideStaticRoutes); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AWSVPCVoltstackClusterReplaceType.OutsideStaticRouteChoice has unexpected type %T", x)
	}
	// global_network_choice
	switch x := m.GlobalNetworkChoice.(type) {
	case *AWSVPCVoltstackClusterReplaceType_NoGlobalNetwork:
		_ = b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoGlobalNetwork); err != nil {
			return err
		}
	case *AWSVPCVoltstackClusterReplaceType_GlobalNetworkList:
		_ = b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GlobalNetworkList); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AWSVPCVoltstackClusterReplaceType.GlobalNetworkChoice has unexpected type %T", x)
	}
	return nil
}

func _AWSVPCVoltstackClusterReplaceType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*AWSVPCVoltstackClusterReplaceType)
	switch tag {
	case 4: // network_policy_choice.no_network_policy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.NetworkPolicyChoice = &AWSVPCVoltstackClusterReplaceType_NoNetworkPolicy{msg}
		return true, err
	case 5: // network_policy_choice.active_network_policies
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_network_firewall.ActiveNetworkPoliciesType)
		err := b.DecodeMessage(msg)
		m.NetworkPolicyChoice = &AWSVPCVoltstackClusterReplaceType_ActiveNetworkPolicies{msg}
		return true, err
	case 7: // forward_proxy_choice.no_forward_proxy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.ForwardProxyChoice = &AWSVPCVoltstackClusterReplaceType_NoForwardProxy{msg}
		return true, err
	case 8: // forward_proxy_choice.active_forward_proxy_policies
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_network_firewall.ActiveForwardProxyPoliciesType)
		err := b.DecodeMessage(msg)
		m.ForwardProxyChoice = &AWSVPCVoltstackClusterReplaceType_ActiveForwardProxyPolicies{msg}
		return true, err
	case 15: // forward_proxy_choice.forward_proxy_allow_all
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.ForwardProxyChoice = &AWSVPCVoltstackClusterReplaceType_ForwardProxyAllowAll{msg}
		return true, err
	case 10: // outside_static_route_choice.no_outside_static_routes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.OutsideStaticRouteChoice = &AWSVPCVoltstackClusterReplaceType_NoOutsideStaticRoutes{msg}
		return true, err
	case 11: // outside_static_route_choice.outside_static_routes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views1.SiteStaticRoutesListType)
		err := b.DecodeMessage(msg)
		m.OutsideStaticRouteChoice = &AWSVPCVoltstackClusterReplaceType_OutsideStaticRoutes{msg}
		return true, err
	case 13: // global_network_choice.no_global_network
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.GlobalNetworkChoice = &AWSVPCVoltstackClusterReplaceType_NoGlobalNetwork{msg}
		return true, err
	case 14: // global_network_choice.global_network_list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views1.GlobalNetworkConnectionListType)
		err := b.DecodeMessage(msg)
		m.GlobalNetworkChoice = &AWSVPCVoltstackClusterReplaceType_GlobalNetworkList{msg}
		return true, err
	default:
		return false, nil
	}
}

func _AWSVPCVoltstackClusterReplaceType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*AWSVPCVoltstackClusterReplaceType)
	// network_policy_choice
	switch x := m.NetworkPolicyChoice.(type) {
	case *AWSVPCVoltstackClusterReplaceType_NoNetworkPolicy:
		s := proto.Size(x.NoNetworkPolicy)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCVoltstackClusterReplaceType_ActiveNetworkPolicies:
		s := proto.Size(x.ActiveNetworkPolicies)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// forward_proxy_choice
	switch x := m.ForwardProxyChoice.(type) {
	case *AWSVPCVoltstackClusterReplaceType_NoForwardProxy:
		s := proto.Size(x.NoForwardProxy)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCVoltstackClusterReplaceType_ActiveForwardProxyPolicies:
		s := proto.Size(x.ActiveForwardProxyPolicies)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCVoltstackClusterReplaceType_ForwardProxyAllowAll:
		s := proto.Size(x.ForwardProxyAllowAll)
		n += proto.SizeVarint(15<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// outside_static_route_choice
	switch x := m.OutsideStaticRouteChoice.(type) {
	case *AWSVPCVoltstackClusterReplaceType_NoOutsideStaticRoutes:
		s := proto.Size(x.NoOutsideStaticRoutes)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCVoltstackClusterReplaceType_OutsideStaticRoutes:
		s := proto.Size(x.OutsideStaticRoutes)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// global_network_choice
	switch x := m.GlobalNetworkChoice.(type) {
	case *AWSVPCVoltstackClusterReplaceType_NoGlobalNetwork:
		s := proto.Size(x.NoGlobalNetwork)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AWSVPCVoltstackClusterReplaceType_GlobalNetworkList:
		s := proto.Size(x.GlobalNetworkList)
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// GlobalSpecType
//
// x-displayName: "Global Specification"
// Shape of the AWS VPC site specification
type GlobalSpecType struct {
	// VPC
	//
	// x-displayName: "VPC"
	// Choice of using existing VPC or create new VPC
	Vpc *ves_io_schema_views1.AWSVPCchoiceType `protobuf:"bytes,1,opt,name=vpc" json:"vpc,omitempty"`
	// Number of interfaces on CE
	//
	// x-displayName: "Select Ingress Gateway or Ingress/Egress Gateway"
	// x-required
	// Choice of deploying one interface or two interface site
	//
	// Types that are valid to be assigned to SiteType:
	//	*GlobalSpecType_IngressGw
	//	*GlobalSpecType_IngressEgressGw
	//	*GlobalSpecType_VoltstackCluster
	SiteType isGlobalSpecType_SiteType `protobuf_oneof:"site_type"`
	// Automatic Deployment
	//
	// x-displayName: "Select Automatic or Assisted Deployment"
	// x-required
	// Choice of deploying automatic via volterra or Assisted using volterra generated parameters.
	//
	// Types that are valid to be assigned to Deployment:
	//	*GlobalSpecType_AwsCred
	//	*GlobalSpecType_Assisted
	Deployment isGlobalSpecType_Deployment `protobuf_oneof:"deployment"`
	// Instance Type
	//
	// x-displayName: "AWS Instance Type for Node"
	// x-example: "a1.xlarge"
	// x-required
	// Select Instance size based on performance needed
	InstanceType string `protobuf:"bytes,6,opt,name=instance_type,json=instanceType,proto3" json:"instance_type,omitempty"`
	// Desired Worker Nodes Per AZ
	//
	// x-displayName: "Desired Worker Nodes Per AZ"
	// x-example: "2"
	// Desired Worker Nodes Per AZ. Max limit is up to 21
	NodesPerAz uint32 `protobuf:"varint,14,opt,name=nodes_per_az,json=nodesPerAz,proto3" json:"nodes_per_az,omitempty"`
	// volterra_software_version
	//
	// x-displayName: "Software Version"
	// x-example: "value"
	// Desired Volterra software version for this site, a string matching released set of software components.
	VolterraSoftwareVersion string `protobuf:"bytes,8,opt,name=volterra_software_version,json=volterraSoftwareVersion,proto3" json:"volterra_software_version,omitempty"`
	// operating_system_version
	//
	// x-displayName: "Operating System Version"
	// x-example: "value"
	// Desired Operating System version for this site.
	OperatingSystemVersion string `protobuf:"bytes,9,opt,name=operating_system_version,json=operatingSystemVersion,proto3" json:"operating_system_version,omitempty"`
	// AWS Region
	//
	// x-displayName: "AWS Region"
	// x-example: "us-east-1"
	// x-required
	// Name for AWS Region.
	AwsRegion string `protobuf:"bytes,12,opt,name=aws_region,json=awsRegion,proto3" json:"aws_region,omitempty"`
	// Cloud Disk size
	//
	// x-displayName: "Cloud Disk Size"
	// x-example: "80"
	// Disk size to be used for this instance in GiB. 80 is 80 GiB
	DiskSize uint32 `protobuf:"varint,15,opt,name=disk_size,json=diskSize,proto3" json:"disk_size,omitempty"`
	// Public SSH key
	//
	// x-displayName: "Public SSH key"
	// x-example: "ssh-rsa AAAAB..."
	// Public SSH key for accessing the site.
	SshKey string `protobuf:"bytes,13,opt,name=ssh_key,json=sshKey,proto3" json:"ssh_key,omitempty"`
	// address
	//
	// x-displayName: "Geographical Address"
	// x-example: "123 Street, city, country, postal code"
	// Site's geographical address that can be used determine its latitude and longitude.
	Address string `protobuf:"bytes,17,opt,name=address,proto3" json:"address,omitempty"`
	// coordinates
	//
	// x-displayName: "Co-ordinates"
	// Site longitude and latitude co-ordinates
	Coordinates *ves_io_schema_site.Coordinates `protobuf:"bytes,18,opt,name=coordinates" json:"coordinates,omitempty"`
	// Logs Streaming
	//
	// x-displayName: "Logs Streaming"
	// x-required
	// Select Logs receiver for logs streaming
	//
	// Types that are valid to be assigned to LogsReceiverChoice:
	//	*GlobalSpecType_LogsStreamingDisabled
	//	*GlobalSpecType_LogReceiver
	LogsReceiverChoice isGlobalSpecType_LogsReceiverChoice `protobuf_oneof:"logs_receiver_choice"`
	// Volterra Software
	//
	// x-displayName: "Volterra Software"
	// Volterra Software Details
	Sw *ves_io_schema_views.VolterraSoftwareType `protobuf:"bytes,22,opt,name=sw" json:"sw,omitempty"`
	// Operating System
	//
	// x-displayName: "Operating System"
	// Operating System Details
	Os *ves_io_schema_views.OperatingSystemType `protobuf:"bytes,23,opt,name=os" json:"os,omitempty"`
	// VIP Params Per Az
	//
	// x-displayName: "VIP Params Per AZ"
	// VIP Parameters Per AZ.
	VipParamsPerAz []*ves_io_schema_site.PublishVIPParamsPerAz `protobuf:"bytes,24,rep,name=vip_params_per_az,json=vipParamsPerAz" json:"vip_params_per_az,omitempty"`
	// user_modification_timestamp
	//
	// x-displayName: "User Modification Timestamp"
	// ModificationTimestamp is a timestamp representing time when the user
	// last modified the object.
	UserModificationTimestamp *google_protobuf1.Timestamp `protobuf:"bytes,25,opt,name=user_modification_timestamp,json=userModificationTimestamp" json:"user_modification_timestamp,omitempty"`
	// Reference to terraform parameters
	//
	// x-displayName: "Terraform Parameters"
	// Reference to view internal object
	TfParams *ves_io_schema_views.ObjectRefType `protobuf:"bytes,999,opt,name=tf_params,json=tfParams" json:"tf_params,omitempty"`
	// view_internal
	//
	// x-displayName: "View Internal"
	// Reference to view internal object
	ViewInternal *ves_io_schema_views.ObjectRefType `protobuf:"bytes,1000,opt,name=view_internal,json=viewInternal" json:"view_internal,omitempty"`
}

func (m *GlobalSpecType) Reset()                    { *m = GlobalSpecType{} }
func (*GlobalSpecType) ProtoMessage()               {}
func (*GlobalSpecType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{6} }

type isGlobalSpecType_SiteType interface {
	isGlobalSpecType_SiteType()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGlobalSpecType_Deployment interface {
	isGlobalSpecType_Deployment()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGlobalSpecType_LogsReceiverChoice interface {
	isGlobalSpecType_LogsReceiverChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type GlobalSpecType_IngressGw struct {
	IngressGw *AWSVPCIngressGwType `protobuf:"bytes,2,opt,name=ingress_gw,json=ingressGw,oneof"`
}
type GlobalSpecType_IngressEgressGw struct {
	IngressEgressGw *AWSVPCIngressEgressGwType `protobuf:"bytes,3,opt,name=ingress_egress_gw,json=ingressEgressGw,oneof"`
}
type GlobalSpecType_VoltstackCluster struct {
	VoltstackCluster *AWSVPCVoltstackClusterType `protobuf:"bytes,16,opt,name=voltstack_cluster,json=voltstackCluster,oneof"`
}
type GlobalSpecType_AwsCred struct {
	AwsCred *ves_io_schema_views.ObjectRefType `protobuf:"bytes,4,opt,name=aws_cred,json=awsCred,oneof"`
}
type GlobalSpecType_Assisted struct {
	Assisted *ves_io_schema4.Empty `protobuf:"bytes,5,opt,name=assisted,oneof"`
}
type GlobalSpecType_LogsStreamingDisabled struct {
	LogsStreamingDisabled *ves_io_schema4.Empty `protobuf:"bytes,20,opt,name=logs_streaming_disabled,json=logsStreamingDisabled,oneof"`
}
type GlobalSpecType_LogReceiver struct {
	LogReceiver *ves_io_schema_views.ObjectRefType `protobuf:"bytes,21,opt,name=log_receiver,json=logReceiver,oneof"`
}

func (*GlobalSpecType_IngressGw) isGlobalSpecType_SiteType()                       {}
func (*GlobalSpecType_IngressEgressGw) isGlobalSpecType_SiteType()                 {}
func (*GlobalSpecType_VoltstackCluster) isGlobalSpecType_SiteType()                {}
func (*GlobalSpecType_AwsCred) isGlobalSpecType_Deployment()                       {}
func (*GlobalSpecType_Assisted) isGlobalSpecType_Deployment()                      {}
func (*GlobalSpecType_LogsStreamingDisabled) isGlobalSpecType_LogsReceiverChoice() {}
func (*GlobalSpecType_LogReceiver) isGlobalSpecType_LogsReceiverChoice()           {}

func (m *GlobalSpecType) GetSiteType() isGlobalSpecType_SiteType {
	if m != nil {
		return m.SiteType
	}
	return nil
}
func (m *GlobalSpecType) GetDeployment() isGlobalSpecType_Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}
func (m *GlobalSpecType) GetLogsReceiverChoice() isGlobalSpecType_LogsReceiverChoice {
	if m != nil {
		return m.LogsReceiverChoice
	}
	return nil
}

func (m *GlobalSpecType) GetVpc() *ves_io_schema_views1.AWSVPCchoiceType {
	if m != nil {
		return m.Vpc
	}
	return nil
}

func (m *GlobalSpecType) GetIngressGw() *AWSVPCIngressGwType {
	if x, ok := m.GetSiteType().(*GlobalSpecType_IngressGw); ok {
		return x.IngressGw
	}
	return nil
}

func (m *GlobalSpecType) GetIngressEgressGw() *AWSVPCIngressEgressGwType {
	if x, ok := m.GetSiteType().(*GlobalSpecType_IngressEgressGw); ok {
		return x.IngressEgressGw
	}
	return nil
}

func (m *GlobalSpecType) GetVoltstackCluster() *AWSVPCVoltstackClusterType {
	if x, ok := m.GetSiteType().(*GlobalSpecType_VoltstackCluster); ok {
		return x.VoltstackCluster
	}
	return nil
}

func (m *GlobalSpecType) GetAwsCred() *ves_io_schema_views.ObjectRefType {
	if x, ok := m.GetDeployment().(*GlobalSpecType_AwsCred); ok {
		return x.AwsCred
	}
	return nil
}

func (m *GlobalSpecType) GetAssisted() *ves_io_schema4.Empty {
	if x, ok := m.GetDeployment().(*GlobalSpecType_Assisted); ok {
		return x.Assisted
	}
	return nil
}

func (m *GlobalSpecType) GetInstanceType() string {
	if m != nil {
		return m.InstanceType
	}
	return ""
}

func (m *GlobalSpecType) GetNodesPerAz() uint32 {
	if m != nil {
		return m.NodesPerAz
	}
	return 0
}

func (m *GlobalSpecType) GetVolterraSoftwareVersion() string {
	if m != nil {
		return m.VolterraSoftwareVersion
	}
	return ""
}

func (m *GlobalSpecType) GetOperatingSystemVersion() string {
	if m != nil {
		return m.OperatingSystemVersion
	}
	return ""
}

func (m *GlobalSpecType) GetAwsRegion() string {
	if m != nil {
		return m.AwsRegion
	}
	return ""
}

func (m *GlobalSpecType) GetDiskSize() uint32 {
	if m != nil {
		return m.DiskSize
	}
	return 0
}

func (m *GlobalSpecType) GetSshKey() string {
	if m != nil {
		return m.SshKey
	}
	return ""
}

func (m *GlobalSpecType) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GlobalSpecType) GetCoordinates() *ves_io_schema_site.Coordinates {
	if m != nil {
		return m.Coordinates
	}
	return nil
}

func (m *GlobalSpecType) GetLogsStreamingDisabled() *ves_io_schema4.Empty {
	if x, ok := m.GetLogsReceiverChoice().(*GlobalSpecType_LogsStreamingDisabled); ok {
		return x.LogsStreamingDisabled
	}
	return nil
}

func (m *GlobalSpecType) GetLogReceiver() *ves_io_schema_views.ObjectRefType {
	if x, ok := m.GetLogsReceiverChoice().(*GlobalSpecType_LogReceiver); ok {
		return x.LogReceiver
	}
	return nil
}

func (m *GlobalSpecType) GetSw() *ves_io_schema_views.VolterraSoftwareType {
	if m != nil {
		return m.Sw
	}
	return nil
}

func (m *GlobalSpecType) GetOs() *ves_io_schema_views.OperatingSystemType {
	if m != nil {
		return m.Os
	}
	return nil
}

func (m *GlobalSpecType) GetVipParamsPerAz() []*ves_io_schema_site.PublishVIPParamsPerAz {
	if m != nil {
		return m.VipParamsPerAz
	}
	return nil
}

func (m *GlobalSpecType) GetUserModificationTimestamp() *google_protobuf1.Timestamp {
	if m != nil {
		return m.UserModificationTimestamp
	}
	return nil
}

func (m *GlobalSpecType) GetTfParams() *ves_io_schema_views.ObjectRefType {
	if m != nil {
		return m.TfParams
	}
	return nil
}

func (m *GlobalSpecType) GetViewInternal() *ves_io_schema_views.ObjectRefType {
	if m != nil {
		return m.ViewInternal
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GlobalSpecType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GlobalSpecType_OneofMarshaler, _GlobalSpecType_OneofUnmarshaler, _GlobalSpecType_OneofSizer, []interface{}{
		(*GlobalSpecType_IngressGw)(nil),
		(*GlobalSpecType_IngressEgressGw)(nil),
		(*GlobalSpecType_VoltstackCluster)(nil),
		(*GlobalSpecType_AwsCred)(nil),
		(*GlobalSpecType_Assisted)(nil),
		(*GlobalSpecType_LogsStreamingDisabled)(nil),
		(*GlobalSpecType_LogReceiver)(nil),
	}
}

func _GlobalSpecType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GlobalSpecType)
	// site_type
	switch x := m.SiteType.(type) {
	case *GlobalSpecType_IngressGw:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IngressGw); err != nil {
			return err
		}
	case *GlobalSpecType_IngressEgressGw:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IngressEgressGw); err != nil {
			return err
		}
	case *GlobalSpecType_VoltstackCluster:
		_ = b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.VoltstackCluster); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GlobalSpecType.SiteType has unexpected type %T", x)
	}
	// deployment
	switch x := m.Deployment.(type) {
	case *GlobalSpecType_AwsCred:
		_ = b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AwsCred); err != nil {
			return err
		}
	case *GlobalSpecType_Assisted:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Assisted); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GlobalSpecType.Deployment has unexpected type %T", x)
	}
	// logs_receiver_choice
	switch x := m.LogsReceiverChoice.(type) {
	case *GlobalSpecType_LogsStreamingDisabled:
		_ = b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LogsStreamingDisabled); err != nil {
			return err
		}
	case *GlobalSpecType_LogReceiver:
		_ = b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LogReceiver); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GlobalSpecType.LogsReceiverChoice has unexpected type %T", x)
	}
	return nil
}

func _GlobalSpecType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GlobalSpecType)
	switch tag {
	case 2: // site_type.ingress_gw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AWSVPCIngressGwType)
		err := b.DecodeMessage(msg)
		m.SiteType = &GlobalSpecType_IngressGw{msg}
		return true, err
	case 3: // site_type.ingress_egress_gw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AWSVPCIngressEgressGwType)
		err := b.DecodeMessage(msg)
		m.SiteType = &GlobalSpecType_IngressEgressGw{msg}
		return true, err
	case 16: // site_type.voltstack_cluster
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AWSVPCVoltstackClusterType)
		err := b.DecodeMessage(msg)
		m.SiteType = &GlobalSpecType_VoltstackCluster{msg}
		return true, err
	case 4: // deployment.aws_cred
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views.ObjectRefType)
		err := b.DecodeMessage(msg)
		m.Deployment = &GlobalSpecType_AwsCred{msg}
		return true, err
	case 5: // deployment.assisted
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.Deployment = &GlobalSpecType_Assisted{msg}
		return true, err
	case 20: // logs_receiver_choice.logs_streaming_disabled
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.LogsReceiverChoice = &GlobalSpecType_LogsStreamingDisabled{msg}
		return true, err
	case 21: // logs_receiver_choice.log_receiver
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views.ObjectRefType)
		err := b.DecodeMessage(msg)
		m.LogsReceiverChoice = &GlobalSpecType_LogReceiver{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GlobalSpecType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GlobalSpecType)
	// site_type
	switch x := m.SiteType.(type) {
	case *GlobalSpecType_IngressGw:
		s := proto.Size(x.IngressGw)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GlobalSpecType_IngressEgressGw:
		s := proto.Size(x.IngressEgressGw)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GlobalSpecType_VoltstackCluster:
		s := proto.Size(x.VoltstackCluster)
		n += proto.SizeVarint(16<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// deployment
	switch x := m.Deployment.(type) {
	case *GlobalSpecType_AwsCred:
		s := proto.Size(x.AwsCred)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GlobalSpecType_Assisted:
		s := proto.Size(x.Assisted)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// logs_receiver_choice
	switch x := m.LogsReceiverChoice.(type) {
	case *GlobalSpecType_LogsStreamingDisabled:
		s := proto.Size(x.LogsStreamingDisabled)
		n += proto.SizeVarint(20<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GlobalSpecType_LogReceiver:
		s := proto.Size(x.LogReceiver)
		n += proto.SizeVarint(21<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// CreateSpecType
//
// x-displayName: "Create AWS VPC site"
// Shape of the AWS VPC site specification
type CreateSpecType struct {
	Vpc *ves_io_schema_views1.AWSVPCchoiceType `protobuf:"bytes,1,opt,name=vpc" json:"vpc,omitempty"`
	// Types that are valid to be assigned to SiteType:
	//	*CreateSpecType_IngressGw
	//	*CreateSpecType_IngressEgressGw
	//	*CreateSpecType_VoltstackCluster
	SiteType isCreateSpecType_SiteType `protobuf_oneof:"site_type"`
	// Types that are valid to be assigned to Deployment:
	//	*CreateSpecType_AwsCred
	//	*CreateSpecType_Assisted
	Deployment   isCreateSpecType_Deployment     `protobuf_oneof:"deployment"`
	InstanceType string                          `protobuf:"bytes,6,opt,name=instance_type,json=instanceType,proto3" json:"instance_type,omitempty"`
	NodesPerAz   uint32                          `protobuf:"varint,14,opt,name=nodes_per_az,json=nodesPerAz,proto3" json:"nodes_per_az,omitempty"`
	DiskSize     uint32                          `protobuf:"varint,15,opt,name=disk_size,json=diskSize,proto3" json:"disk_size,omitempty"`
	AwsRegion    string                          `protobuf:"bytes,12,opt,name=aws_region,json=awsRegion,proto3" json:"aws_region,omitempty"`
	SshKey       string                          `protobuf:"bytes,13,opt,name=ssh_key,json=sshKey,proto3" json:"ssh_key,omitempty"`
	Address      string                          `protobuf:"bytes,17,opt,name=address,proto3" json:"address,omitempty"`
	Coordinates  *ves_io_schema_site.Coordinates `protobuf:"bytes,18,opt,name=coordinates" json:"coordinates,omitempty"`
	// Types that are valid to be assigned to LogsReceiverChoice:
	//	*CreateSpecType_LogsStreamingDisabled
	//	*CreateSpecType_LogReceiver
	LogsReceiverChoice isCreateSpecType_LogsReceiverChoice `protobuf_oneof:"logs_receiver_choice"`
	// Volterra Software
	//
	// x-displayName: "Volterra Software"
	// Volterra Software Details
	Sw *ves_io_schema_views.VolterraSoftwareType `protobuf:"bytes,22,opt,name=sw" json:"sw,omitempty"`
	// Operating System
	//
	// x-displayName: "Operating System"
	// Operating System Details
	Os *ves_io_schema_views.OperatingSystemType `protobuf:"bytes,23,opt,name=os" json:"os,omitempty"`
}

func (m *CreateSpecType) Reset()                    { *m = CreateSpecType{} }
func (*CreateSpecType) ProtoMessage()               {}
func (*CreateSpecType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{7} }

type isCreateSpecType_SiteType interface {
	isCreateSpecType_SiteType()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isCreateSpecType_Deployment interface {
	isCreateSpecType_Deployment()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isCreateSpecType_LogsReceiverChoice interface {
	isCreateSpecType_LogsReceiverChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type CreateSpecType_IngressGw struct {
	IngressGw *AWSVPCIngressGwType `protobuf:"bytes,2,opt,name=ingress_gw,json=ingressGw,oneof"`
}
type CreateSpecType_IngressEgressGw struct {
	IngressEgressGw *AWSVPCIngressEgressGwType `protobuf:"bytes,3,opt,name=ingress_egress_gw,json=ingressEgressGw,oneof"`
}
type CreateSpecType_VoltstackCluster struct {
	VoltstackCluster *AWSVPCVoltstackClusterType `protobuf:"bytes,16,opt,name=voltstack_cluster,json=voltstackCluster,oneof"`
}
type CreateSpecType_AwsCred struct {
	AwsCred *ves_io_schema_views.ObjectRefType `protobuf:"bytes,4,opt,name=aws_cred,json=awsCred,oneof"`
}
type CreateSpecType_Assisted struct {
	Assisted *ves_io_schema4.Empty `protobuf:"bytes,5,opt,name=assisted,oneof"`
}
type CreateSpecType_LogsStreamingDisabled struct {
	LogsStreamingDisabled *ves_io_schema4.Empty `protobuf:"bytes,20,opt,name=logs_streaming_disabled,json=logsStreamingDisabled,oneof"`
}
type CreateSpecType_LogReceiver struct {
	LogReceiver *ves_io_schema_views.ObjectRefType `protobuf:"bytes,21,opt,name=log_receiver,json=logReceiver,oneof"`
}

func (*CreateSpecType_IngressGw) isCreateSpecType_SiteType()                       {}
func (*CreateSpecType_IngressEgressGw) isCreateSpecType_SiteType()                 {}
func (*CreateSpecType_VoltstackCluster) isCreateSpecType_SiteType()                {}
func (*CreateSpecType_AwsCred) isCreateSpecType_Deployment()                       {}
func (*CreateSpecType_Assisted) isCreateSpecType_Deployment()                      {}
func (*CreateSpecType_LogsStreamingDisabled) isCreateSpecType_LogsReceiverChoice() {}
func (*CreateSpecType_LogReceiver) isCreateSpecType_LogsReceiverChoice()           {}

func (m *CreateSpecType) GetSiteType() isCreateSpecType_SiteType {
	if m != nil {
		return m.SiteType
	}
	return nil
}
func (m *CreateSpecType) GetDeployment() isCreateSpecType_Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}
func (m *CreateSpecType) GetLogsReceiverChoice() isCreateSpecType_LogsReceiverChoice {
	if m != nil {
		return m.LogsReceiverChoice
	}
	return nil
}

func (m *CreateSpecType) GetVpc() *ves_io_schema_views1.AWSVPCchoiceType {
	if m != nil {
		return m.Vpc
	}
	return nil
}

func (m *CreateSpecType) GetIngressGw() *AWSVPCIngressGwType {
	if x, ok := m.GetSiteType().(*CreateSpecType_IngressGw); ok {
		return x.IngressGw
	}
	return nil
}

func (m *CreateSpecType) GetIngressEgressGw() *AWSVPCIngressEgressGwType {
	if x, ok := m.GetSiteType().(*CreateSpecType_IngressEgressGw); ok {
		return x.IngressEgressGw
	}
	return nil
}

func (m *CreateSpecType) GetVoltstackCluster() *AWSVPCVoltstackClusterType {
	if x, ok := m.GetSiteType().(*CreateSpecType_VoltstackCluster); ok {
		return x.VoltstackCluster
	}
	return nil
}

func (m *CreateSpecType) GetAwsCred() *ves_io_schema_views.ObjectRefType {
	if x, ok := m.GetDeployment().(*CreateSpecType_AwsCred); ok {
		return x.AwsCred
	}
	return nil
}

func (m *CreateSpecType) GetAssisted() *ves_io_schema4.Empty {
	if x, ok := m.GetDeployment().(*CreateSpecType_Assisted); ok {
		return x.Assisted
	}
	return nil
}

func (m *CreateSpecType) GetInstanceType() string {
	if m != nil {
		return m.InstanceType
	}
	return ""
}

func (m *CreateSpecType) GetNodesPerAz() uint32 {
	if m != nil {
		return m.NodesPerAz
	}
	return 0
}

func (m *CreateSpecType) GetDiskSize() uint32 {
	if m != nil {
		return m.DiskSize
	}
	return 0
}

func (m *CreateSpecType) GetAwsRegion() string {
	if m != nil {
		return m.AwsRegion
	}
	return ""
}

func (m *CreateSpecType) GetSshKey() string {
	if m != nil {
		return m.SshKey
	}
	return ""
}

func (m *CreateSpecType) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CreateSpecType) GetCoordinates() *ves_io_schema_site.Coordinates {
	if m != nil {
		return m.Coordinates
	}
	return nil
}

func (m *CreateSpecType) GetLogsStreamingDisabled() *ves_io_schema4.Empty {
	if x, ok := m.GetLogsReceiverChoice().(*CreateSpecType_LogsStreamingDisabled); ok {
		return x.LogsStreamingDisabled
	}
	return nil
}

func (m *CreateSpecType) GetLogReceiver() *ves_io_schema_views.ObjectRefType {
	if x, ok := m.GetLogsReceiverChoice().(*CreateSpecType_LogReceiver); ok {
		return x.LogReceiver
	}
	return nil
}

func (m *CreateSpecType) GetSw() *ves_io_schema_views.VolterraSoftwareType {
	if m != nil {
		return m.Sw
	}
	return nil
}

func (m *CreateSpecType) GetOs() *ves_io_schema_views.OperatingSystemType {
	if m != nil {
		return m.Os
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CreateSpecType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CreateSpecType_OneofMarshaler, _CreateSpecType_OneofUnmarshaler, _CreateSpecType_OneofSizer, []interface{}{
		(*CreateSpecType_IngressGw)(nil),
		(*CreateSpecType_IngressEgressGw)(nil),
		(*CreateSpecType_VoltstackCluster)(nil),
		(*CreateSpecType_AwsCred)(nil),
		(*CreateSpecType_Assisted)(nil),
		(*CreateSpecType_LogsStreamingDisabled)(nil),
		(*CreateSpecType_LogReceiver)(nil),
	}
}

func _CreateSpecType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CreateSpecType)
	// site_type
	switch x := m.SiteType.(type) {
	case *CreateSpecType_IngressGw:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IngressGw); err != nil {
			return err
		}
	case *CreateSpecType_IngressEgressGw:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IngressEgressGw); err != nil {
			return err
		}
	case *CreateSpecType_VoltstackCluster:
		_ = b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.VoltstackCluster); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CreateSpecType.SiteType has unexpected type %T", x)
	}
	// deployment
	switch x := m.Deployment.(type) {
	case *CreateSpecType_AwsCred:
		_ = b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AwsCred); err != nil {
			return err
		}
	case *CreateSpecType_Assisted:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Assisted); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CreateSpecType.Deployment has unexpected type %T", x)
	}
	// logs_receiver_choice
	switch x := m.LogsReceiverChoice.(type) {
	case *CreateSpecType_LogsStreamingDisabled:
		_ = b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LogsStreamingDisabled); err != nil {
			return err
		}
	case *CreateSpecType_LogReceiver:
		_ = b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LogReceiver); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CreateSpecType.LogsReceiverChoice has unexpected type %T", x)
	}
	return nil
}

func _CreateSpecType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CreateSpecType)
	switch tag {
	case 2: // site_type.ingress_gw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AWSVPCIngressGwType)
		err := b.DecodeMessage(msg)
		m.SiteType = &CreateSpecType_IngressGw{msg}
		return true, err
	case 3: // site_type.ingress_egress_gw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AWSVPCIngressEgressGwType)
		err := b.DecodeMessage(msg)
		m.SiteType = &CreateSpecType_IngressEgressGw{msg}
		return true, err
	case 16: // site_type.voltstack_cluster
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AWSVPCVoltstackClusterType)
		err := b.DecodeMessage(msg)
		m.SiteType = &CreateSpecType_VoltstackCluster{msg}
		return true, err
	case 4: // deployment.aws_cred
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views.ObjectRefType)
		err := b.DecodeMessage(msg)
		m.Deployment = &CreateSpecType_AwsCred{msg}
		return true, err
	case 5: // deployment.assisted
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.Deployment = &CreateSpecType_Assisted{msg}
		return true, err
	case 20: // logs_receiver_choice.logs_streaming_disabled
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.LogsReceiverChoice = &CreateSpecType_LogsStreamingDisabled{msg}
		return true, err
	case 21: // logs_receiver_choice.log_receiver
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views.ObjectRefType)
		err := b.DecodeMessage(msg)
		m.LogsReceiverChoice = &CreateSpecType_LogReceiver{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CreateSpecType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CreateSpecType)
	// site_type
	switch x := m.SiteType.(type) {
	case *CreateSpecType_IngressGw:
		s := proto.Size(x.IngressGw)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CreateSpecType_IngressEgressGw:
		s := proto.Size(x.IngressEgressGw)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CreateSpecType_VoltstackCluster:
		s := proto.Size(x.VoltstackCluster)
		n += proto.SizeVarint(16<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// deployment
	switch x := m.Deployment.(type) {
	case *CreateSpecType_AwsCred:
		s := proto.Size(x.AwsCred)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CreateSpecType_Assisted:
		s := proto.Size(x.Assisted)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// logs_receiver_choice
	switch x := m.LogsReceiverChoice.(type) {
	case *CreateSpecType_LogsStreamingDisabled:
		s := proto.Size(x.LogsStreamingDisabled)
		n += proto.SizeVarint(20<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CreateSpecType_LogReceiver:
		s := proto.Size(x.LogReceiver)
		n += proto.SizeVarint(21<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// ReplaceSpecType
//
// x-displayName: "Replace AWS VPC site"
// Shape of the AWS VPC site replace specification
type ReplaceSpecType struct {
	// Site Type
	//
	// x-displayName: "Edit Networking Config"
	// x-required
	// Site type ingress or ingress-egress gateway cannot be changed
	//
	// Types that are valid to be assigned to SiteType:
	//	*ReplaceSpecType_IngressGw
	//	*ReplaceSpecType_IngressEgressGw
	//	*ReplaceSpecType_VoltstackCluster
	SiteType    isReplaceSpecType_SiteType      `protobuf_oneof:"site_type"`
	NodesPerAz  uint32                          `protobuf:"varint,14,opt,name=nodes_per_az,json=nodesPerAz,proto3" json:"nodes_per_az,omitempty"`
	Address     string                          `protobuf:"bytes,17,opt,name=address,proto3" json:"address,omitempty"`
	Coordinates *ves_io_schema_site.Coordinates `protobuf:"bytes,18,opt,name=coordinates" json:"coordinates,omitempty"`
	// Types that are valid to be assigned to LogsReceiverChoice:
	//	*ReplaceSpecType_LogsStreamingDisabled
	//	*ReplaceSpecType_LogReceiver
	LogsReceiverChoice isReplaceSpecType_LogsReceiverChoice `protobuf_oneof:"logs_receiver_choice"`
}

func (m *ReplaceSpecType) Reset()                    { *m = ReplaceSpecType{} }
func (*ReplaceSpecType) ProtoMessage()               {}
func (*ReplaceSpecType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{8} }

type isReplaceSpecType_SiteType interface {
	isReplaceSpecType_SiteType()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isReplaceSpecType_LogsReceiverChoice interface {
	isReplaceSpecType_LogsReceiverChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type ReplaceSpecType_IngressGw struct {
	IngressGw *AWSVPCIngressGwReplaceType `protobuf:"bytes,2,opt,name=ingress_gw,json=ingressGw,oneof"`
}
type ReplaceSpecType_IngressEgressGw struct {
	IngressEgressGw *AWSVPCIngressEgressGwReplaceType `protobuf:"bytes,3,opt,name=ingress_egress_gw,json=ingressEgressGw,oneof"`
}
type ReplaceSpecType_VoltstackCluster struct {
	VoltstackCluster *AWSVPCVoltstackClusterReplaceType `protobuf:"bytes,16,opt,name=voltstack_cluster,json=voltstackCluster,oneof"`
}
type ReplaceSpecType_LogsStreamingDisabled struct {
	LogsStreamingDisabled *ves_io_schema4.Empty `protobuf:"bytes,20,opt,name=logs_streaming_disabled,json=logsStreamingDisabled,oneof"`
}
type ReplaceSpecType_LogReceiver struct {
	LogReceiver *ves_io_schema_views.ObjectRefType `protobuf:"bytes,21,opt,name=log_receiver,json=logReceiver,oneof"`
}

func (*ReplaceSpecType_IngressGw) isReplaceSpecType_SiteType()                       {}
func (*ReplaceSpecType_IngressEgressGw) isReplaceSpecType_SiteType()                 {}
func (*ReplaceSpecType_VoltstackCluster) isReplaceSpecType_SiteType()                {}
func (*ReplaceSpecType_LogsStreamingDisabled) isReplaceSpecType_LogsReceiverChoice() {}
func (*ReplaceSpecType_LogReceiver) isReplaceSpecType_LogsReceiverChoice()           {}

func (m *ReplaceSpecType) GetSiteType() isReplaceSpecType_SiteType {
	if m != nil {
		return m.SiteType
	}
	return nil
}
func (m *ReplaceSpecType) GetLogsReceiverChoice() isReplaceSpecType_LogsReceiverChoice {
	if m != nil {
		return m.LogsReceiverChoice
	}
	return nil
}

func (m *ReplaceSpecType) GetIngressGw() *AWSVPCIngressGwReplaceType {
	if x, ok := m.GetSiteType().(*ReplaceSpecType_IngressGw); ok {
		return x.IngressGw
	}
	return nil
}

func (m *ReplaceSpecType) GetIngressEgressGw() *AWSVPCIngressEgressGwReplaceType {
	if x, ok := m.GetSiteType().(*ReplaceSpecType_IngressEgressGw); ok {
		return x.IngressEgressGw
	}
	return nil
}

func (m *ReplaceSpecType) GetVoltstackCluster() *AWSVPCVoltstackClusterReplaceType {
	if x, ok := m.GetSiteType().(*ReplaceSpecType_VoltstackCluster); ok {
		return x.VoltstackCluster
	}
	return nil
}

func (m *ReplaceSpecType) GetNodesPerAz() uint32 {
	if m != nil {
		return m.NodesPerAz
	}
	return 0
}

func (m *ReplaceSpecType) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ReplaceSpecType) GetCoordinates() *ves_io_schema_site.Coordinates {
	if m != nil {
		return m.Coordinates
	}
	return nil
}

func (m *ReplaceSpecType) GetLogsStreamingDisabled() *ves_io_schema4.Empty {
	if x, ok := m.GetLogsReceiverChoice().(*ReplaceSpecType_LogsStreamingDisabled); ok {
		return x.LogsStreamingDisabled
	}
	return nil
}

func (m *ReplaceSpecType) GetLogReceiver() *ves_io_schema_views.ObjectRefType {
	if x, ok := m.GetLogsReceiverChoice().(*ReplaceSpecType_LogReceiver); ok {
		return x.LogReceiver
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ReplaceSpecType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ReplaceSpecType_OneofMarshaler, _ReplaceSpecType_OneofUnmarshaler, _ReplaceSpecType_OneofSizer, []interface{}{
		(*ReplaceSpecType_IngressGw)(nil),
		(*ReplaceSpecType_IngressEgressGw)(nil),
		(*ReplaceSpecType_VoltstackCluster)(nil),
		(*ReplaceSpecType_LogsStreamingDisabled)(nil),
		(*ReplaceSpecType_LogReceiver)(nil),
	}
}

func _ReplaceSpecType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ReplaceSpecType)
	// site_type
	switch x := m.SiteType.(type) {
	case *ReplaceSpecType_IngressGw:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IngressGw); err != nil {
			return err
		}
	case *ReplaceSpecType_IngressEgressGw:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IngressEgressGw); err != nil {
			return err
		}
	case *ReplaceSpecType_VoltstackCluster:
		_ = b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.VoltstackCluster); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ReplaceSpecType.SiteType has unexpected type %T", x)
	}
	// logs_receiver_choice
	switch x := m.LogsReceiverChoice.(type) {
	case *ReplaceSpecType_LogsStreamingDisabled:
		_ = b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LogsStreamingDisabled); err != nil {
			return err
		}
	case *ReplaceSpecType_LogReceiver:
		_ = b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LogReceiver); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ReplaceSpecType.LogsReceiverChoice has unexpected type %T", x)
	}
	return nil
}

func _ReplaceSpecType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ReplaceSpecType)
	switch tag {
	case 2: // site_type.ingress_gw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AWSVPCIngressGwReplaceType)
		err := b.DecodeMessage(msg)
		m.SiteType = &ReplaceSpecType_IngressGw{msg}
		return true, err
	case 3: // site_type.ingress_egress_gw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AWSVPCIngressEgressGwReplaceType)
		err := b.DecodeMessage(msg)
		m.SiteType = &ReplaceSpecType_IngressEgressGw{msg}
		return true, err
	case 16: // site_type.voltstack_cluster
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AWSVPCVoltstackClusterReplaceType)
		err := b.DecodeMessage(msg)
		m.SiteType = &ReplaceSpecType_VoltstackCluster{msg}
		return true, err
	case 20: // logs_receiver_choice.logs_streaming_disabled
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.LogsReceiverChoice = &ReplaceSpecType_LogsStreamingDisabled{msg}
		return true, err
	case 21: // logs_receiver_choice.log_receiver
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views.ObjectRefType)
		err := b.DecodeMessage(msg)
		m.LogsReceiverChoice = &ReplaceSpecType_LogReceiver{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ReplaceSpecType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ReplaceSpecType)
	// site_type
	switch x := m.SiteType.(type) {
	case *ReplaceSpecType_IngressGw:
		s := proto.Size(x.IngressGw)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplaceSpecType_IngressEgressGw:
		s := proto.Size(x.IngressEgressGw)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplaceSpecType_VoltstackCluster:
		s := proto.Size(x.VoltstackCluster)
		n += proto.SizeVarint(16<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// logs_receiver_choice
	switch x := m.LogsReceiverChoice.(type) {
	case *ReplaceSpecType_LogsStreamingDisabled:
		s := proto.Size(x.LogsStreamingDisabled)
		n += proto.SizeVarint(20<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplaceSpecType_LogReceiver:
		s := proto.Size(x.LogReceiver)
		n += proto.SizeVarint(21<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// GetSpecType
//
// x-displayName: "Get AWS VPC site"
// Shape of the AWS VPC site specification
type GetSpecType struct {
	Vpc *ves_io_schema_views1.AWSVPCchoiceType `protobuf:"bytes,1,opt,name=vpc" json:"vpc,omitempty"`
	// Types that are valid to be assigned to SiteType:
	//	*GetSpecType_IngressGw
	//	*GetSpecType_IngressEgressGw
	//	*GetSpecType_VoltstackCluster
	SiteType isGetSpecType_SiteType `protobuf_oneof:"site_type"`
	// Types that are valid to be assigned to Deployment:
	//	*GetSpecType_AwsCred
	//	*GetSpecType_Assisted
	Deployment              isGetSpecType_Deployment        `protobuf_oneof:"deployment"`
	InstanceType            string                          `protobuf:"bytes,6,opt,name=instance_type,json=instanceType,proto3" json:"instance_type,omitempty"`
	NodesPerAz              uint32                          `protobuf:"varint,14,opt,name=nodes_per_az,json=nodesPerAz,proto3" json:"nodes_per_az,omitempty"`
	DiskSize                uint32                          `protobuf:"varint,15,opt,name=disk_size,json=diskSize,proto3" json:"disk_size,omitempty"`
	VolterraSoftwareVersion string                          `protobuf:"bytes,8,opt,name=volterra_software_version,json=volterraSoftwareVersion,proto3" json:"volterra_software_version,omitempty"`
	OperatingSystemVersion  string                          `protobuf:"bytes,9,opt,name=operating_system_version,json=operatingSystemVersion,proto3" json:"operating_system_version,omitempty"`
	AwsRegion               string                          `protobuf:"bytes,12,opt,name=aws_region,json=awsRegion,proto3" json:"aws_region,omitempty"`
	SshKey                  string                          `protobuf:"bytes,13,opt,name=ssh_key,json=sshKey,proto3" json:"ssh_key,omitempty"`
	Address                 string                          `protobuf:"bytes,17,opt,name=address,proto3" json:"address,omitempty"`
	Coordinates             *ves_io_schema_site.Coordinates `protobuf:"bytes,18,opt,name=coordinates" json:"coordinates,omitempty"`
	// Types that are valid to be assigned to LogsReceiverChoice:
	//	*GetSpecType_LogsStreamingDisabled
	//	*GetSpecType_LogReceiver
	LogsReceiverChoice        isGetSpecType_LogsReceiverChoice            `protobuf_oneof:"logs_receiver_choice"`
	SiteState                 ves_io_schema_site.SiteState                `protobuf:"varint,22,opt,name=site_state,json=siteState,proto3,enum=ves.io.schema.site.SiteState" json:"site_state,omitempty"`
	VipParamsPerAz            []*ves_io_schema_site.PublishVIPParamsPerAz `protobuf:"bytes,24,rep,name=vip_params_per_az,json=vipParamsPerAz" json:"vip_params_per_az,omitempty"`
	UserModificationTimestamp *google_protobuf1.Timestamp                 `protobuf:"bytes,25,opt,name=user_modification_timestamp,json=userModificationTimestamp" json:"user_modification_timestamp,omitempty"`
}

func (m *GetSpecType) Reset()                    { *m = GetSpecType{} }
func (*GetSpecType) ProtoMessage()               {}
func (*GetSpecType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{9} }

type isGetSpecType_SiteType interface {
	isGetSpecType_SiteType()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGetSpecType_Deployment interface {
	isGetSpecType_Deployment()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGetSpecType_LogsReceiverChoice interface {
	isGetSpecType_LogsReceiverChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type GetSpecType_IngressGw struct {
	IngressGw *AWSVPCIngressGwType `protobuf:"bytes,2,opt,name=ingress_gw,json=ingressGw,oneof"`
}
type GetSpecType_IngressEgressGw struct {
	IngressEgressGw *AWSVPCIngressEgressGwType `protobuf:"bytes,3,opt,name=ingress_egress_gw,json=ingressEgressGw,oneof"`
}
type GetSpecType_VoltstackCluster struct {
	VoltstackCluster *AWSVPCVoltstackClusterType `protobuf:"bytes,16,opt,name=voltstack_cluster,json=voltstackCluster,oneof"`
}
type GetSpecType_AwsCred struct {
	AwsCred *ves_io_schema_views.ObjectRefType `protobuf:"bytes,4,opt,name=aws_cred,json=awsCred,oneof"`
}
type GetSpecType_Assisted struct {
	Assisted *ves_io_schema4.Empty `protobuf:"bytes,5,opt,name=assisted,oneof"`
}
type GetSpecType_LogsStreamingDisabled struct {
	LogsStreamingDisabled *ves_io_schema4.Empty `protobuf:"bytes,20,opt,name=logs_streaming_disabled,json=logsStreamingDisabled,oneof"`
}
type GetSpecType_LogReceiver struct {
	LogReceiver *ves_io_schema_views.ObjectRefType `protobuf:"bytes,21,opt,name=log_receiver,json=logReceiver,oneof"`
}

func (*GetSpecType_IngressGw) isGetSpecType_SiteType()                       {}
func (*GetSpecType_IngressEgressGw) isGetSpecType_SiteType()                 {}
func (*GetSpecType_VoltstackCluster) isGetSpecType_SiteType()                {}
func (*GetSpecType_AwsCred) isGetSpecType_Deployment()                       {}
func (*GetSpecType_Assisted) isGetSpecType_Deployment()                      {}
func (*GetSpecType_LogsStreamingDisabled) isGetSpecType_LogsReceiverChoice() {}
func (*GetSpecType_LogReceiver) isGetSpecType_LogsReceiverChoice()           {}

func (m *GetSpecType) GetSiteType() isGetSpecType_SiteType {
	if m != nil {
		return m.SiteType
	}
	return nil
}
func (m *GetSpecType) GetDeployment() isGetSpecType_Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}
func (m *GetSpecType) GetLogsReceiverChoice() isGetSpecType_LogsReceiverChoice {
	if m != nil {
		return m.LogsReceiverChoice
	}
	return nil
}

func (m *GetSpecType) GetVpc() *ves_io_schema_views1.AWSVPCchoiceType {
	if m != nil {
		return m.Vpc
	}
	return nil
}

func (m *GetSpecType) GetIngressGw() *AWSVPCIngressGwType {
	if x, ok := m.GetSiteType().(*GetSpecType_IngressGw); ok {
		return x.IngressGw
	}
	return nil
}

func (m *GetSpecType) GetIngressEgressGw() *AWSVPCIngressEgressGwType {
	if x, ok := m.GetSiteType().(*GetSpecType_IngressEgressGw); ok {
		return x.IngressEgressGw
	}
	return nil
}

func (m *GetSpecType) GetVoltstackCluster() *AWSVPCVoltstackClusterType {
	if x, ok := m.GetSiteType().(*GetSpecType_VoltstackCluster); ok {
		return x.VoltstackCluster
	}
	return nil
}

func (m *GetSpecType) GetAwsCred() *ves_io_schema_views.ObjectRefType {
	if x, ok := m.GetDeployment().(*GetSpecType_AwsCred); ok {
		return x.AwsCred
	}
	return nil
}

func (m *GetSpecType) GetAssisted() *ves_io_schema4.Empty {
	if x, ok := m.GetDeployment().(*GetSpecType_Assisted); ok {
		return x.Assisted
	}
	return nil
}

func (m *GetSpecType) GetInstanceType() string {
	if m != nil {
		return m.InstanceType
	}
	return ""
}

func (m *GetSpecType) GetNodesPerAz() uint32 {
	if m != nil {
		return m.NodesPerAz
	}
	return 0
}

func (m *GetSpecType) GetDiskSize() uint32 {
	if m != nil {
		return m.DiskSize
	}
	return 0
}

func (m *GetSpecType) GetVolterraSoftwareVersion() string {
	if m != nil {
		return m.VolterraSoftwareVersion
	}
	return ""
}

func (m *GetSpecType) GetOperatingSystemVersion() string {
	if m != nil {
		return m.OperatingSystemVersion
	}
	return ""
}

func (m *GetSpecType) GetAwsRegion() string {
	if m != nil {
		return m.AwsRegion
	}
	return ""
}

func (m *GetSpecType) GetSshKey() string {
	if m != nil {
		return m.SshKey
	}
	return ""
}

func (m *GetSpecType) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GetSpecType) GetCoordinates() *ves_io_schema_site.Coordinates {
	if m != nil {
		return m.Coordinates
	}
	return nil
}

func (m *GetSpecType) GetLogsStreamingDisabled() *ves_io_schema4.Empty {
	if x, ok := m.GetLogsReceiverChoice().(*GetSpecType_LogsStreamingDisabled); ok {
		return x.LogsStreamingDisabled
	}
	return nil
}

func (m *GetSpecType) GetLogReceiver() *ves_io_schema_views.ObjectRefType {
	if x, ok := m.GetLogsReceiverChoice().(*GetSpecType_LogReceiver); ok {
		return x.LogReceiver
	}
	return nil
}

func (m *GetSpecType) GetSiteState() ves_io_schema_site.SiteState {
	if m != nil {
		return m.SiteState
	}
	return ves_io_schema_site.ONLINE
}

func (m *GetSpecType) GetVipParamsPerAz() []*ves_io_schema_site.PublishVIPParamsPerAz {
	if m != nil {
		return m.VipParamsPerAz
	}
	return nil
}

func (m *GetSpecType) GetUserModificationTimestamp() *google_protobuf1.Timestamp {
	if m != nil {
		return m.UserModificationTimestamp
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GetSpecType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GetSpecType_OneofMarshaler, _GetSpecType_OneofUnmarshaler, _GetSpecType_OneofSizer, []interface{}{
		(*GetSpecType_IngressGw)(nil),
		(*GetSpecType_IngressEgressGw)(nil),
		(*GetSpecType_VoltstackCluster)(nil),
		(*GetSpecType_AwsCred)(nil),
		(*GetSpecType_Assisted)(nil),
		(*GetSpecType_LogsStreamingDisabled)(nil),
		(*GetSpecType_LogReceiver)(nil),
	}
}

func _GetSpecType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GetSpecType)
	// site_type
	switch x := m.SiteType.(type) {
	case *GetSpecType_IngressGw:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IngressGw); err != nil {
			return err
		}
	case *GetSpecType_IngressEgressGw:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IngressEgressGw); err != nil {
			return err
		}
	case *GetSpecType_VoltstackCluster:
		_ = b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.VoltstackCluster); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GetSpecType.SiteType has unexpected type %T", x)
	}
	// deployment
	switch x := m.Deployment.(type) {
	case *GetSpecType_AwsCred:
		_ = b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AwsCred); err != nil {
			return err
		}
	case *GetSpecType_Assisted:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Assisted); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GetSpecType.Deployment has unexpected type %T", x)
	}
	// logs_receiver_choice
	switch x := m.LogsReceiverChoice.(type) {
	case *GetSpecType_LogsStreamingDisabled:
		_ = b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LogsStreamingDisabled); err != nil {
			return err
		}
	case *GetSpecType_LogReceiver:
		_ = b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LogReceiver); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GetSpecType.LogsReceiverChoice has unexpected type %T", x)
	}
	return nil
}

func _GetSpecType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GetSpecType)
	switch tag {
	case 2: // site_type.ingress_gw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AWSVPCIngressGwType)
		err := b.DecodeMessage(msg)
		m.SiteType = &GetSpecType_IngressGw{msg}
		return true, err
	case 3: // site_type.ingress_egress_gw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AWSVPCIngressEgressGwType)
		err := b.DecodeMessage(msg)
		m.SiteType = &GetSpecType_IngressEgressGw{msg}
		return true, err
	case 16: // site_type.voltstack_cluster
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AWSVPCVoltstackClusterType)
		err := b.DecodeMessage(msg)
		m.SiteType = &GetSpecType_VoltstackCluster{msg}
		return true, err
	case 4: // deployment.aws_cred
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views.ObjectRefType)
		err := b.DecodeMessage(msg)
		m.Deployment = &GetSpecType_AwsCred{msg}
		return true, err
	case 5: // deployment.assisted
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.Deployment = &GetSpecType_Assisted{msg}
		return true, err
	case 20: // logs_receiver_choice.logs_streaming_disabled
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.LogsReceiverChoice = &GetSpecType_LogsStreamingDisabled{msg}
		return true, err
	case 21: // logs_receiver_choice.log_receiver
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views.ObjectRefType)
		err := b.DecodeMessage(msg)
		m.LogsReceiverChoice = &GetSpecType_LogReceiver{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GetSpecType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GetSpecType)
	// site_type
	switch x := m.SiteType.(type) {
	case *GetSpecType_IngressGw:
		s := proto.Size(x.IngressGw)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetSpecType_IngressEgressGw:
		s := proto.Size(x.IngressEgressGw)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetSpecType_VoltstackCluster:
		s := proto.Size(x.VoltstackCluster)
		n += proto.SizeVarint(16<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// deployment
	switch x := m.Deployment.(type) {
	case *GetSpecType_AwsCred:
		s := proto.Size(x.AwsCred)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetSpecType_Assisted:
		s := proto.Size(x.Assisted)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// logs_receiver_choice
	switch x := m.LogsReceiverChoice.(type) {
	case *GetSpecType_LogsStreamingDisabled:
		s := proto.Size(x.LogsStreamingDisabled)
		n += proto.SizeVarint(20<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetSpecType_LogReceiver:
		s := proto.Size(x.LogReceiver)
		n += proto.SizeVarint(21<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*AWSVPCIngressGwType)(nil), "ves.io.schema.views.aws_vpc_site.AWSVPCIngressGwType")
	golang_proto.RegisterType((*AWSVPCIngressGwType)(nil), "ves.io.schema.views.aws_vpc_site.AWSVPCIngressGwType")
	proto.RegisterType((*AWSVPCIngressEgressGwType)(nil), "ves.io.schema.views.aws_vpc_site.AWSVPCIngressEgressGwType")
	golang_proto.RegisterType((*AWSVPCIngressEgressGwType)(nil), "ves.io.schema.views.aws_vpc_site.AWSVPCIngressEgressGwType")
	proto.RegisterType((*AWSVPCVoltstackClusterType)(nil), "ves.io.schema.views.aws_vpc_site.AWSVPCVoltstackClusterType")
	golang_proto.RegisterType((*AWSVPCVoltstackClusterType)(nil), "ves.io.schema.views.aws_vpc_site.AWSVPCVoltstackClusterType")
	proto.RegisterType((*AWSVPCIngressGwReplaceType)(nil), "ves.io.schema.views.aws_vpc_site.AWSVPCIngressGwReplaceType")
	golang_proto.RegisterType((*AWSVPCIngressGwReplaceType)(nil), "ves.io.schema.views.aws_vpc_site.AWSVPCIngressGwReplaceType")
	proto.RegisterType((*AWSVPCIngressEgressGwReplaceType)(nil), "ves.io.schema.views.aws_vpc_site.AWSVPCIngressEgressGwReplaceType")
	golang_proto.RegisterType((*AWSVPCIngressEgressGwReplaceType)(nil), "ves.io.schema.views.aws_vpc_site.AWSVPCIngressEgressGwReplaceType")
	proto.RegisterType((*AWSVPCVoltstackClusterReplaceType)(nil), "ves.io.schema.views.aws_vpc_site.AWSVPCVoltstackClusterReplaceType")
	golang_proto.RegisterType((*AWSVPCVoltstackClusterReplaceType)(nil), "ves.io.schema.views.aws_vpc_site.AWSVPCVoltstackClusterReplaceType")
	proto.RegisterType((*GlobalSpecType)(nil), "ves.io.schema.views.aws_vpc_site.GlobalSpecType")
	golang_proto.RegisterType((*GlobalSpecType)(nil), "ves.io.schema.views.aws_vpc_site.GlobalSpecType")
	proto.RegisterType((*CreateSpecType)(nil), "ves.io.schema.views.aws_vpc_site.CreateSpecType")
	golang_proto.RegisterType((*CreateSpecType)(nil), "ves.io.schema.views.aws_vpc_site.CreateSpecType")
	proto.RegisterType((*ReplaceSpecType)(nil), "ves.io.schema.views.aws_vpc_site.ReplaceSpecType")
	golang_proto.RegisterType((*ReplaceSpecType)(nil), "ves.io.schema.views.aws_vpc_site.ReplaceSpecType")
	proto.RegisterType((*GetSpecType)(nil), "ves.io.schema.views.aws_vpc_site.GetSpecType")
	golang_proto.RegisterType((*GetSpecType)(nil), "ves.io.schema.views.aws_vpc_site.GetSpecType")
}
func (this *AWSVPCIngressGwType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressGwType)
	if !ok {
		that2, ok := that.(AWSVPCIngressGwType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.AzNodes) != len(that1.AzNodes) {
		return false
	}
	for i := range this.AzNodes {
		if !this.AzNodes[i].Equal(that1.AzNodes[i]) {
			return false
		}
	}
	if this.AwsCertifiedHw != that1.AwsCertifiedHw {
		return false
	}
	if !this.AllowedVipPort.Equal(that1.AllowedVipPort) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwType)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.AzNodes) != len(that1.AzNodes) {
		return false
	}
	for i := range this.AzNodes {
		if !this.AzNodes[i].Equal(that1.AzNodes[i]) {
			return false
		}
	}
	if that1.NetworkPolicyChoice == nil {
		if this.NetworkPolicyChoice != nil {
			return false
		}
	} else if this.NetworkPolicyChoice == nil {
		return false
	} else if !this.NetworkPolicyChoice.Equal(that1.NetworkPolicyChoice) {
		return false
	}
	if that1.ForwardProxyChoice == nil {
		if this.ForwardProxyChoice != nil {
			return false
		}
	} else if this.ForwardProxyChoice == nil {
		return false
	} else if !this.ForwardProxyChoice.Equal(that1.ForwardProxyChoice) {
		return false
	}
	if this.AwsCertifiedHw != that1.AwsCertifiedHw {
		return false
	}
	if that1.InsideStaticRouteChoice == nil {
		if this.InsideStaticRouteChoice != nil {
			return false
		}
	} else if this.InsideStaticRouteChoice == nil {
		return false
	} else if !this.InsideStaticRouteChoice.Equal(that1.InsideStaticRouteChoice) {
		return false
	}
	if that1.OutsideStaticRouteChoice == nil {
		if this.OutsideStaticRouteChoice != nil {
			return false
		}
	} else if this.OutsideStaticRouteChoice == nil {
		return false
	} else if !this.OutsideStaticRouteChoice.Equal(that1.OutsideStaticRouteChoice) {
		return false
	}
	if that1.GlobalNetworkChoice == nil {
		if this.GlobalNetworkChoice != nil {
			return false
		}
	} else if this.GlobalNetworkChoice == nil {
		return false
	} else if !this.GlobalNetworkChoice.Equal(that1.GlobalNetworkChoice) {
		return false
	}
	if !this.AllowedVipPort.Equal(that1.AllowedVipPort) {
		return false
	}
	if !this.AllowedVipPortSli.Equal(that1.AllowedVipPortSli) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwType_NoNetworkPolicy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwType_NoNetworkPolicy)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwType_NoNetworkPolicy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoNetworkPolicy.Equal(that1.NoNetworkPolicy) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwType_ActiveNetworkPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwType_ActiveNetworkPolicies)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwType_ActiveNetworkPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveNetworkPolicies.Equal(that1.ActiveNetworkPolicies) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwType_NoForwardProxy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwType_NoForwardProxy)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwType_NoForwardProxy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoForwardProxy.Equal(that1.NoForwardProxy) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwType_ActiveForwardProxyPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwType_ActiveForwardProxyPolicies)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwType_ActiveForwardProxyPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveForwardProxyPolicies.Equal(that1.ActiveForwardProxyPolicies) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwType_ForwardProxyAllowAll) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwType_ForwardProxyAllowAll)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwType_ForwardProxyAllowAll)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ForwardProxyAllowAll.Equal(that1.ForwardProxyAllowAll) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwType_NoInsideStaticRoutes) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwType_NoInsideStaticRoutes)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwType_NoInsideStaticRoutes)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoInsideStaticRoutes.Equal(that1.NoInsideStaticRoutes) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwType_InsideStaticRoutes) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwType_InsideStaticRoutes)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwType_InsideStaticRoutes)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.InsideStaticRoutes.Equal(that1.InsideStaticRoutes) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwType_NoOutsideStaticRoutes) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwType_NoOutsideStaticRoutes)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwType_NoOutsideStaticRoutes)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoOutsideStaticRoutes.Equal(that1.NoOutsideStaticRoutes) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwType_OutsideStaticRoutes) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwType_OutsideStaticRoutes)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwType_OutsideStaticRoutes)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.OutsideStaticRoutes.Equal(that1.OutsideStaticRoutes) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwType_NoGlobalNetwork) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwType_NoGlobalNetwork)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwType_NoGlobalNetwork)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoGlobalNetwork.Equal(that1.NoGlobalNetwork) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwType_GlobalNetworkList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwType_GlobalNetworkList)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwType_GlobalNetworkList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.GlobalNetworkList.Equal(that1.GlobalNetworkList) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterType)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AwsCertifiedHw != that1.AwsCertifiedHw {
		return false
	}
	if len(this.AzNodes) != len(that1.AzNodes) {
		return false
	}
	for i := range this.AzNodes {
		if !this.AzNodes[i].Equal(that1.AzNodes[i]) {
			return false
		}
	}
	if that1.NetworkPolicyChoice == nil {
		if this.NetworkPolicyChoice != nil {
			return false
		}
	} else if this.NetworkPolicyChoice == nil {
		return false
	} else if !this.NetworkPolicyChoice.Equal(that1.NetworkPolicyChoice) {
		return false
	}
	if that1.ForwardProxyChoice == nil {
		if this.ForwardProxyChoice != nil {
			return false
		}
	} else if this.ForwardProxyChoice == nil {
		return false
	} else if !this.ForwardProxyChoice.Equal(that1.ForwardProxyChoice) {
		return false
	}
	if that1.OutsideStaticRouteChoice == nil {
		if this.OutsideStaticRouteChoice != nil {
			return false
		}
	} else if this.OutsideStaticRouteChoice == nil {
		return false
	} else if !this.OutsideStaticRouteChoice.Equal(that1.OutsideStaticRouteChoice) {
		return false
	}
	if that1.GlobalNetworkChoice == nil {
		if this.GlobalNetworkChoice != nil {
			return false
		}
	} else if this.GlobalNetworkChoice == nil {
		return false
	} else if !this.GlobalNetworkChoice.Equal(that1.GlobalNetworkChoice) {
		return false
	}
	if that1.StorageClassChoice == nil {
		if this.StorageClassChoice != nil {
			return false
		}
	} else if this.StorageClassChoice == nil {
		return false
	} else if !this.StorageClassChoice.Equal(that1.StorageClassChoice) {
		return false
	}
	if !this.AllowedVipPort.Equal(that1.AllowedVipPort) {
		return false
	}
	if that1.K8SClusterChoice == nil {
		if this.K8SClusterChoice != nil {
			return false
		}
	} else if this.K8SClusterChoice == nil {
		return false
	} else if !this.K8SClusterChoice.Equal(that1.K8SClusterChoice) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterType_NoNetworkPolicy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterType_NoNetworkPolicy)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterType_NoNetworkPolicy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoNetworkPolicy.Equal(that1.NoNetworkPolicy) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterType_ActiveNetworkPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterType_ActiveNetworkPolicies)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterType_ActiveNetworkPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveNetworkPolicies.Equal(that1.ActiveNetworkPolicies) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterType_NoForwardProxy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterType_NoForwardProxy)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterType_NoForwardProxy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoForwardProxy.Equal(that1.NoForwardProxy) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterType_ActiveForwardProxyPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterType_ActiveForwardProxyPolicies)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterType_ActiveForwardProxyPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveForwardProxyPolicies.Equal(that1.ActiveForwardProxyPolicies) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterType_ForwardProxyAllowAll) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterType_ForwardProxyAllowAll)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterType_ForwardProxyAllowAll)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ForwardProxyAllowAll.Equal(that1.ForwardProxyAllowAll) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterType_NoOutsideStaticRoutes) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterType_NoOutsideStaticRoutes)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterType_NoOutsideStaticRoutes)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoOutsideStaticRoutes.Equal(that1.NoOutsideStaticRoutes) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterType_OutsideStaticRoutes) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterType_OutsideStaticRoutes)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterType_OutsideStaticRoutes)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.OutsideStaticRoutes.Equal(that1.OutsideStaticRoutes) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterType_NoGlobalNetwork) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterType_NoGlobalNetwork)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterType_NoGlobalNetwork)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoGlobalNetwork.Equal(that1.NoGlobalNetwork) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterType_GlobalNetworkList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterType_GlobalNetworkList)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterType_GlobalNetworkList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.GlobalNetworkList.Equal(that1.GlobalNetworkList) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterType_DefaultStorage) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterType_DefaultStorage)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterType_DefaultStorage)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DefaultStorage.Equal(that1.DefaultStorage) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterType_StorageClassList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterType_StorageClassList)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterType_StorageClassList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.StorageClassList.Equal(that1.StorageClassList) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterType_NoK8SCluster) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterType_NoK8SCluster)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterType_NoK8SCluster)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoK8SCluster.Equal(that1.NoK8SCluster) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterType_K8SCluster) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterType_K8SCluster)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterType_K8SCluster)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.K8SCluster.Equal(that1.K8SCluster) {
		return false
	}
	return true
}
func (this *AWSVPCIngressGwReplaceType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressGwReplaceType)
	if !ok {
		that2, ok := that.(AWSVPCIngressGwReplaceType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.AllowedVipPort.Equal(that1.AllowedVipPort) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwReplaceType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwReplaceType)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwReplaceType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.NetworkPolicyChoice == nil {
		if this.NetworkPolicyChoice != nil {
			return false
		}
	} else if this.NetworkPolicyChoice == nil {
		return false
	} else if !this.NetworkPolicyChoice.Equal(that1.NetworkPolicyChoice) {
		return false
	}
	if that1.ForwardProxyChoice == nil {
		if this.ForwardProxyChoice != nil {
			return false
		}
	} else if this.ForwardProxyChoice == nil {
		return false
	} else if !this.ForwardProxyChoice.Equal(that1.ForwardProxyChoice) {
		return false
	}
	if that1.InsideStaticRouteChoice == nil {
		if this.InsideStaticRouteChoice != nil {
			return false
		}
	} else if this.InsideStaticRouteChoice == nil {
		return false
	} else if !this.InsideStaticRouteChoice.Equal(that1.InsideStaticRouteChoice) {
		return false
	}
	if that1.OutsideStaticRouteChoice == nil {
		if this.OutsideStaticRouteChoice != nil {
			return false
		}
	} else if this.OutsideStaticRouteChoice == nil {
		return false
	} else if !this.OutsideStaticRouteChoice.Equal(that1.OutsideStaticRouteChoice) {
		return false
	}
	if that1.GlobalNetworkChoice == nil {
		if this.GlobalNetworkChoice != nil {
			return false
		}
	} else if this.GlobalNetworkChoice == nil {
		return false
	} else if !this.GlobalNetworkChoice.Equal(that1.GlobalNetworkChoice) {
		return false
	}
	if !this.AllowedVipPort.Equal(that1.AllowedVipPort) {
		return false
	}
	if !this.AllowedVipPortSli.Equal(that1.AllowedVipPortSli) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwReplaceType_NoNetworkPolicy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwReplaceType_NoNetworkPolicy)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwReplaceType_NoNetworkPolicy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoNetworkPolicy.Equal(that1.NoNetworkPolicy) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwReplaceType_ActiveNetworkPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwReplaceType_ActiveNetworkPolicies)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwReplaceType_ActiveNetworkPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveNetworkPolicies.Equal(that1.ActiveNetworkPolicies) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwReplaceType_NoForwardProxy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwReplaceType_NoForwardProxy)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwReplaceType_NoForwardProxy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoForwardProxy.Equal(that1.NoForwardProxy) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwReplaceType_ActiveForwardProxyPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwReplaceType_ActiveForwardProxyPolicies)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwReplaceType_ActiveForwardProxyPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveForwardProxyPolicies.Equal(that1.ActiveForwardProxyPolicies) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwReplaceType_ForwardProxyAllowAll) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwReplaceType_ForwardProxyAllowAll)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwReplaceType_ForwardProxyAllowAll)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ForwardProxyAllowAll.Equal(that1.ForwardProxyAllowAll) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwReplaceType_NoInsideStaticRoutes) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwReplaceType_NoInsideStaticRoutes)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwReplaceType_NoInsideStaticRoutes)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoInsideStaticRoutes.Equal(that1.NoInsideStaticRoutes) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwReplaceType_InsideStaticRoutes) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwReplaceType_InsideStaticRoutes)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwReplaceType_InsideStaticRoutes)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.InsideStaticRoutes.Equal(that1.InsideStaticRoutes) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwReplaceType_NoOutsideStaticRoutes) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwReplaceType_NoOutsideStaticRoutes)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwReplaceType_NoOutsideStaticRoutes)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoOutsideStaticRoutes.Equal(that1.NoOutsideStaticRoutes) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwReplaceType_OutsideStaticRoutes) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwReplaceType_OutsideStaticRoutes)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwReplaceType_OutsideStaticRoutes)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.OutsideStaticRoutes.Equal(that1.OutsideStaticRoutes) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwReplaceType_NoGlobalNetwork) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwReplaceType_NoGlobalNetwork)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwReplaceType_NoGlobalNetwork)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoGlobalNetwork.Equal(that1.NoGlobalNetwork) {
		return false
	}
	return true
}
func (this *AWSVPCIngressEgressGwReplaceType_GlobalNetworkList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCIngressEgressGwReplaceType_GlobalNetworkList)
	if !ok {
		that2, ok := that.(AWSVPCIngressEgressGwReplaceType_GlobalNetworkList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.GlobalNetworkList.Equal(that1.GlobalNetworkList) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterReplaceType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterReplaceType)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterReplaceType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.NetworkPolicyChoice == nil {
		if this.NetworkPolicyChoice != nil {
			return false
		}
	} else if this.NetworkPolicyChoice == nil {
		return false
	} else if !this.NetworkPolicyChoice.Equal(that1.NetworkPolicyChoice) {
		return false
	}
	if that1.ForwardProxyChoice == nil {
		if this.ForwardProxyChoice != nil {
			return false
		}
	} else if this.ForwardProxyChoice == nil {
		return false
	} else if !this.ForwardProxyChoice.Equal(that1.ForwardProxyChoice) {
		return false
	}
	if that1.OutsideStaticRouteChoice == nil {
		if this.OutsideStaticRouteChoice != nil {
			return false
		}
	} else if this.OutsideStaticRouteChoice == nil {
		return false
	} else if !this.OutsideStaticRouteChoice.Equal(that1.OutsideStaticRouteChoice) {
		return false
	}
	if that1.GlobalNetworkChoice == nil {
		if this.GlobalNetworkChoice != nil {
			return false
		}
	} else if this.GlobalNetworkChoice == nil {
		return false
	} else if !this.GlobalNetworkChoice.Equal(that1.GlobalNetworkChoice) {
		return false
	}
	if !this.AllowedVipPort.Equal(that1.AllowedVipPort) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterReplaceType_NoNetworkPolicy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterReplaceType_NoNetworkPolicy)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterReplaceType_NoNetworkPolicy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoNetworkPolicy.Equal(that1.NoNetworkPolicy) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterReplaceType_ActiveNetworkPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterReplaceType_ActiveNetworkPolicies)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterReplaceType_ActiveNetworkPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveNetworkPolicies.Equal(that1.ActiveNetworkPolicies) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterReplaceType_NoForwardProxy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterReplaceType_NoForwardProxy)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterReplaceType_NoForwardProxy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoForwardProxy.Equal(that1.NoForwardProxy) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterReplaceType_ActiveForwardProxyPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterReplaceType_ActiveForwardProxyPolicies)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterReplaceType_ActiveForwardProxyPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveForwardProxyPolicies.Equal(that1.ActiveForwardProxyPolicies) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterReplaceType_ForwardProxyAllowAll) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterReplaceType_ForwardProxyAllowAll)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterReplaceType_ForwardProxyAllowAll)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ForwardProxyAllowAll.Equal(that1.ForwardProxyAllowAll) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterReplaceType_NoOutsideStaticRoutes) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterReplaceType_NoOutsideStaticRoutes)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterReplaceType_NoOutsideStaticRoutes)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoOutsideStaticRoutes.Equal(that1.NoOutsideStaticRoutes) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterReplaceType_OutsideStaticRoutes) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterReplaceType_OutsideStaticRoutes)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterReplaceType_OutsideStaticRoutes)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.OutsideStaticRoutes.Equal(that1.OutsideStaticRoutes) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterReplaceType_NoGlobalNetwork) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterReplaceType_NoGlobalNetwork)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterReplaceType_NoGlobalNetwork)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoGlobalNetwork.Equal(that1.NoGlobalNetwork) {
		return false
	}
	return true
}
func (this *AWSVPCVoltstackClusterReplaceType_GlobalNetworkList) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AWSVPCVoltstackClusterReplaceType_GlobalNetworkList)
	if !ok {
		that2, ok := that.(AWSVPCVoltstackClusterReplaceType_GlobalNetworkList)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.GlobalNetworkList.Equal(that1.GlobalNetworkList) {
		return false
	}
	return true
}
func (this *GlobalSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType)
	if !ok {
		that2, ok := that.(GlobalSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Vpc.Equal(that1.Vpc) {
		return false
	}
	if that1.SiteType == nil {
		if this.SiteType != nil {
			return false
		}
	} else if this.SiteType == nil {
		return false
	} else if !this.SiteType.Equal(that1.SiteType) {
		return false
	}
	if that1.Deployment == nil {
		if this.Deployment != nil {
			return false
		}
	} else if this.Deployment == nil {
		return false
	} else if !this.Deployment.Equal(that1.Deployment) {
		return false
	}
	if this.InstanceType != that1.InstanceType {
		return false
	}
	if this.NodesPerAz != that1.NodesPerAz {
		return false
	}
	if this.VolterraSoftwareVersion != that1.VolterraSoftwareVersion {
		return false
	}
	if this.OperatingSystemVersion != that1.OperatingSystemVersion {
		return false
	}
	if this.AwsRegion != that1.AwsRegion {
		return false
	}
	if this.DiskSize != that1.DiskSize {
		return false
	}
	if this.SshKey != that1.SshKey {
		return false
	}
	if this.Address != that1.Address {
		return false
	}
	if !this.Coordinates.Equal(that1.Coordinates) {
		return false
	}
	if that1.LogsReceiverChoice == nil {
		if this.LogsReceiverChoice != nil {
			return false
		}
	} else if this.LogsReceiverChoice == nil {
		return false
	} else if !this.LogsReceiverChoice.Equal(that1.LogsReceiverChoice) {
		return false
	}
	if !this.Sw.Equal(that1.Sw) {
		return false
	}
	if !this.Os.Equal(that1.Os) {
		return false
	}
	if len(this.VipParamsPerAz) != len(that1.VipParamsPerAz) {
		return false
	}
	for i := range this.VipParamsPerAz {
		if !this.VipParamsPerAz[i].Equal(that1.VipParamsPerAz[i]) {
			return false
		}
	}
	if !this.UserModificationTimestamp.Equal(that1.UserModificationTimestamp) {
		return false
	}
	if !this.TfParams.Equal(that1.TfParams) {
		return false
	}
	if !this.ViewInternal.Equal(that1.ViewInternal) {
		return false
	}
	return true
}
func (this *GlobalSpecType_IngressGw) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_IngressGw)
	if !ok {
		that2, ok := that.(GlobalSpecType_IngressGw)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.IngressGw.Equal(that1.IngressGw) {
		return false
	}
	return true
}
func (this *GlobalSpecType_IngressEgressGw) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_IngressEgressGw)
	if !ok {
		that2, ok := that.(GlobalSpecType_IngressEgressGw)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.IngressEgressGw.Equal(that1.IngressEgressGw) {
		return false
	}
	return true
}
func (this *GlobalSpecType_VoltstackCluster) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_VoltstackCluster)
	if !ok {
		that2, ok := that.(GlobalSpecType_VoltstackCluster)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.VoltstackCluster.Equal(that1.VoltstackCluster) {
		return false
	}
	return true
}
func (this *GlobalSpecType_AwsCred) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_AwsCred)
	if !ok {
		that2, ok := that.(GlobalSpecType_AwsCred)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.AwsCred.Equal(that1.AwsCred) {
		return false
	}
	return true
}
func (this *GlobalSpecType_Assisted) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_Assisted)
	if !ok {
		that2, ok := that.(GlobalSpecType_Assisted)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Assisted.Equal(that1.Assisted) {
		return false
	}
	return true
}
func (this *GlobalSpecType_LogsStreamingDisabled) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_LogsStreamingDisabled)
	if !ok {
		that2, ok := that.(GlobalSpecType_LogsStreamingDisabled)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.LogsStreamingDisabled.Equal(that1.LogsStreamingDisabled) {
		return false
	}
	return true
}
func (this *GlobalSpecType_LogReceiver) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_LogReceiver)
	if !ok {
		that2, ok := that.(GlobalSpecType_LogReceiver)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.LogReceiver.Equal(that1.LogReceiver) {
		return false
	}
	return true
}
func (this *CreateSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType)
	if !ok {
		that2, ok := that.(CreateSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Vpc.Equal(that1.Vpc) {
		return false
	}
	if that1.SiteType == nil {
		if this.SiteType != nil {
			return false
		}
	} else if this.SiteType == nil {
		return false
	} else if !this.SiteType.Equal(that1.SiteType) {
		return false
	}
	if that1.Deployment == nil {
		if this.Deployment != nil {
			return false
		}
	} else if this.Deployment == nil {
		return false
	} else if !this.Deployment.Equal(that1.Deployment) {
		return false
	}
	if this.InstanceType != that1.InstanceType {
		return false
	}
	if this.NodesPerAz != that1.NodesPerAz {
		return false
	}
	if this.DiskSize != that1.DiskSize {
		return false
	}
	if this.AwsRegion != that1.AwsRegion {
		return false
	}
	if this.SshKey != that1.SshKey {
		return false
	}
	if this.Address != that1.Address {
		return false
	}
	if !this.Coordinates.Equal(that1.Coordinates) {
		return false
	}
	if that1.LogsReceiverChoice == nil {
		if this.LogsReceiverChoice != nil {
			return false
		}
	} else if this.LogsReceiverChoice == nil {
		return false
	} else if !this.LogsReceiverChoice.Equal(that1.LogsReceiverChoice) {
		return false
	}
	if !this.Sw.Equal(that1.Sw) {
		return false
	}
	if !this.Os.Equal(that1.Os) {
		return false
	}
	return true
}
func (this *CreateSpecType_IngressGw) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_IngressGw)
	if !ok {
		that2, ok := that.(CreateSpecType_IngressGw)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.IngressGw.Equal(that1.IngressGw) {
		return false
	}
	return true
}
func (this *CreateSpecType_IngressEgressGw) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_IngressEgressGw)
	if !ok {
		that2, ok := that.(CreateSpecType_IngressEgressGw)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.IngressEgressGw.Equal(that1.IngressEgressGw) {
		return false
	}
	return true
}
func (this *CreateSpecType_VoltstackCluster) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_VoltstackCluster)
	if !ok {
		that2, ok := that.(CreateSpecType_VoltstackCluster)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.VoltstackCluster.Equal(that1.VoltstackCluster) {
		return false
	}
	return true
}
func (this *CreateSpecType_AwsCred) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_AwsCred)
	if !ok {
		that2, ok := that.(CreateSpecType_AwsCred)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.AwsCred.Equal(that1.AwsCred) {
		return false
	}
	return true
}
func (this *CreateSpecType_Assisted) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_Assisted)
	if !ok {
		that2, ok := that.(CreateSpecType_Assisted)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Assisted.Equal(that1.Assisted) {
		return false
	}
	return true
}
func (this *CreateSpecType_LogsStreamingDisabled) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_LogsStreamingDisabled)
	if !ok {
		that2, ok := that.(CreateSpecType_LogsStreamingDisabled)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.LogsStreamingDisabled.Equal(that1.LogsStreamingDisabled) {
		return false
	}
	return true
}
func (this *CreateSpecType_LogReceiver) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_LogReceiver)
	if !ok {
		that2, ok := that.(CreateSpecType_LogReceiver)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.LogReceiver.Equal(that1.LogReceiver) {
		return false
	}
	return true
}
func (this *ReplaceSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType)
	if !ok {
		that2, ok := that.(ReplaceSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.SiteType == nil {
		if this.SiteType != nil {
			return false
		}
	} else if this.SiteType == nil {
		return false
	} else if !this.SiteType.Equal(that1.SiteType) {
		return false
	}
	if this.NodesPerAz != that1.NodesPerAz {
		return false
	}
	if this.Address != that1.Address {
		return false
	}
	if !this.Coordinates.Equal(that1.Coordinates) {
		return false
	}
	if that1.LogsReceiverChoice == nil {
		if this.LogsReceiverChoice != nil {
			return false
		}
	} else if this.LogsReceiverChoice == nil {
		return false
	} else if !this.LogsReceiverChoice.Equal(that1.LogsReceiverChoice) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_IngressGw) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_IngressGw)
	if !ok {
		that2, ok := that.(ReplaceSpecType_IngressGw)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.IngressGw.Equal(that1.IngressGw) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_IngressEgressGw) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_IngressEgressGw)
	if !ok {
		that2, ok := that.(ReplaceSpecType_IngressEgressGw)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.IngressEgressGw.Equal(that1.IngressEgressGw) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_VoltstackCluster) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_VoltstackCluster)
	if !ok {
		that2, ok := that.(ReplaceSpecType_VoltstackCluster)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.VoltstackCluster.Equal(that1.VoltstackCluster) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_LogsStreamingDisabled) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_LogsStreamingDisabled)
	if !ok {
		that2, ok := that.(ReplaceSpecType_LogsStreamingDisabled)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.LogsStreamingDisabled.Equal(that1.LogsStreamingDisabled) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_LogReceiver) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_LogReceiver)
	if !ok {
		that2, ok := that.(ReplaceSpecType_LogReceiver)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.LogReceiver.Equal(that1.LogReceiver) {
		return false
	}
	return true
}
func (this *GetSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType)
	if !ok {
		that2, ok := that.(GetSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Vpc.Equal(that1.Vpc) {
		return false
	}
	if that1.SiteType == nil {
		if this.SiteType != nil {
			return false
		}
	} else if this.SiteType == nil {
		return false
	} else if !this.SiteType.Equal(that1.SiteType) {
		return false
	}
	if that1.Deployment == nil {
		if this.Deployment != nil {
			return false
		}
	} else if this.Deployment == nil {
		return false
	} else if !this.Deployment.Equal(that1.Deployment) {
		return false
	}
	if this.InstanceType != that1.InstanceType {
		return false
	}
	if this.NodesPerAz != that1.NodesPerAz {
		return false
	}
	if this.DiskSize != that1.DiskSize {
		return false
	}
	if this.VolterraSoftwareVersion != that1.VolterraSoftwareVersion {
		return false
	}
	if this.OperatingSystemVersion != that1.OperatingSystemVersion {
		return false
	}
	if this.AwsRegion != that1.AwsRegion {
		return false
	}
	if this.SshKey != that1.SshKey {
		return false
	}
	if this.Address != that1.Address {
		return false
	}
	if !this.Coordinates.Equal(that1.Coordinates) {
		return false
	}
	if that1.LogsReceiverChoice == nil {
		if this.LogsReceiverChoice != nil {
			return false
		}
	} else if this.LogsReceiverChoice == nil {
		return false
	} else if !this.LogsReceiverChoice.Equal(that1.LogsReceiverChoice) {
		return false
	}
	if this.SiteState != that1.SiteState {
		return false
	}
	if len(this.VipParamsPerAz) != len(that1.VipParamsPerAz) {
		return false
	}
	for i := range this.VipParamsPerAz {
		if !this.VipParamsPerAz[i].Equal(that1.VipParamsPerAz[i]) {
			return false
		}
	}
	if !this.UserModificationTimestamp.Equal(that1.UserModificationTimestamp) {
		return false
	}
	return true
}
func (this *GetSpecType_IngressGw) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_IngressGw)
	if !ok {
		that2, ok := that.(GetSpecType_IngressGw)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.IngressGw.Equal(that1.IngressGw) {
		return false
	}
	return true
}
func (this *GetSpecType_IngressEgressGw) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_IngressEgressGw)
	if !ok {
		that2, ok := that.(GetSpecType_IngressEgressGw)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.IngressEgressGw.Equal(that1.IngressEgressGw) {
		return false
	}
	return true
}
func (this *GetSpecType_VoltstackCluster) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_VoltstackCluster)
	if !ok {
		that2, ok := that.(GetSpecType_VoltstackCluster)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.VoltstackCluster.Equal(that1.VoltstackCluster) {
		return false
	}
	return true
}
func (this *GetSpecType_AwsCred) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_AwsCred)
	if !ok {
		that2, ok := that.(GetSpecType_AwsCred)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.AwsCred.Equal(that1.AwsCred) {
		return false
	}
	return true
}
func (this *GetSpecType_Assisted) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_Assisted)
	if !ok {
		that2, ok := that.(GetSpecType_Assisted)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Assisted.Equal(that1.Assisted) {
		return false
	}
	return true
}
func (this *GetSpecType_LogsStreamingDisabled) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_LogsStreamingDisabled)
	if !ok {
		that2, ok := that.(GetSpecType_LogsStreamingDisabled)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.LogsStreamingDisabled.Equal(that1.LogsStreamingDisabled) {
		return false
	}
	return true
}
func (this *GetSpecType_LogReceiver) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_LogReceiver)
	if !ok {
		that2, ok := that.(GetSpecType_LogReceiver)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.LogReceiver.Equal(that1.LogReceiver) {
		return false
	}
	return true
}
func (this *AWSVPCIngressGwType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&aws_vpc_site.AWSVPCIngressGwType{")
	if this.AzNodes != nil {
		s = append(s, "AzNodes: "+fmt.Sprintf("%#v", this.AzNodes)+",\n")
	}
	s = append(s, "AwsCertifiedHw: "+fmt.Sprintf("%#v", this.AwsCertifiedHw)+",\n")
	if this.AllowedVipPort != nil {
		s = append(s, "AllowedVipPort: "+fmt.Sprintf("%#v", this.AllowedVipPort)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *AWSVPCIngressEgressGwType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 19)
	s = append(s, "&aws_vpc_site.AWSVPCIngressEgressGwType{")
	if this.AzNodes != nil {
		s = append(s, "AzNodes: "+fmt.Sprintf("%#v", this.AzNodes)+",\n")
	}
	if this.NetworkPolicyChoice != nil {
		s = append(s, "NetworkPolicyChoice: "+fmt.Sprintf("%#v", this.NetworkPolicyChoice)+",\n")
	}
	if this.ForwardProxyChoice != nil {
		s = append(s, "ForwardProxyChoice: "+fmt.Sprintf("%#v", this.ForwardProxyChoice)+",\n")
	}
	s = append(s, "AwsCertifiedHw: "+fmt.Sprintf("%#v", this.AwsCertifiedHw)+",\n")
	if this.InsideStaticRouteChoice != nil {
		s = append(s, "InsideStaticRouteChoice: "+fmt.Sprintf("%#v", this.InsideStaticRouteChoice)+",\n")
	}
	if this.OutsideStaticRouteChoice != nil {
		s = append(s, "OutsideStaticRouteChoice: "+fmt.Sprintf("%#v", this.OutsideStaticRouteChoice)+",\n")
	}
	if this.GlobalNetworkChoice != nil {
		s = append(s, "GlobalNetworkChoice: "+fmt.Sprintf("%#v", this.GlobalNetworkChoice)+",\n")
	}
	if this.AllowedVipPort != nil {
		s = append(s, "AllowedVipPort: "+fmt.Sprintf("%#v", this.AllowedVipPort)+",\n")
	}
	if this.AllowedVipPortSli != nil {
		s = append(s, "AllowedVipPortSli: "+fmt.Sprintf("%#v", this.AllowedVipPortSli)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *AWSVPCIngressEgressGwType_NoNetworkPolicy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCIngressEgressGwType_NoNetworkPolicy{` +
		`NoNetworkPolicy:` + fmt.Sprintf("%#v", this.NoNetworkPolicy) + `}`}, ", ")
	return s
}
func (this *AWSVPCIngressEgressGwType_ActiveNetworkPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCIngressEgressGwType_ActiveNetworkPolicies{` +
		`ActiveNetworkPolicies:` + fmt.Sprintf("%#v", this.ActiveNetworkPolicies) + `}`}, ", ")
	return s
}
func (this *AWSVPCIngressEgressGwType_NoForwardProxy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCIngressEgressGwType_NoForwardProxy{` +
		`NoForwardProxy:` + fmt.Sprintf("%#v", this.NoForwardProxy) + `}`}, ", ")
	return s
}
func (this *AWSVPCIngressEgressGwType_ActiveForwardProxyPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCIngressEgressGwType_ActiveForwardProxyPolicies{` +
		`ActiveForwardProxyPolicies:` + fmt.Sprintf("%#v", this.ActiveForwardProxyPolicies) + `}`}, ", ")
	return s
}
func (this *AWSVPCIngressEgressGwType_ForwardProxyAllowAll) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCIngressEgressGwType_ForwardProxyAllowAll{` +
		`ForwardProxyAllowAll:` + fmt.Sprintf("%#v", this.ForwardProxyAllowAll) + `}`}, ", ")
	return s
}
func (this *AWSVPCIngressEgressGwType_NoInsideStaticRoutes) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCIngressEgressGwType_NoInsideStaticRoutes{` +
		`NoInsideStaticRoutes:` + fmt.Sprintf("%#v", this.NoInsideStaticRoutes) + `}`}, ", ")
	return s
}
func (this *AWSVPCIngressEgressGwType_InsideStaticRoutes) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCIngressEgressGwType_InsideStaticRoutes{` +
		`InsideStaticRoutes:` + fmt.Sprintf("%#v", this.InsideStaticRoutes) + `}`}, ", ")
	return s
}
func (this *AWSVPCIngressEgressGwType_NoOutsideStaticRoutes) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCIngressEgressGwType_NoOutsideStaticRoutes{` +
		`NoOutsideStaticRoutes:` + fmt.Sprintf("%#v", this.NoOutsideStaticRoutes) + `}`}, ", ")
	return s
}
func (this *AWSVPCIngressEgressGwType_OutsideStaticRoutes) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCIngressEgressGwType_OutsideStaticRoutes{` +
		`OutsideStaticRoutes:` + fmt.Sprintf("%#v", this.OutsideStaticRoutes) + `}`}, ", ")
	return s
}
func (this *AWSVPCIngressEgressGwType_NoGlobalNetwork) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCIngressEgressGwType_NoGlobalNetwork{` +
		`NoGlobalNetwork:` + fmt.Sprintf("%#v", this.NoGlobalNetwork) + `}`}, ", ")
	return s
}
func (this *AWSVPCIngressEgressGwType_GlobalNetworkList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCIngressEgressGwType_GlobalNetworkList{` +
		`GlobalNetworkList:` + fmt.Sprintf("%#v", this.GlobalNetworkList) + `}`}, ", ")
	return s
}
func (this *AWSVPCVoltstackClusterType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 20)
	s = append(s, "&aws_vpc_site.AWSVPCVoltstackClusterType{")
	s = append(s, "AwsCertifiedHw: "+fmt.Sprintf("%#v", this.AwsCertifiedHw)+",\n")
	if this.AzNodes != nil {
		s = append(s, "AzNodes: "+fmt.Sprintf("%#v", this.AzNodes)+",\n")
	}
	if this.NetworkPolicyChoice != nil {
		s = append(s, "NetworkPolicyChoice: "+fmt.Sprintf("%#v", this.NetworkPolicyChoice)+",\n")
	}
	if this.ForwardProxyChoice != nil {
		s = append(s, "ForwardProxyChoice: "+fmt.Sprintf("%#v", this.ForwardProxyChoice)+",\n")
	}
	if this.OutsideStaticRouteChoice != nil {
		s = append(s, "OutsideStaticRouteChoice: "+fmt.Sprintf("%#v", this.OutsideStaticRouteChoice)+",\n")
	}
	if this.GlobalNetworkChoice != nil {
		s = append(s, "GlobalNetworkChoice: "+fmt.Sprintf("%#v", this.GlobalNetworkChoice)+",\n")
	}
	if this.StorageClassChoice != nil {
		s = append(s, "StorageClassChoice: "+fmt.Sprintf("%#v", this.StorageClassChoice)+",\n")
	}
	if this.AllowedVipPort != nil {
		s = append(s, "AllowedVipPort: "+fmt.Sprintf("%#v", this.AllowedVipPort)+",\n")
	}
	if this.K8SClusterChoice != nil {
		s = append(s, "K8SClusterChoice: "+fmt.Sprintf("%#v", this.K8SClusterChoice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *AWSVPCVoltstackClusterType_NoNetworkPolicy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCVoltstackClusterType_NoNetworkPolicy{` +
		`NoNetworkPolicy:` + fmt.Sprintf("%#v", this.NoNetworkPolicy) + `}`}, ", ")
	return s
}
func (this *AWSVPCVoltstackClusterType_ActiveNetworkPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCVoltstackClusterType_ActiveNetworkPolicies{` +
		`ActiveNetworkPolicies:` + fmt.Sprintf("%#v", this.ActiveNetworkPolicies) + `}`}, ", ")
	return s
}
func (this *AWSVPCVoltstackClusterType_NoForwardProxy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCVoltstackClusterType_NoForwardProxy{` +
		`NoForwardProxy:` + fmt.Sprintf("%#v", this.NoForwardProxy) + `}`}, ", ")
	return s
}
func (this *AWSVPCVoltstackClusterType_ActiveForwardProxyPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCVoltstackClusterType_ActiveForwardProxyPolicies{` +
		`ActiveForwardProxyPolicies:` + fmt.Sprintf("%#v", this.ActiveForwardProxyPolicies) + `}`}, ", ")
	return s
}
func (this *AWSVPCVoltstackClusterType_ForwardProxyAllowAll) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCVoltstackClusterType_ForwardProxyAllowAll{` +
		`ForwardProxyAllowAll:` + fmt.Sprintf("%#v", this.ForwardProxyAllowAll) + `}`}, ", ")
	return s
}
func (this *AWSVPCVoltstackClusterType_NoOutsideStaticRoutes) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCVoltstackClusterType_NoOutsideStaticRoutes{` +
		`NoOutsideStaticRoutes:` + fmt.Sprintf("%#v", this.NoOutsideStaticRoutes) + `}`}, ", ")
	return s
}
func (this *AWSVPCVoltstackClusterType_OutsideStaticRoutes) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCVoltstackClusterType_OutsideStaticRoutes{` +
		`OutsideStaticRoutes:` + fmt.Sprintf("%#v", this.OutsideStaticRoutes) + `}`}, ", ")
	return s
}
func (this *AWSVPCVoltstackClusterType_NoGlobalNetwork) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCVoltstackClusterType_NoGlobalNetwork{` +
		`NoGlobalNetwork:` + fmt.Sprintf("%#v", this.NoGlobalNetwork) + `}`}, ", ")
	return s
}
func (this *AWSVPCVoltstackClusterType_GlobalNetworkList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCVoltstackClusterType_GlobalNetworkList{` +
		`GlobalNetworkList:` + fmt.Sprintf("%#v", this.GlobalNetworkList) + `}`}, ", ")
	return s
}
func (this *AWSVPCVoltstackClusterType_DefaultStorage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCVoltstackClusterType_DefaultStorage{` +
		`DefaultStorage:` + fmt.Sprintf("%#v", this.DefaultStorage) + `}`}, ", ")
	return s
}
func (this *AWSVPCVoltstackClusterType_StorageClassList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCVoltstackClusterType_StorageClassList{` +
		`StorageClassList:` + fmt.Sprintf("%#v", this.StorageClassList) + `}`}, ", ")
	return s
}
func (this *AWSVPCVoltstackClusterType_NoK8SCluster) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCVoltstackClusterType_NoK8SCluster{` +
		`NoK8SCluster:` + fmt.Sprintf("%#v", this.NoK8SCluster) + `}`}, ", ")
	return s
}
func (this *AWSVPCVoltstackClusterType_K8SCluster) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCVoltstackClusterType_K8SCluster{` +
		`K8SCluster:` + fmt.Sprintf("%#v", this.K8SCluster) + `}`}, ", ")
	return s
}
func (this *AWSVPCIngressGwReplaceType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&aws_vpc_site.AWSVPCIngressGwReplaceType{")
	if this.AllowedVipPort != nil {
		s = append(s, "AllowedVipPort: "+fmt.Sprintf("%#v", this.AllowedVipPort)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *AWSVPCIngressEgressGwReplaceType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 17)
	s = append(s, "&aws_vpc_site.AWSVPCIngressEgressGwReplaceType{")
	if this.NetworkPolicyChoice != nil {
		s = append(s, "NetworkPolicyChoice: "+fmt.Sprintf("%#v", this.NetworkPolicyChoice)+",\n")
	}
	if this.ForwardProxyChoice != nil {
		s = append(s, "ForwardProxyChoice: "+fmt.Sprintf("%#v", this.ForwardProxyChoice)+",\n")
	}
	if this.InsideStaticRouteChoice != nil {
		s = append(s, "InsideStaticRouteChoice: "+fmt.Sprintf("%#v", this.InsideStaticRouteChoice)+",\n")
	}
	if this.OutsideStaticRouteChoice != nil {
		s = append(s, "OutsideStaticRouteChoice: "+fmt.Sprintf("%#v", this.OutsideStaticRouteChoice)+",\n")
	}
	if this.GlobalNetworkChoice != nil {
		s = append(s, "GlobalNetworkChoice: "+fmt.Sprintf("%#v", this.GlobalNetworkChoice)+",\n")
	}
	if this.AllowedVipPort != nil {
		s = append(s, "AllowedVipPort: "+fmt.Sprintf("%#v", this.AllowedVipPort)+",\n")
	}
	if this.AllowedVipPortSli != nil {
		s = append(s, "AllowedVipPortSli: "+fmt.Sprintf("%#v", this.AllowedVipPortSli)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *AWSVPCIngressEgressGwReplaceType_NoNetworkPolicy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCIngressEgressGwReplaceType_NoNetworkPolicy{` +
		`NoNetworkPolicy:` + fmt.Sprintf("%#v", this.NoNetworkPolicy) + `}`}, ", ")
	return s
}
func (this *AWSVPCIngressEgressGwReplaceType_ActiveNetworkPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCIngressEgressGwReplaceType_ActiveNetworkPolicies{` +
		`ActiveNetworkPolicies:` + fmt.Sprintf("%#v", this.ActiveNetworkPolicies) + `}`}, ", ")
	return s
}
func (this *AWSVPCIngressEgressGwReplaceType_NoForwardProxy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCIngressEgressGwReplaceType_NoForwardProxy{` +
		`NoForwardProxy:` + fmt.Sprintf("%#v", this.NoForwardProxy) + `}`}, ", ")
	return s
}
func (this *AWSVPCIngressEgressGwReplaceType_ActiveForwardProxyPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCIngressEgressGwReplaceType_ActiveForwardProxyPolicies{` +
		`ActiveForwardProxyPolicies:` + fmt.Sprintf("%#v", this.ActiveForwardProxyPolicies) + `}`}, ", ")
	return s
}
func (this *AWSVPCIngressEgressGwReplaceType_ForwardProxyAllowAll) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCIngressEgressGwReplaceType_ForwardProxyAllowAll{` +
		`ForwardProxyAllowAll:` + fmt.Sprintf("%#v", this.ForwardProxyAllowAll) + `}`}, ", ")
	return s
}
func (this *AWSVPCIngressEgressGwReplaceType_NoInsideStaticRoutes) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCIngressEgressGwReplaceType_NoInsideStaticRoutes{` +
		`NoInsideStaticRoutes:` + fmt.Sprintf("%#v", this.NoInsideStaticRoutes) + `}`}, ", ")
	return s
}
func (this *AWSVPCIngressEgressGwReplaceType_InsideStaticRoutes) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCIngressEgressGwReplaceType_InsideStaticRoutes{` +
		`InsideStaticRoutes:` + fmt.Sprintf("%#v", this.InsideStaticRoutes) + `}`}, ", ")
	return s
}
func (this *AWSVPCIngressEgressGwReplaceType_NoOutsideStaticRoutes) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCIngressEgressGwReplaceType_NoOutsideStaticRoutes{` +
		`NoOutsideStaticRoutes:` + fmt.Sprintf("%#v", this.NoOutsideStaticRoutes) + `}`}, ", ")
	return s
}
func (this *AWSVPCIngressEgressGwReplaceType_OutsideStaticRoutes) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCIngressEgressGwReplaceType_OutsideStaticRoutes{` +
		`OutsideStaticRoutes:` + fmt.Sprintf("%#v", this.OutsideStaticRoutes) + `}`}, ", ")
	return s
}
func (this *AWSVPCIngressEgressGwReplaceType_NoGlobalNetwork) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCIngressEgressGwReplaceType_NoGlobalNetwork{` +
		`NoGlobalNetwork:` + fmt.Sprintf("%#v", this.NoGlobalNetwork) + `}`}, ", ")
	return s
}
func (this *AWSVPCIngressEgressGwReplaceType_GlobalNetworkList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCIngressEgressGwReplaceType_GlobalNetworkList{` +
		`GlobalNetworkList:` + fmt.Sprintf("%#v", this.GlobalNetworkList) + `}`}, ", ")
	return s
}
func (this *AWSVPCVoltstackClusterReplaceType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 14)
	s = append(s, "&aws_vpc_site.AWSVPCVoltstackClusterReplaceType{")
	if this.NetworkPolicyChoice != nil {
		s = append(s, "NetworkPolicyChoice: "+fmt.Sprintf("%#v", this.NetworkPolicyChoice)+",\n")
	}
	if this.ForwardProxyChoice != nil {
		s = append(s, "ForwardProxyChoice: "+fmt.Sprintf("%#v", this.ForwardProxyChoice)+",\n")
	}
	if this.OutsideStaticRouteChoice != nil {
		s = append(s, "OutsideStaticRouteChoice: "+fmt.Sprintf("%#v", this.OutsideStaticRouteChoice)+",\n")
	}
	if this.GlobalNetworkChoice != nil {
		s = append(s, "GlobalNetworkChoice: "+fmt.Sprintf("%#v", this.GlobalNetworkChoice)+",\n")
	}
	if this.AllowedVipPort != nil {
		s = append(s, "AllowedVipPort: "+fmt.Sprintf("%#v", this.AllowedVipPort)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *AWSVPCVoltstackClusterReplaceType_NoNetworkPolicy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCVoltstackClusterReplaceType_NoNetworkPolicy{` +
		`NoNetworkPolicy:` + fmt.Sprintf("%#v", this.NoNetworkPolicy) + `}`}, ", ")
	return s
}
func (this *AWSVPCVoltstackClusterReplaceType_ActiveNetworkPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCVoltstackClusterReplaceType_ActiveNetworkPolicies{` +
		`ActiveNetworkPolicies:` + fmt.Sprintf("%#v", this.ActiveNetworkPolicies) + `}`}, ", ")
	return s
}
func (this *AWSVPCVoltstackClusterReplaceType_NoForwardProxy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCVoltstackClusterReplaceType_NoForwardProxy{` +
		`NoForwardProxy:` + fmt.Sprintf("%#v", this.NoForwardProxy) + `}`}, ", ")
	return s
}
func (this *AWSVPCVoltstackClusterReplaceType_ActiveForwardProxyPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCVoltstackClusterReplaceType_ActiveForwardProxyPolicies{` +
		`ActiveForwardProxyPolicies:` + fmt.Sprintf("%#v", this.ActiveForwardProxyPolicies) + `}`}, ", ")
	return s
}
func (this *AWSVPCVoltstackClusterReplaceType_ForwardProxyAllowAll) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCVoltstackClusterReplaceType_ForwardProxyAllowAll{` +
		`ForwardProxyAllowAll:` + fmt.Sprintf("%#v", this.ForwardProxyAllowAll) + `}`}, ", ")
	return s
}
func (this *AWSVPCVoltstackClusterReplaceType_NoOutsideStaticRoutes) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCVoltstackClusterReplaceType_NoOutsideStaticRoutes{` +
		`NoOutsideStaticRoutes:` + fmt.Sprintf("%#v", this.NoOutsideStaticRoutes) + `}`}, ", ")
	return s
}
func (this *AWSVPCVoltstackClusterReplaceType_OutsideStaticRoutes) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCVoltstackClusterReplaceType_OutsideStaticRoutes{` +
		`OutsideStaticRoutes:` + fmt.Sprintf("%#v", this.OutsideStaticRoutes) + `}`}, ", ")
	return s
}
func (this *AWSVPCVoltstackClusterReplaceType_NoGlobalNetwork) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCVoltstackClusterReplaceType_NoGlobalNetwork{` +
		`NoGlobalNetwork:` + fmt.Sprintf("%#v", this.NoGlobalNetwork) + `}`}, ", ")
	return s
}
func (this *AWSVPCVoltstackClusterReplaceType_GlobalNetworkList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.AWSVPCVoltstackClusterReplaceType_GlobalNetworkList{` +
		`GlobalNetworkList:` + fmt.Sprintf("%#v", this.GlobalNetworkList) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 27)
	s = append(s, "&aws_vpc_site.GlobalSpecType{")
	if this.Vpc != nil {
		s = append(s, "Vpc: "+fmt.Sprintf("%#v", this.Vpc)+",\n")
	}
	if this.SiteType != nil {
		s = append(s, "SiteType: "+fmt.Sprintf("%#v", this.SiteType)+",\n")
	}
	if this.Deployment != nil {
		s = append(s, "Deployment: "+fmt.Sprintf("%#v", this.Deployment)+",\n")
	}
	s = append(s, "InstanceType: "+fmt.Sprintf("%#v", this.InstanceType)+",\n")
	s = append(s, "NodesPerAz: "+fmt.Sprintf("%#v", this.NodesPerAz)+",\n")
	s = append(s, "VolterraSoftwareVersion: "+fmt.Sprintf("%#v", this.VolterraSoftwareVersion)+",\n")
	s = append(s, "OperatingSystemVersion: "+fmt.Sprintf("%#v", this.OperatingSystemVersion)+",\n")
	s = append(s, "AwsRegion: "+fmt.Sprintf("%#v", this.AwsRegion)+",\n")
	s = append(s, "DiskSize: "+fmt.Sprintf("%#v", this.DiskSize)+",\n")
	s = append(s, "SshKey: "+fmt.Sprintf("%#v", this.SshKey)+",\n")
	s = append(s, "Address: "+fmt.Sprintf("%#v", this.Address)+",\n")
	if this.Coordinates != nil {
		s = append(s, "Coordinates: "+fmt.Sprintf("%#v", this.Coordinates)+",\n")
	}
	if this.LogsReceiverChoice != nil {
		s = append(s, "LogsReceiverChoice: "+fmt.Sprintf("%#v", this.LogsReceiverChoice)+",\n")
	}
	if this.Sw != nil {
		s = append(s, "Sw: "+fmt.Sprintf("%#v", this.Sw)+",\n")
	}
	if this.Os != nil {
		s = append(s, "Os: "+fmt.Sprintf("%#v", this.Os)+",\n")
	}
	if this.VipParamsPerAz != nil {
		s = append(s, "VipParamsPerAz: "+fmt.Sprintf("%#v", this.VipParamsPerAz)+",\n")
	}
	if this.UserModificationTimestamp != nil {
		s = append(s, "UserModificationTimestamp: "+fmt.Sprintf("%#v", this.UserModificationTimestamp)+",\n")
	}
	if this.TfParams != nil {
		s = append(s, "TfParams: "+fmt.Sprintf("%#v", this.TfParams)+",\n")
	}
	if this.ViewInternal != nil {
		s = append(s, "ViewInternal: "+fmt.Sprintf("%#v", this.ViewInternal)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GlobalSpecType_IngressGw) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.GlobalSpecType_IngressGw{` +
		`IngressGw:` + fmt.Sprintf("%#v", this.IngressGw) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_IngressEgressGw) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.GlobalSpecType_IngressEgressGw{` +
		`IngressEgressGw:` + fmt.Sprintf("%#v", this.IngressEgressGw) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_VoltstackCluster) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.GlobalSpecType_VoltstackCluster{` +
		`VoltstackCluster:` + fmt.Sprintf("%#v", this.VoltstackCluster) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_AwsCred) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.GlobalSpecType_AwsCred{` +
		`AwsCred:` + fmt.Sprintf("%#v", this.AwsCred) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_Assisted) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.GlobalSpecType_Assisted{` +
		`Assisted:` + fmt.Sprintf("%#v", this.Assisted) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_LogsStreamingDisabled) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.GlobalSpecType_LogsStreamingDisabled{` +
		`LogsStreamingDisabled:` + fmt.Sprintf("%#v", this.LogsStreamingDisabled) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_LogReceiver) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.GlobalSpecType_LogReceiver{` +
		`LogReceiver:` + fmt.Sprintf("%#v", this.LogReceiver) + `}`}, ", ")
	return s
}
func (this *CreateSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 21)
	s = append(s, "&aws_vpc_site.CreateSpecType{")
	if this.Vpc != nil {
		s = append(s, "Vpc: "+fmt.Sprintf("%#v", this.Vpc)+",\n")
	}
	if this.SiteType != nil {
		s = append(s, "SiteType: "+fmt.Sprintf("%#v", this.SiteType)+",\n")
	}
	if this.Deployment != nil {
		s = append(s, "Deployment: "+fmt.Sprintf("%#v", this.Deployment)+",\n")
	}
	s = append(s, "InstanceType: "+fmt.Sprintf("%#v", this.InstanceType)+",\n")
	s = append(s, "NodesPerAz: "+fmt.Sprintf("%#v", this.NodesPerAz)+",\n")
	s = append(s, "DiskSize: "+fmt.Sprintf("%#v", this.DiskSize)+",\n")
	s = append(s, "AwsRegion: "+fmt.Sprintf("%#v", this.AwsRegion)+",\n")
	s = append(s, "SshKey: "+fmt.Sprintf("%#v", this.SshKey)+",\n")
	s = append(s, "Address: "+fmt.Sprintf("%#v", this.Address)+",\n")
	if this.Coordinates != nil {
		s = append(s, "Coordinates: "+fmt.Sprintf("%#v", this.Coordinates)+",\n")
	}
	if this.LogsReceiverChoice != nil {
		s = append(s, "LogsReceiverChoice: "+fmt.Sprintf("%#v", this.LogsReceiverChoice)+",\n")
	}
	if this.Sw != nil {
		s = append(s, "Sw: "+fmt.Sprintf("%#v", this.Sw)+",\n")
	}
	if this.Os != nil {
		s = append(s, "Os: "+fmt.Sprintf("%#v", this.Os)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateSpecType_IngressGw) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.CreateSpecType_IngressGw{` +
		`IngressGw:` + fmt.Sprintf("%#v", this.IngressGw) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_IngressEgressGw) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.CreateSpecType_IngressEgressGw{` +
		`IngressEgressGw:` + fmt.Sprintf("%#v", this.IngressEgressGw) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_VoltstackCluster) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.CreateSpecType_VoltstackCluster{` +
		`VoltstackCluster:` + fmt.Sprintf("%#v", this.VoltstackCluster) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_AwsCred) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.CreateSpecType_AwsCred{` +
		`AwsCred:` + fmt.Sprintf("%#v", this.AwsCred) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_Assisted) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.CreateSpecType_Assisted{` +
		`Assisted:` + fmt.Sprintf("%#v", this.Assisted) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_LogsStreamingDisabled) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.CreateSpecType_LogsStreamingDisabled{` +
		`LogsStreamingDisabled:` + fmt.Sprintf("%#v", this.LogsStreamingDisabled) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_LogReceiver) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.CreateSpecType_LogReceiver{` +
		`LogReceiver:` + fmt.Sprintf("%#v", this.LogReceiver) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&aws_vpc_site.ReplaceSpecType{")
	if this.SiteType != nil {
		s = append(s, "SiteType: "+fmt.Sprintf("%#v", this.SiteType)+",\n")
	}
	s = append(s, "NodesPerAz: "+fmt.Sprintf("%#v", this.NodesPerAz)+",\n")
	s = append(s, "Address: "+fmt.Sprintf("%#v", this.Address)+",\n")
	if this.Coordinates != nil {
		s = append(s, "Coordinates: "+fmt.Sprintf("%#v", this.Coordinates)+",\n")
	}
	if this.LogsReceiverChoice != nil {
		s = append(s, "LogsReceiverChoice: "+fmt.Sprintf("%#v", this.LogsReceiverChoice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ReplaceSpecType_IngressGw) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.ReplaceSpecType_IngressGw{` +
		`IngressGw:` + fmt.Sprintf("%#v", this.IngressGw) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_IngressEgressGw) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.ReplaceSpecType_IngressEgressGw{` +
		`IngressEgressGw:` + fmt.Sprintf("%#v", this.IngressEgressGw) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_VoltstackCluster) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.ReplaceSpecType_VoltstackCluster{` +
		`VoltstackCluster:` + fmt.Sprintf("%#v", this.VoltstackCluster) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_LogsStreamingDisabled) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.ReplaceSpecType_LogsStreamingDisabled{` +
		`LogsStreamingDisabled:` + fmt.Sprintf("%#v", this.LogsStreamingDisabled) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_LogReceiver) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.ReplaceSpecType_LogReceiver{` +
		`LogReceiver:` + fmt.Sprintf("%#v", this.LogReceiver) + `}`}, ", ")
	return s
}
func (this *GetSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 24)
	s = append(s, "&aws_vpc_site.GetSpecType{")
	if this.Vpc != nil {
		s = append(s, "Vpc: "+fmt.Sprintf("%#v", this.Vpc)+",\n")
	}
	if this.SiteType != nil {
		s = append(s, "SiteType: "+fmt.Sprintf("%#v", this.SiteType)+",\n")
	}
	if this.Deployment != nil {
		s = append(s, "Deployment: "+fmt.Sprintf("%#v", this.Deployment)+",\n")
	}
	s = append(s, "InstanceType: "+fmt.Sprintf("%#v", this.InstanceType)+",\n")
	s = append(s, "NodesPerAz: "+fmt.Sprintf("%#v", this.NodesPerAz)+",\n")
	s = append(s, "DiskSize: "+fmt.Sprintf("%#v", this.DiskSize)+",\n")
	s = append(s, "VolterraSoftwareVersion: "+fmt.Sprintf("%#v", this.VolterraSoftwareVersion)+",\n")
	s = append(s, "OperatingSystemVersion: "+fmt.Sprintf("%#v", this.OperatingSystemVersion)+",\n")
	s = append(s, "AwsRegion: "+fmt.Sprintf("%#v", this.AwsRegion)+",\n")
	s = append(s, "SshKey: "+fmt.Sprintf("%#v", this.SshKey)+",\n")
	s = append(s, "Address: "+fmt.Sprintf("%#v", this.Address)+",\n")
	if this.Coordinates != nil {
		s = append(s, "Coordinates: "+fmt.Sprintf("%#v", this.Coordinates)+",\n")
	}
	if this.LogsReceiverChoice != nil {
		s = append(s, "LogsReceiverChoice: "+fmt.Sprintf("%#v", this.LogsReceiverChoice)+",\n")
	}
	s = append(s, "SiteState: "+fmt.Sprintf("%#v", this.SiteState)+",\n")
	if this.VipParamsPerAz != nil {
		s = append(s, "VipParamsPerAz: "+fmt.Sprintf("%#v", this.VipParamsPerAz)+",\n")
	}
	if this.UserModificationTimestamp != nil {
		s = append(s, "UserModificationTimestamp: "+fmt.Sprintf("%#v", this.UserModificationTimestamp)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetSpecType_IngressGw) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.GetSpecType_IngressGw{` +
		`IngressGw:` + fmt.Sprintf("%#v", this.IngressGw) + `}`}, ", ")
	return s
}
func (this *GetSpecType_IngressEgressGw) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.GetSpecType_IngressEgressGw{` +
		`IngressEgressGw:` + fmt.Sprintf("%#v", this.IngressEgressGw) + `}`}, ", ")
	return s
}
func (this *GetSpecType_VoltstackCluster) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.GetSpecType_VoltstackCluster{` +
		`VoltstackCluster:` + fmt.Sprintf("%#v", this.VoltstackCluster) + `}`}, ", ")
	return s
}
func (this *GetSpecType_AwsCred) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.GetSpecType_AwsCred{` +
		`AwsCred:` + fmt.Sprintf("%#v", this.AwsCred) + `}`}, ", ")
	return s
}
func (this *GetSpecType_Assisted) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.GetSpecType_Assisted{` +
		`Assisted:` + fmt.Sprintf("%#v", this.Assisted) + `}`}, ", ")
	return s
}
func (this *GetSpecType_LogsStreamingDisabled) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.GetSpecType_LogsStreamingDisabled{` +
		`LogsStreamingDisabled:` + fmt.Sprintf("%#v", this.LogsStreamingDisabled) + `}`}, ", ")
	return s
}
func (this *GetSpecType_LogReceiver) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&aws_vpc_site.GetSpecType_LogReceiver{` +
		`LogReceiver:` + fmt.Sprintf("%#v", this.LogReceiver) + `}`}, ", ")
	return s
}
func valueToGoStringTypes(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *AWSVPCIngressGwType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AWSVPCIngressGwType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.AzNodes) > 0 {
		for _, msg := range m.AzNodes {
			dAtA[i] = 0xa
			i++
			i = encodeVarintTypes(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.AwsCertifiedHw) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.AwsCertifiedHw)))
		i += copy(dAtA[i:], m.AwsCertifiedHw)
	}
	if m.AllowedVipPort != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.AllowedVipPort.Size()))
		n1, err := m.AllowedVipPort.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	return i, nil
}

func (m *AWSVPCIngressEgressGwType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AWSVPCIngressEgressGwType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.AzNodes) > 0 {
		for _, msg := range m.AzNodes {
			dAtA[i] = 0xa
			i++
			i = encodeVarintTypes(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.NetworkPolicyChoice != nil {
		nn2, err := m.NetworkPolicyChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn2
	}
	if m.ForwardProxyChoice != nil {
		nn3, err := m.ForwardProxyChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn3
	}
	if len(m.AwsCertifiedHw) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.AwsCertifiedHw)))
		i += copy(dAtA[i:], m.AwsCertifiedHw)
	}
	if m.InsideStaticRouteChoice != nil {
		nn4, err := m.InsideStaticRouteChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn4
	}
	if m.OutsideStaticRouteChoice != nil {
		nn5, err := m.OutsideStaticRouteChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn5
	}
	if m.GlobalNetworkChoice != nil {
		nn6, err := m.GlobalNetworkChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn6
	}
	if m.AllowedVipPort != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.AllowedVipPort.Size()))
		n7, err := m.AllowedVipPort.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n7
	}
	if m.AllowedVipPortSli != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.AllowedVipPortSli.Size()))
		n8, err := m.AllowedVipPortSli.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n8
	}
	return i, nil
}

func (m *AWSVPCIngressEgressGwType_NoNetworkPolicy) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoNetworkPolicy != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoNetworkPolicy.Size()))
		n9, err := m.NoNetworkPolicy.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n9
	}
	return i, nil
}
func (m *AWSVPCIngressEgressGwType_NoForwardProxy) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoForwardProxy != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoForwardProxy.Size()))
		n10, err := m.NoForwardProxy.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n10
	}
	return i, nil
}
func (m *AWSVPCIngressEgressGwType_ActiveForwardProxyPolicies) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ActiveForwardProxyPolicies != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ActiveForwardProxyPolicies.Size()))
		n11, err := m.ActiveForwardProxyPolicies.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n11
	}
	return i, nil
}
func (m *AWSVPCIngressEgressGwType_ActiveNetworkPolicies) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ActiveNetworkPolicies != nil {
		dAtA[i] = 0x52
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ActiveNetworkPolicies.Size()))
		n12, err := m.ActiveNetworkPolicies.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n12
	}
	return i, nil
}
func (m *AWSVPCIngressEgressGwType_NoInsideStaticRoutes) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoInsideStaticRoutes != nil {
		dAtA[i] = 0x62
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoInsideStaticRoutes.Size()))
		n13, err := m.NoInsideStaticRoutes.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n13
	}
	return i, nil
}
func (m *AWSVPCIngressEgressGwType_InsideStaticRoutes) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.InsideStaticRoutes != nil {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.InsideStaticRoutes.Size()))
		n14, err := m.InsideStaticRoutes.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n14
	}
	return i, nil
}
func (m *AWSVPCIngressEgressGwType_NoOutsideStaticRoutes) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoOutsideStaticRoutes != nil {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoOutsideStaticRoutes.Size()))
		n15, err := m.NoOutsideStaticRoutes.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n15
	}
	return i, nil
}
func (m *AWSVPCIngressEgressGwType_OutsideStaticRoutes) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.OutsideStaticRoutes != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.OutsideStaticRoutes.Size()))
		n16, err := m.OutsideStaticRoutes.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n16
	}
	return i, nil
}
func (m *AWSVPCIngressEgressGwType_NoGlobalNetwork) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoGlobalNetwork != nil {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoGlobalNetwork.Size()))
		n17, err := m.NoGlobalNetwork.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n17
	}
	return i, nil
}
func (m *AWSVPCIngressEgressGwType_GlobalNetworkList) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GlobalNetworkList != nil {
		dAtA[i] = 0x9a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.GlobalNetworkList.Size()))
		n18, err := m.GlobalNetworkList.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n18
	}
	return i, nil
}
func (m *AWSVPCIngressEgressGwType_ForwardProxyAllowAll) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ForwardProxyAllowAll != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ForwardProxyAllowAll.Size()))
		n19, err := m.ForwardProxyAllowAll.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n19
	}
	return i, nil
}
func (m *AWSVPCVoltstackClusterType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AWSVPCVoltstackClusterType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.AwsCertifiedHw) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.AwsCertifiedHw)))
		i += copy(dAtA[i:], m.AwsCertifiedHw)
	}
	if len(m.AzNodes) > 0 {
		for _, msg := range m.AzNodes {
			dAtA[i] = 0x12
			i++
			i = encodeVarintTypes(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.NetworkPolicyChoice != nil {
		nn20, err := m.NetworkPolicyChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn20
	}
	if m.ForwardProxyChoice != nil {
		nn21, err := m.ForwardProxyChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn21
	}
	if m.OutsideStaticRouteChoice != nil {
		nn22, err := m.OutsideStaticRouteChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn22
	}
	if m.GlobalNetworkChoice != nil {
		nn23, err := m.GlobalNetworkChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn23
	}
	if m.StorageClassChoice != nil {
		nn24, err := m.StorageClassChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn24
	}
	if m.AllowedVipPort != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.AllowedVipPort.Size()))
		n25, err := m.AllowedVipPort.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n25
	}
	if m.K8SClusterChoice != nil {
		nn26, err := m.K8SClusterChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn26
	}
	return i, nil
}

func (m *AWSVPCVoltstackClusterType_NoNetworkPolicy) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoNetworkPolicy != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoNetworkPolicy.Size()))
		n27, err := m.NoNetworkPolicy.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n27
	}
	return i, nil
}
func (m *AWSVPCVoltstackClusterType_ActiveNetworkPolicies) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ActiveNetworkPolicies != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ActiveNetworkPolicies.Size()))
		n28, err := m.ActiveNetworkPolicies.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n28
	}
	return i, nil
}
func (m *AWSVPCVoltstackClusterType_NoForwardProxy) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoForwardProxy != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoForwardProxy.Size()))
		n29, err := m.NoForwardProxy.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n29
	}
	return i, nil
}
func (m *AWSVPCVoltstackClusterType_ActiveForwardProxyPolicies) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ActiveForwardProxyPolicies != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ActiveForwardProxyPolicies.Size()))
		n30, err := m.ActiveForwardProxyPolicies.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n30
	}
	return i, nil
}
func (m *AWSVPCVoltstackClusterType_NoOutsideStaticRoutes) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoOutsideStaticRoutes != nil {
		dAtA[i] = 0x52
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoOutsideStaticRoutes.Size()))
		n31, err := m.NoOutsideStaticRoutes.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n31
	}
	return i, nil
}
func (m *AWSVPCVoltstackClusterType_OutsideStaticRoutes) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.OutsideStaticRoutes != nil {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.OutsideStaticRoutes.Size()))
		n32, err := m.OutsideStaticRoutes.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n32
	}
	return i, nil
}
func (m *AWSVPCVoltstackClusterType_NoGlobalNetwork) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoGlobalNetwork != nil {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoGlobalNetwork.Size()))
		n33, err := m.NoGlobalNetwork.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n33
	}
	return i, nil
}
func (m *AWSVPCVoltstackClusterType_GlobalNetworkList) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GlobalNetworkList != nil {
		dAtA[i] = 0x72
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.GlobalNetworkList.Size()))
		n34, err := m.GlobalNetworkList.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n34
	}
	return i, nil
}
func (m *AWSVPCVoltstackClusterType_ForwardProxyAllowAll) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ForwardProxyAllowAll != nil {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ForwardProxyAllowAll.Size()))
		n35, err := m.ForwardProxyAllowAll.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n35
	}
	return i, nil
}
func (m *AWSVPCVoltstackClusterType_DefaultStorage) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.DefaultStorage != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.DefaultStorage.Size()))
		n36, err := m.DefaultStorage.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n36
	}
	return i, nil
}
func (m *AWSVPCVoltstackClusterType_StorageClassList) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.StorageClassList != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.StorageClassList.Size()))
		n37, err := m.StorageClassList.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n37
	}
	return i, nil
}
func (m *AWSVPCVoltstackClusterType_NoK8SCluster) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoK8SCluster != nil {
		dAtA[i] = 0xd2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoK8SCluster.Size()))
		n38, err := m.NoK8SCluster.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n38
	}
	return i, nil
}
func (m *AWSVPCVoltstackClusterType_K8SCluster) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.K8SCluster != nil {
		dAtA[i] = 0xda
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.K8SCluster.Size()))
		n39, err := m.K8SCluster.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n39
	}
	return i, nil
}
func (m *AWSVPCIngressGwReplaceType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AWSVPCIngressGwReplaceType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.AllowedVipPort != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.AllowedVipPort.Size()))
		n40, err := m.AllowedVipPort.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n40
	}
	return i, nil
}

func (m *AWSVPCIngressEgressGwReplaceType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AWSVPCIngressEgressGwReplaceType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.NetworkPolicyChoice != nil {
		nn41, err := m.NetworkPolicyChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn41
	}
	if m.ForwardProxyChoice != nil {
		nn42, err := m.ForwardProxyChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn42
	}
	if m.InsideStaticRouteChoice != nil {
		nn43, err := m.InsideStaticRouteChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn43
	}
	if m.OutsideStaticRouteChoice != nil {
		nn44, err := m.OutsideStaticRouteChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn44
	}
	if m.GlobalNetworkChoice != nil {
		nn45, err := m.GlobalNetworkChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn45
	}
	if m.AllowedVipPort != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.AllowedVipPort.Size()))
		n46, err := m.AllowedVipPort.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n46
	}
	if m.AllowedVipPortSli != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.AllowedVipPortSli.Size()))
		n47, err := m.AllowedVipPortSli.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n47
	}
	return i, nil
}

func (m *AWSVPCIngressEgressGwReplaceType_NoNetworkPolicy) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoNetworkPolicy != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoNetworkPolicy.Size()))
		n48, err := m.NoNetworkPolicy.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n48
	}
	return i, nil
}
func (m *AWSVPCIngressEgressGwReplaceType_NoForwardProxy) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoForwardProxy != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoForwardProxy.Size()))
		n49, err := m.NoForwardProxy.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n49
	}
	return i, nil
}
func (m *AWSVPCIngressEgressGwReplaceType_ActiveForwardProxyPolicies) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ActiveForwardProxyPolicies != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ActiveForwardProxyPolicies.Size()))
		n50, err := m.ActiveForwardProxyPolicies.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n50
	}
	return i, nil
}
func (m *AWSVPCIngressEgressGwReplaceType_ActiveNetworkPolicies) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ActiveNetworkPolicies != nil {
		dAtA[i] = 0x52
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ActiveNetworkPolicies.Size()))
		n51, err := m.ActiveNetworkPolicies.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n51
	}
	return i, nil
}
func (m *AWSVPCIngressEgressGwReplaceType_NoInsideStaticRoutes) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoInsideStaticRoutes != nil {
		dAtA[i] = 0x62
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoInsideStaticRoutes.Size()))
		n52, err := m.NoInsideStaticRoutes.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n52
	}
	return i, nil
}
func (m *AWSVPCIngressEgressGwReplaceType_InsideStaticRoutes) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.InsideStaticRoutes != nil {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.InsideStaticRoutes.Size()))
		n53, err := m.InsideStaticRoutes.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n53
	}
	return i, nil
}
func (m *AWSVPCIngressEgressGwReplaceType_NoOutsideStaticRoutes) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoOutsideStaticRoutes != nil {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoOutsideStaticRoutes.Size()))
		n54, err := m.NoOutsideStaticRoutes.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n54
	}
	return i, nil
}
func (m *AWSVPCIngressEgressGwReplaceType_OutsideStaticRoutes) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.OutsideStaticRoutes != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.OutsideStaticRoutes.Size()))
		n55, err := m.OutsideStaticRoutes.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n55
	}
	return i, nil
}
func (m *AWSVPCIngressEgressGwReplaceType_NoGlobalNetwork) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoGlobalNetwork != nil {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoGlobalNetwork.Size()))
		n56, err := m.NoGlobalNetwork.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n56
	}
	return i, nil
}
func (m *AWSVPCIngressEgressGwReplaceType_GlobalNetworkList) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GlobalNetworkList != nil {
		dAtA[i] = 0x9a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.GlobalNetworkList.Size()))
		n57, err := m.GlobalNetworkList.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n57
	}
	return i, nil
}
func (m *AWSVPCIngressEgressGwReplaceType_ForwardProxyAllowAll) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ForwardProxyAllowAll != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ForwardProxyAllowAll.Size()))
		n58, err := m.ForwardProxyAllowAll.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n58
	}
	return i, nil
}
func (m *AWSVPCVoltstackClusterReplaceType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AWSVPCVoltstackClusterReplaceType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.NetworkPolicyChoice != nil {
		nn59, err := m.NetworkPolicyChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn59
	}
	if m.ForwardProxyChoice != nil {
		nn60, err := m.ForwardProxyChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn60
	}
	if m.OutsideStaticRouteChoice != nil {
		nn61, err := m.OutsideStaticRouteChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn61
	}
	if m.GlobalNetworkChoice != nil {
		nn62, err := m.GlobalNetworkChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn62
	}
	if m.AllowedVipPort != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.AllowedVipPort.Size()))
		n63, err := m.AllowedVipPort.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n63
	}
	return i, nil
}

func (m *AWSVPCVoltstackClusterReplaceType_NoNetworkPolicy) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoNetworkPolicy != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoNetworkPolicy.Size()))
		n64, err := m.NoNetworkPolicy.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n64
	}
	return i, nil
}
func (m *AWSVPCVoltstackClusterReplaceType_ActiveNetworkPolicies) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ActiveNetworkPolicies != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ActiveNetworkPolicies.Size()))
		n65, err := m.ActiveNetworkPolicies.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n65
	}
	return i, nil
}
func (m *AWSVPCVoltstackClusterReplaceType_NoForwardProxy) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoForwardProxy != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoForwardProxy.Size()))
		n66, err := m.NoForwardProxy.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n66
	}
	return i, nil
}
func (m *AWSVPCVoltstackClusterReplaceType_ActiveForwardProxyPolicies) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ActiveForwardProxyPolicies != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ActiveForwardProxyPolicies.Size()))
		n67, err := m.ActiveForwardProxyPolicies.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n67
	}
	return i, nil
}
func (m *AWSVPCVoltstackClusterReplaceType_NoOutsideStaticRoutes) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoOutsideStaticRoutes != nil {
		dAtA[i] = 0x52
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoOutsideStaticRoutes.Size()))
		n68, err := m.NoOutsideStaticRoutes.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n68
	}
	return i, nil
}
func (m *AWSVPCVoltstackClusterReplaceType_OutsideStaticRoutes) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.OutsideStaticRoutes != nil {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.OutsideStaticRoutes.Size()))
		n69, err := m.OutsideStaticRoutes.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n69
	}
	return i, nil
}
func (m *AWSVPCVoltstackClusterReplaceType_NoGlobalNetwork) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NoGlobalNetwork != nil {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NoGlobalNetwork.Size()))
		n70, err := m.NoGlobalNetwork.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n70
	}
	return i, nil
}
func (m *AWSVPCVoltstackClusterReplaceType_GlobalNetworkList) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GlobalNetworkList != nil {
		dAtA[i] = 0x72
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.GlobalNetworkList.Size()))
		n71, err := m.GlobalNetworkList.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n71
	}
	return i, nil
}
func (m *AWSVPCVoltstackClusterReplaceType_ForwardProxyAllowAll) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ForwardProxyAllowAll != nil {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ForwardProxyAllowAll.Size()))
		n72, err := m.ForwardProxyAllowAll.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n72
	}
	return i, nil
}
func (m *GlobalSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GlobalSpecType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Vpc != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.Vpc.Size()))
		n73, err := m.Vpc.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n73
	}
	if m.SiteType != nil {
		nn74, err := m.SiteType.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn74
	}
	if m.Deployment != nil {
		nn75, err := m.Deployment.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn75
	}
	if len(m.InstanceType) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.InstanceType)))
		i += copy(dAtA[i:], m.InstanceType)
	}
	if len(m.VolterraSoftwareVersion) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.VolterraSoftwareVersion)))
		i += copy(dAtA[i:], m.VolterraSoftwareVersion)
	}
	if len(m.OperatingSystemVersion) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.OperatingSystemVersion)))
		i += copy(dAtA[i:], m.OperatingSystemVersion)
	}
	if len(m.AwsRegion) > 0 {
		dAtA[i] = 0x62
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.AwsRegion)))
		i += copy(dAtA[i:], m.AwsRegion)
	}
	if len(m.SshKey) > 0 {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.SshKey)))
		i += copy(dAtA[i:], m.SshKey)
	}
	if m.NodesPerAz != 0 {
		dAtA[i] = 0x70
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NodesPerAz))
	}
	if m.DiskSize != 0 {
		dAtA[i] = 0x78
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.DiskSize))
	}
	if len(m.Address) > 0 {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Address)))
		i += copy(dAtA[i:], m.Address)
	}
	if m.Coordinates != nil {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.Coordinates.Size()))
		n76, err := m.Coordinates.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n76
	}
	if m.LogsReceiverChoice != nil {
		nn77, err := m.LogsReceiverChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn77
	}
	if m.Sw != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.Sw.Size()))
		n78, err := m.Sw.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n78
	}
	if m.Os != nil {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.Os.Size()))
		n79, err := m.Os.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n79
	}
	if len(m.VipParamsPerAz) > 0 {
		for _, msg := range m.VipParamsPerAz {
			dAtA[i] = 0xc2
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintTypes(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.UserModificationTimestamp != nil {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UserModificationTimestamp.Size()))
		n80, err := m.UserModificationTimestamp.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n80
	}
	if m.TfParams != nil {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x3e
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.TfParams.Size()))
		n81, err := m.TfParams.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n81
	}
	if m.ViewInternal != nil {
		dAtA[i] = 0xc2
		i++
		dAtA[i] = 0x3e
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ViewInternal.Size()))
		n82, err := m.ViewInternal.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n82
	}
	return i, nil
}

func (m *GlobalSpecType_IngressGw) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.IngressGw != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.IngressGw.Size()))
		n83, err := m.IngressGw.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n83
	}
	return i, nil
}
func (m *GlobalSpecType_IngressEgressGw) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.IngressEgressGw != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.IngressEgressGw.Size()))
		n84, err := m.IngressEgressGw.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n84
	}
	return i, nil
}
func (m *GlobalSpecType_AwsCred) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.AwsCred != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.AwsCred.Size()))
		n85, err := m.AwsCred.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n85
	}
	return i, nil
}
func (m *GlobalSpecType_Assisted) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.Assisted != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.Assisted.Size()))
		n86, err := m.Assisted.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n86
	}
	return i, nil
}
func (m *GlobalSpecType_VoltstackCluster) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.VoltstackCluster != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.VoltstackCluster.Size()))
		n87, err := m.VoltstackCluster.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n87
	}
	return i, nil
}
func (m *GlobalSpecType_LogsStreamingDisabled) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LogsStreamingDisabled != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.LogsStreamingDisabled.Size()))
		n88, err := m.LogsStreamingDisabled.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n88
	}
	return i, nil
}
func (m *GlobalSpecType_LogReceiver) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LogReceiver != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.LogReceiver.Size()))
		n89, err := m.LogReceiver.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n89
	}
	return i, nil
}
func (m *CreateSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateSpecType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Vpc != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.Vpc.Size()))
		n90, err := m.Vpc.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n90
	}
	if m.SiteType != nil {
		nn91, err := m.SiteType.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn91
	}
	if m.Deployment != nil {
		nn92, err := m.Deployment.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn92
	}
	if len(m.InstanceType) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.InstanceType)))
		i += copy(dAtA[i:], m.InstanceType)
	}
	if len(m.AwsRegion) > 0 {
		dAtA[i] = 0x62
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.AwsRegion)))
		i += copy(dAtA[i:], m.AwsRegion)
	}
	if len(m.SshKey) > 0 {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.SshKey)))
		i += copy(dAtA[i:], m.SshKey)
	}
	if m.NodesPerAz != 0 {
		dAtA[i] = 0x70
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NodesPerAz))
	}
	if m.DiskSize != 0 {
		dAtA[i] = 0x78
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.DiskSize))
	}
	if len(m.Address) > 0 {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Address)))
		i += copy(dAtA[i:], m.Address)
	}
	if m.Coordinates != nil {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.Coordinates.Size()))
		n93, err := m.Coordinates.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n93
	}
	if m.LogsReceiverChoice != nil {
		nn94, err := m.LogsReceiverChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn94
	}
	if m.Sw != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.Sw.Size()))
		n95, err := m.Sw.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n95
	}
	if m.Os != nil {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.Os.Size()))
		n96, err := m.Os.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n96
	}
	return i, nil
}

func (m *CreateSpecType_IngressGw) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.IngressGw != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.IngressGw.Size()))
		n97, err := m.IngressGw.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n97
	}
	return i, nil
}
func (m *CreateSpecType_IngressEgressGw) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.IngressEgressGw != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.IngressEgressGw.Size()))
		n98, err := m.IngressEgressGw.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n98
	}
	return i, nil
}
func (m *CreateSpecType_AwsCred) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.AwsCred != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.AwsCred.Size()))
		n99, err := m.AwsCred.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n99
	}
	return i, nil
}
func (m *CreateSpecType_Assisted) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.Assisted != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.Assisted.Size()))
		n100, err := m.Assisted.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n100
	}
	return i, nil
}
func (m *CreateSpecType_VoltstackCluster) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.VoltstackCluster != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.VoltstackCluster.Size()))
		n101, err := m.VoltstackCluster.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n101
	}
	return i, nil
}
func (m *CreateSpecType_LogsStreamingDisabled) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LogsStreamingDisabled != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.LogsStreamingDisabled.Size()))
		n102, err := m.LogsStreamingDisabled.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n102
	}
	return i, nil
}
func (m *CreateSpecType_LogReceiver) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LogReceiver != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.LogReceiver.Size()))
		n103, err := m.LogReceiver.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n103
	}
	return i, nil
}
func (m *ReplaceSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReplaceSpecType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.SiteType != nil {
		nn104, err := m.SiteType.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn104
	}
	if m.NodesPerAz != 0 {
		dAtA[i] = 0x70
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NodesPerAz))
	}
	if len(m.Address) > 0 {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Address)))
		i += copy(dAtA[i:], m.Address)
	}
	if m.Coordinates != nil {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.Coordinates.Size()))
		n105, err := m.Coordinates.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n105
	}
	if m.LogsReceiverChoice != nil {
		nn106, err := m.LogsReceiverChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn106
	}
	return i, nil
}

func (m *ReplaceSpecType_IngressGw) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.IngressGw != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.IngressGw.Size()))
		n107, err := m.IngressGw.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n107
	}
	return i, nil
}
func (m *ReplaceSpecType_IngressEgressGw) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.IngressEgressGw != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.IngressEgressGw.Size()))
		n108, err := m.IngressEgressGw.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n108
	}
	return i, nil
}
func (m *ReplaceSpecType_VoltstackCluster) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.VoltstackCluster != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.VoltstackCluster.Size()))
		n109, err := m.VoltstackCluster.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n109
	}
	return i, nil
}
func (m *ReplaceSpecType_LogsStreamingDisabled) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LogsStreamingDisabled != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.LogsStreamingDisabled.Size()))
		n110, err := m.LogsStreamingDisabled.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n110
	}
	return i, nil
}
func (m *ReplaceSpecType_LogReceiver) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LogReceiver != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.LogReceiver.Size()))
		n111, err := m.LogReceiver.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n111
	}
	return i, nil
}
func (m *GetSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetSpecType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Vpc != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.Vpc.Size()))
		n112, err := m.Vpc.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n112
	}
	if m.SiteType != nil {
		nn113, err := m.SiteType.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn113
	}
	if m.Deployment != nil {
		nn114, err := m.Deployment.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn114
	}
	if len(m.InstanceType) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.InstanceType)))
		i += copy(dAtA[i:], m.InstanceType)
	}
	if len(m.VolterraSoftwareVersion) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.VolterraSoftwareVersion)))
		i += copy(dAtA[i:], m.VolterraSoftwareVersion)
	}
	if len(m.OperatingSystemVersion) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.OperatingSystemVersion)))
		i += copy(dAtA[i:], m.OperatingSystemVersion)
	}
	if len(m.AwsRegion) > 0 {
		dAtA[i] = 0x62
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.AwsRegion)))
		i += copy(dAtA[i:], m.AwsRegion)
	}
	if len(m.SshKey) > 0 {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.SshKey)))
		i += copy(dAtA[i:], m.SshKey)
	}
	if m.NodesPerAz != 0 {
		dAtA[i] = 0x70
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NodesPerAz))
	}
	if m.DiskSize != 0 {
		dAtA[i] = 0x78
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.DiskSize))
	}
	if len(m.Address) > 0 {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Address)))
		i += copy(dAtA[i:], m.Address)
	}
	if m.Coordinates != nil {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.Coordinates.Size()))
		n115, err := m.Coordinates.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n115
	}
	if m.LogsReceiverChoice != nil {
		nn116, err := m.LogsReceiverChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn116
	}
	if m.SiteState != 0 {
		dAtA[i] = 0xb0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.SiteState))
	}
	if len(m.VipParamsPerAz) > 0 {
		for _, msg := range m.VipParamsPerAz {
			dAtA[i] = 0xc2
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintTypes(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.UserModificationTimestamp != nil {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.UserModificationTimestamp.Size()))
		n117, err := m.UserModificationTimestamp.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n117
	}
	return i, nil
}

func (m *GetSpecType_IngressGw) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.IngressGw != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.IngressGw.Size()))
		n118, err := m.IngressGw.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n118
	}
	return i, nil
}
func (m *GetSpecType_IngressEgressGw) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.IngressEgressGw != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.IngressEgressGw.Size()))
		n119, err := m.IngressEgressGw.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n119
	}
	return i, nil
}
func (m *GetSpecType_AwsCred) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.AwsCred != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.AwsCred.Size()))
		n120, err := m.AwsCred.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n120
	}
	return i, nil
}
func (m *GetSpecType_Assisted) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.Assisted != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.Assisted.Size()))
		n121, err := m.Assisted.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n121
	}
	return i, nil
}
func (m *GetSpecType_VoltstackCluster) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.VoltstackCluster != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.VoltstackCluster.Size()))
		n122, err := m.VoltstackCluster.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n122
	}
	return i, nil
}
func (m *GetSpecType_LogsStreamingDisabled) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LogsStreamingDisabled != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.LogsStreamingDisabled.Size()))
		n123, err := m.LogsStreamingDisabled.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n123
	}
	return i, nil
}
func (m *GetSpecType_LogReceiver) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LogReceiver != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.LogReceiver.Size()))
		n124, err := m.LogReceiver.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n124
	}
	return i, nil
}
func encodeVarintTypes(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *AWSVPCIngressGwType) Size() (n int) {
	var l int
	_ = l
	if len(m.AzNodes) > 0 {
		for _, e := range m.AzNodes {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	l = len(m.AwsCertifiedHw)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.AllowedVipPort != nil {
		l = m.AllowedVipPort.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *AWSVPCIngressEgressGwType) Size() (n int) {
	var l int
	_ = l
	if len(m.AzNodes) > 0 {
		for _, e := range m.AzNodes {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	if m.NetworkPolicyChoice != nil {
		n += m.NetworkPolicyChoice.Size()
	}
	if m.ForwardProxyChoice != nil {
		n += m.ForwardProxyChoice.Size()
	}
	l = len(m.AwsCertifiedHw)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.InsideStaticRouteChoice != nil {
		n += m.InsideStaticRouteChoice.Size()
	}
	if m.OutsideStaticRouteChoice != nil {
		n += m.OutsideStaticRouteChoice.Size()
	}
	if m.GlobalNetworkChoice != nil {
		n += m.GlobalNetworkChoice.Size()
	}
	if m.AllowedVipPort != nil {
		l = m.AllowedVipPort.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	if m.AllowedVipPortSli != nil {
		l = m.AllowedVipPortSli.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *AWSVPCIngressEgressGwType_NoNetworkPolicy) Size() (n int) {
	var l int
	_ = l
	if m.NoNetworkPolicy != nil {
		l = m.NoNetworkPolicy.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCIngressEgressGwType_NoForwardProxy) Size() (n int) {
	var l int
	_ = l
	if m.NoForwardProxy != nil {
		l = m.NoForwardProxy.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCIngressEgressGwType_ActiveForwardProxyPolicies) Size() (n int) {
	var l int
	_ = l
	if m.ActiveForwardProxyPolicies != nil {
		l = m.ActiveForwardProxyPolicies.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCIngressEgressGwType_ActiveNetworkPolicies) Size() (n int) {
	var l int
	_ = l
	if m.ActiveNetworkPolicies != nil {
		l = m.ActiveNetworkPolicies.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCIngressEgressGwType_NoInsideStaticRoutes) Size() (n int) {
	var l int
	_ = l
	if m.NoInsideStaticRoutes != nil {
		l = m.NoInsideStaticRoutes.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCIngressEgressGwType_InsideStaticRoutes) Size() (n int) {
	var l int
	_ = l
	if m.InsideStaticRoutes != nil {
		l = m.InsideStaticRoutes.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCIngressEgressGwType_NoOutsideStaticRoutes) Size() (n int) {
	var l int
	_ = l
	if m.NoOutsideStaticRoutes != nil {
		l = m.NoOutsideStaticRoutes.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCIngressEgressGwType_OutsideStaticRoutes) Size() (n int) {
	var l int
	_ = l
	if m.OutsideStaticRoutes != nil {
		l = m.OutsideStaticRoutes.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCIngressEgressGwType_NoGlobalNetwork) Size() (n int) {
	var l int
	_ = l
	if m.NoGlobalNetwork != nil {
		l = m.NoGlobalNetwork.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCIngressEgressGwType_GlobalNetworkList) Size() (n int) {
	var l int
	_ = l
	if m.GlobalNetworkList != nil {
		l = m.GlobalNetworkList.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCIngressEgressGwType_ForwardProxyAllowAll) Size() (n int) {
	var l int
	_ = l
	if m.ForwardProxyAllowAll != nil {
		l = m.ForwardProxyAllowAll.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCVoltstackClusterType) Size() (n int) {
	var l int
	_ = l
	l = len(m.AwsCertifiedHw)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	if len(m.AzNodes) > 0 {
		for _, e := range m.AzNodes {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	if m.NetworkPolicyChoice != nil {
		n += m.NetworkPolicyChoice.Size()
	}
	if m.ForwardProxyChoice != nil {
		n += m.ForwardProxyChoice.Size()
	}
	if m.OutsideStaticRouteChoice != nil {
		n += m.OutsideStaticRouteChoice.Size()
	}
	if m.GlobalNetworkChoice != nil {
		n += m.GlobalNetworkChoice.Size()
	}
	if m.StorageClassChoice != nil {
		n += m.StorageClassChoice.Size()
	}
	if m.AllowedVipPort != nil {
		l = m.AllowedVipPort.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	if m.K8SClusterChoice != nil {
		n += m.K8SClusterChoice.Size()
	}
	return n
}

func (m *AWSVPCVoltstackClusterType_NoNetworkPolicy) Size() (n int) {
	var l int
	_ = l
	if m.NoNetworkPolicy != nil {
		l = m.NoNetworkPolicy.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCVoltstackClusterType_ActiveNetworkPolicies) Size() (n int) {
	var l int
	_ = l
	if m.ActiveNetworkPolicies != nil {
		l = m.ActiveNetworkPolicies.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCVoltstackClusterType_NoForwardProxy) Size() (n int) {
	var l int
	_ = l
	if m.NoForwardProxy != nil {
		l = m.NoForwardProxy.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCVoltstackClusterType_ActiveForwardProxyPolicies) Size() (n int) {
	var l int
	_ = l
	if m.ActiveForwardProxyPolicies != nil {
		l = m.ActiveForwardProxyPolicies.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCVoltstackClusterType_NoOutsideStaticRoutes) Size() (n int) {
	var l int
	_ = l
	if m.NoOutsideStaticRoutes != nil {
		l = m.NoOutsideStaticRoutes.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCVoltstackClusterType_OutsideStaticRoutes) Size() (n int) {
	var l int
	_ = l
	if m.OutsideStaticRoutes != nil {
		l = m.OutsideStaticRoutes.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCVoltstackClusterType_NoGlobalNetwork) Size() (n int) {
	var l int
	_ = l
	if m.NoGlobalNetwork != nil {
		l = m.NoGlobalNetwork.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCVoltstackClusterType_GlobalNetworkList) Size() (n int) {
	var l int
	_ = l
	if m.GlobalNetworkList != nil {
		l = m.GlobalNetworkList.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCVoltstackClusterType_ForwardProxyAllowAll) Size() (n int) {
	var l int
	_ = l
	if m.ForwardProxyAllowAll != nil {
		l = m.ForwardProxyAllowAll.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCVoltstackClusterType_DefaultStorage) Size() (n int) {
	var l int
	_ = l
	if m.DefaultStorage != nil {
		l = m.DefaultStorage.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCVoltstackClusterType_StorageClassList) Size() (n int) {
	var l int
	_ = l
	if m.StorageClassList != nil {
		l = m.StorageClassList.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCVoltstackClusterType_NoK8SCluster) Size() (n int) {
	var l int
	_ = l
	if m.NoK8SCluster != nil {
		l = m.NoK8SCluster.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCVoltstackClusterType_K8SCluster) Size() (n int) {
	var l int
	_ = l
	if m.K8SCluster != nil {
		l = m.K8SCluster.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCIngressGwReplaceType) Size() (n int) {
	var l int
	_ = l
	if m.AllowedVipPort != nil {
		l = m.AllowedVipPort.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *AWSVPCIngressEgressGwReplaceType) Size() (n int) {
	var l int
	_ = l
	if m.NetworkPolicyChoice != nil {
		n += m.NetworkPolicyChoice.Size()
	}
	if m.ForwardProxyChoice != nil {
		n += m.ForwardProxyChoice.Size()
	}
	if m.InsideStaticRouteChoice != nil {
		n += m.InsideStaticRouteChoice.Size()
	}
	if m.OutsideStaticRouteChoice != nil {
		n += m.OutsideStaticRouteChoice.Size()
	}
	if m.GlobalNetworkChoice != nil {
		n += m.GlobalNetworkChoice.Size()
	}
	if m.AllowedVipPort != nil {
		l = m.AllowedVipPort.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	if m.AllowedVipPortSli != nil {
		l = m.AllowedVipPortSli.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *AWSVPCIngressEgressGwReplaceType_NoNetworkPolicy) Size() (n int) {
	var l int
	_ = l
	if m.NoNetworkPolicy != nil {
		l = m.NoNetworkPolicy.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCIngressEgressGwReplaceType_NoForwardProxy) Size() (n int) {
	var l int
	_ = l
	if m.NoForwardProxy != nil {
		l = m.NoForwardProxy.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCIngressEgressGwReplaceType_ActiveForwardProxyPolicies) Size() (n int) {
	var l int
	_ = l
	if m.ActiveForwardProxyPolicies != nil {
		l = m.ActiveForwardProxyPolicies.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCIngressEgressGwReplaceType_ActiveNetworkPolicies) Size() (n int) {
	var l int
	_ = l
	if m.ActiveNetworkPolicies != nil {
		l = m.ActiveNetworkPolicies.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCIngressEgressGwReplaceType_NoInsideStaticRoutes) Size() (n int) {
	var l int
	_ = l
	if m.NoInsideStaticRoutes != nil {
		l = m.NoInsideStaticRoutes.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCIngressEgressGwReplaceType_InsideStaticRoutes) Size() (n int) {
	var l int
	_ = l
	if m.InsideStaticRoutes != nil {
		l = m.InsideStaticRoutes.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCIngressEgressGwReplaceType_NoOutsideStaticRoutes) Size() (n int) {
	var l int
	_ = l
	if m.NoOutsideStaticRoutes != nil {
		l = m.NoOutsideStaticRoutes.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCIngressEgressGwReplaceType_OutsideStaticRoutes) Size() (n int) {
	var l int
	_ = l
	if m.OutsideStaticRoutes != nil {
		l = m.OutsideStaticRoutes.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCIngressEgressGwReplaceType_NoGlobalNetwork) Size() (n int) {
	var l int
	_ = l
	if m.NoGlobalNetwork != nil {
		l = m.NoGlobalNetwork.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCIngressEgressGwReplaceType_GlobalNetworkList) Size() (n int) {
	var l int
	_ = l
	if m.GlobalNetworkList != nil {
		l = m.GlobalNetworkList.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCIngressEgressGwReplaceType_ForwardProxyAllowAll) Size() (n int) {
	var l int
	_ = l
	if m.ForwardProxyAllowAll != nil {
		l = m.ForwardProxyAllowAll.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCVoltstackClusterReplaceType) Size() (n int) {
	var l int
	_ = l
	if m.NetworkPolicyChoice != nil {
		n += m.NetworkPolicyChoice.Size()
	}
	if m.ForwardProxyChoice != nil {
		n += m.ForwardProxyChoice.Size()
	}
	if m.OutsideStaticRouteChoice != nil {
		n += m.OutsideStaticRouteChoice.Size()
	}
	if m.GlobalNetworkChoice != nil {
		n += m.GlobalNetworkChoice.Size()
	}
	if m.AllowedVipPort != nil {
		l = m.AllowedVipPort.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *AWSVPCVoltstackClusterReplaceType_NoNetworkPolicy) Size() (n int) {
	var l int
	_ = l
	if m.NoNetworkPolicy != nil {
		l = m.NoNetworkPolicy.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCVoltstackClusterReplaceType_ActiveNetworkPolicies) Size() (n int) {
	var l int
	_ = l
	if m.ActiveNetworkPolicies != nil {
		l = m.ActiveNetworkPolicies.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCVoltstackClusterReplaceType_NoForwardProxy) Size() (n int) {
	var l int
	_ = l
	if m.NoForwardProxy != nil {
		l = m.NoForwardProxy.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCVoltstackClusterReplaceType_ActiveForwardProxyPolicies) Size() (n int) {
	var l int
	_ = l
	if m.ActiveForwardProxyPolicies != nil {
		l = m.ActiveForwardProxyPolicies.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCVoltstackClusterReplaceType_NoOutsideStaticRoutes) Size() (n int) {
	var l int
	_ = l
	if m.NoOutsideStaticRoutes != nil {
		l = m.NoOutsideStaticRoutes.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCVoltstackClusterReplaceType_OutsideStaticRoutes) Size() (n int) {
	var l int
	_ = l
	if m.OutsideStaticRoutes != nil {
		l = m.OutsideStaticRoutes.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCVoltstackClusterReplaceType_NoGlobalNetwork) Size() (n int) {
	var l int
	_ = l
	if m.NoGlobalNetwork != nil {
		l = m.NoGlobalNetwork.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCVoltstackClusterReplaceType_GlobalNetworkList) Size() (n int) {
	var l int
	_ = l
	if m.GlobalNetworkList != nil {
		l = m.GlobalNetworkList.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *AWSVPCVoltstackClusterReplaceType_ForwardProxyAllowAll) Size() (n int) {
	var l int
	_ = l
	if m.ForwardProxyAllowAll != nil {
		l = m.ForwardProxyAllowAll.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType) Size() (n int) {
	var l int
	_ = l
	if m.Vpc != nil {
		l = m.Vpc.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.SiteType != nil {
		n += m.SiteType.Size()
	}
	if m.Deployment != nil {
		n += m.Deployment.Size()
	}
	l = len(m.InstanceType)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.VolterraSoftwareVersion)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.OperatingSystemVersion)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.AwsRegion)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.SshKey)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.NodesPerAz != 0 {
		n += 1 + sovTypes(uint64(m.NodesPerAz))
	}
	if m.DiskSize != 0 {
		n += 1 + sovTypes(uint64(m.DiskSize))
	}
	l = len(m.Address)
	if l > 0 {
		n += 2 + l + sovTypes(uint64(l))
	}
	if m.Coordinates != nil {
		l = m.Coordinates.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	if m.LogsReceiverChoice != nil {
		n += m.LogsReceiverChoice.Size()
	}
	if m.Sw != nil {
		l = m.Sw.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	if m.Os != nil {
		l = m.Os.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	if len(m.VipParamsPerAz) > 0 {
		for _, e := range m.VipParamsPerAz {
			l = e.Size()
			n += 2 + l + sovTypes(uint64(l))
		}
	}
	if m.UserModificationTimestamp != nil {
		l = m.UserModificationTimestamp.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	if m.TfParams != nil {
		l = m.TfParams.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	if m.ViewInternal != nil {
		l = m.ViewInternal.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *GlobalSpecType_IngressGw) Size() (n int) {
	var l int
	_ = l
	if m.IngressGw != nil {
		l = m.IngressGw.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_IngressEgressGw) Size() (n int) {
	var l int
	_ = l
	if m.IngressEgressGw != nil {
		l = m.IngressEgressGw.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_AwsCred) Size() (n int) {
	var l int
	_ = l
	if m.AwsCred != nil {
		l = m.AwsCred.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_Assisted) Size() (n int) {
	var l int
	_ = l
	if m.Assisted != nil {
		l = m.Assisted.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_VoltstackCluster) Size() (n int) {
	var l int
	_ = l
	if m.VoltstackCluster != nil {
		l = m.VoltstackCluster.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_LogsStreamingDisabled) Size() (n int) {
	var l int
	_ = l
	if m.LogsStreamingDisabled != nil {
		l = m.LogsStreamingDisabled.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_LogReceiver) Size() (n int) {
	var l int
	_ = l
	if m.LogReceiver != nil {
		l = m.LogReceiver.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType) Size() (n int) {
	var l int
	_ = l
	if m.Vpc != nil {
		l = m.Vpc.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.SiteType != nil {
		n += m.SiteType.Size()
	}
	if m.Deployment != nil {
		n += m.Deployment.Size()
	}
	l = len(m.InstanceType)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.AwsRegion)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.SshKey)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.NodesPerAz != 0 {
		n += 1 + sovTypes(uint64(m.NodesPerAz))
	}
	if m.DiskSize != 0 {
		n += 1 + sovTypes(uint64(m.DiskSize))
	}
	l = len(m.Address)
	if l > 0 {
		n += 2 + l + sovTypes(uint64(l))
	}
	if m.Coordinates != nil {
		l = m.Coordinates.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	if m.LogsReceiverChoice != nil {
		n += m.LogsReceiverChoice.Size()
	}
	if m.Sw != nil {
		l = m.Sw.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	if m.Os != nil {
		l = m.Os.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *CreateSpecType_IngressGw) Size() (n int) {
	var l int
	_ = l
	if m.IngressGw != nil {
		l = m.IngressGw.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_IngressEgressGw) Size() (n int) {
	var l int
	_ = l
	if m.IngressEgressGw != nil {
		l = m.IngressEgressGw.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_AwsCred) Size() (n int) {
	var l int
	_ = l
	if m.AwsCred != nil {
		l = m.AwsCred.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_Assisted) Size() (n int) {
	var l int
	_ = l
	if m.Assisted != nil {
		l = m.Assisted.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_VoltstackCluster) Size() (n int) {
	var l int
	_ = l
	if m.VoltstackCluster != nil {
		l = m.VoltstackCluster.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_LogsStreamingDisabled) Size() (n int) {
	var l int
	_ = l
	if m.LogsStreamingDisabled != nil {
		l = m.LogsStreamingDisabled.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_LogReceiver) Size() (n int) {
	var l int
	_ = l
	if m.LogReceiver != nil {
		l = m.LogReceiver.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType) Size() (n int) {
	var l int
	_ = l
	if m.SiteType != nil {
		n += m.SiteType.Size()
	}
	if m.NodesPerAz != 0 {
		n += 1 + sovTypes(uint64(m.NodesPerAz))
	}
	l = len(m.Address)
	if l > 0 {
		n += 2 + l + sovTypes(uint64(l))
	}
	if m.Coordinates != nil {
		l = m.Coordinates.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	if m.LogsReceiverChoice != nil {
		n += m.LogsReceiverChoice.Size()
	}
	return n
}

func (m *ReplaceSpecType_IngressGw) Size() (n int) {
	var l int
	_ = l
	if m.IngressGw != nil {
		l = m.IngressGw.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_IngressEgressGw) Size() (n int) {
	var l int
	_ = l
	if m.IngressEgressGw != nil {
		l = m.IngressEgressGw.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_VoltstackCluster) Size() (n int) {
	var l int
	_ = l
	if m.VoltstackCluster != nil {
		l = m.VoltstackCluster.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_LogsStreamingDisabled) Size() (n int) {
	var l int
	_ = l
	if m.LogsStreamingDisabled != nil {
		l = m.LogsStreamingDisabled.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_LogReceiver) Size() (n int) {
	var l int
	_ = l
	if m.LogReceiver != nil {
		l = m.LogReceiver.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType) Size() (n int) {
	var l int
	_ = l
	if m.Vpc != nil {
		l = m.Vpc.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.SiteType != nil {
		n += m.SiteType.Size()
	}
	if m.Deployment != nil {
		n += m.Deployment.Size()
	}
	l = len(m.InstanceType)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.VolterraSoftwareVersion)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.OperatingSystemVersion)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.AwsRegion)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.SshKey)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.NodesPerAz != 0 {
		n += 1 + sovTypes(uint64(m.NodesPerAz))
	}
	if m.DiskSize != 0 {
		n += 1 + sovTypes(uint64(m.DiskSize))
	}
	l = len(m.Address)
	if l > 0 {
		n += 2 + l + sovTypes(uint64(l))
	}
	if m.Coordinates != nil {
		l = m.Coordinates.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	if m.LogsReceiverChoice != nil {
		n += m.LogsReceiverChoice.Size()
	}
	if m.SiteState != 0 {
		n += 2 + sovTypes(uint64(m.SiteState))
	}
	if len(m.VipParamsPerAz) > 0 {
		for _, e := range m.VipParamsPerAz {
			l = e.Size()
			n += 2 + l + sovTypes(uint64(l))
		}
	}
	if m.UserModificationTimestamp != nil {
		l = m.UserModificationTimestamp.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *GetSpecType_IngressGw) Size() (n int) {
	var l int
	_ = l
	if m.IngressGw != nil {
		l = m.IngressGw.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_IngressEgressGw) Size() (n int) {
	var l int
	_ = l
	if m.IngressEgressGw != nil {
		l = m.IngressEgressGw.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_AwsCred) Size() (n int) {
	var l int
	_ = l
	if m.AwsCred != nil {
		l = m.AwsCred.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_Assisted) Size() (n int) {
	var l int
	_ = l
	if m.Assisted != nil {
		l = m.Assisted.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_VoltstackCluster) Size() (n int) {
	var l int
	_ = l
	if m.VoltstackCluster != nil {
		l = m.VoltstackCluster.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_LogsStreamingDisabled) Size() (n int) {
	var l int
	_ = l
	if m.LogsStreamingDisabled != nil {
		l = m.LogsStreamingDisabled.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_LogReceiver) Size() (n int) {
	var l int
	_ = l
	if m.LogReceiver != nil {
		l = m.LogReceiver.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}

func sovTypes(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozTypes(x uint64) (n int) {
	return sovTypes(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *AWSVPCIngressGwType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressGwType{`,
		`AzNodes:` + strings.Replace(fmt.Sprintf("%v", this.AzNodes), "AWSVPCOneInterfaceNodeType", "ves_io_schema_views1.AWSVPCOneInterfaceNodeType", 1) + `,`,
		`AwsCertifiedHw:` + fmt.Sprintf("%v", this.AwsCertifiedHw) + `,`,
		`AllowedVipPort:` + strings.Replace(fmt.Sprintf("%v", this.AllowedVipPort), "AllowedVIPPorts", "ves_io_schema_views1.AllowedVIPPorts", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwType{`,
		`AzNodes:` + strings.Replace(fmt.Sprintf("%v", this.AzNodes), "AWSVPCTwoInterfaceNodeType", "ves_io_schema_views1.AWSVPCTwoInterfaceNodeType", 1) + `,`,
		`NetworkPolicyChoice:` + fmt.Sprintf("%v", this.NetworkPolicyChoice) + `,`,
		`ForwardProxyChoice:` + fmt.Sprintf("%v", this.ForwardProxyChoice) + `,`,
		`AwsCertifiedHw:` + fmt.Sprintf("%v", this.AwsCertifiedHw) + `,`,
		`InsideStaticRouteChoice:` + fmt.Sprintf("%v", this.InsideStaticRouteChoice) + `,`,
		`OutsideStaticRouteChoice:` + fmt.Sprintf("%v", this.OutsideStaticRouteChoice) + `,`,
		`GlobalNetworkChoice:` + fmt.Sprintf("%v", this.GlobalNetworkChoice) + `,`,
		`AllowedVipPort:` + strings.Replace(fmt.Sprintf("%v", this.AllowedVipPort), "AllowedVIPPorts", "ves_io_schema_views1.AllowedVIPPorts", 1) + `,`,
		`AllowedVipPortSli:` + strings.Replace(fmt.Sprintf("%v", this.AllowedVipPortSli), "AllowedVIPPorts", "ves_io_schema_views1.AllowedVIPPorts", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwType_NoNetworkPolicy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwType_NoNetworkPolicy{`,
		`NoNetworkPolicy:` + strings.Replace(fmt.Sprintf("%v", this.NoNetworkPolicy), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwType_NoForwardProxy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwType_NoForwardProxy{`,
		`NoForwardProxy:` + strings.Replace(fmt.Sprintf("%v", this.NoForwardProxy), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwType_ActiveForwardProxyPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwType_ActiveForwardProxyPolicies{`,
		`ActiveForwardProxyPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveForwardProxyPolicies), "ActiveForwardProxyPoliciesType", "ves_io_schema_network_firewall.ActiveForwardProxyPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwType_ActiveNetworkPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwType_ActiveNetworkPolicies{`,
		`ActiveNetworkPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveNetworkPolicies), "ActiveNetworkPoliciesType", "ves_io_schema_network_firewall.ActiveNetworkPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwType_NoInsideStaticRoutes) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwType_NoInsideStaticRoutes{`,
		`NoInsideStaticRoutes:` + strings.Replace(fmt.Sprintf("%v", this.NoInsideStaticRoutes), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwType_InsideStaticRoutes) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwType_InsideStaticRoutes{`,
		`InsideStaticRoutes:` + strings.Replace(fmt.Sprintf("%v", this.InsideStaticRoutes), "SiteStaticRoutesListType", "ves_io_schema_views1.SiteStaticRoutesListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwType_NoOutsideStaticRoutes) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwType_NoOutsideStaticRoutes{`,
		`NoOutsideStaticRoutes:` + strings.Replace(fmt.Sprintf("%v", this.NoOutsideStaticRoutes), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwType_OutsideStaticRoutes) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwType_OutsideStaticRoutes{`,
		`OutsideStaticRoutes:` + strings.Replace(fmt.Sprintf("%v", this.OutsideStaticRoutes), "SiteStaticRoutesListType", "ves_io_schema_views1.SiteStaticRoutesListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwType_NoGlobalNetwork) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwType_NoGlobalNetwork{`,
		`NoGlobalNetwork:` + strings.Replace(fmt.Sprintf("%v", this.NoGlobalNetwork), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwType_GlobalNetworkList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwType_GlobalNetworkList{`,
		`GlobalNetworkList:` + strings.Replace(fmt.Sprintf("%v", this.GlobalNetworkList), "GlobalNetworkConnectionListType", "ves_io_schema_views1.GlobalNetworkConnectionListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwType_ForwardProxyAllowAll) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwType_ForwardProxyAllowAll{`,
		`ForwardProxyAllowAll:` + strings.Replace(fmt.Sprintf("%v", this.ForwardProxyAllowAll), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterType{`,
		`AwsCertifiedHw:` + fmt.Sprintf("%v", this.AwsCertifiedHw) + `,`,
		`AzNodes:` + strings.Replace(fmt.Sprintf("%v", this.AzNodes), "AWSVPCOneInterfaceNodeType", "ves_io_schema_views1.AWSVPCOneInterfaceNodeType", 1) + `,`,
		`NetworkPolicyChoice:` + fmt.Sprintf("%v", this.NetworkPolicyChoice) + `,`,
		`ForwardProxyChoice:` + fmt.Sprintf("%v", this.ForwardProxyChoice) + `,`,
		`OutsideStaticRouteChoice:` + fmt.Sprintf("%v", this.OutsideStaticRouteChoice) + `,`,
		`GlobalNetworkChoice:` + fmt.Sprintf("%v", this.GlobalNetworkChoice) + `,`,
		`StorageClassChoice:` + fmt.Sprintf("%v", this.StorageClassChoice) + `,`,
		`AllowedVipPort:` + strings.Replace(fmt.Sprintf("%v", this.AllowedVipPort), "AllowedVIPPorts", "ves_io_schema_views1.AllowedVIPPorts", 1) + `,`,
		`K8SClusterChoice:` + fmt.Sprintf("%v", this.K8SClusterChoice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterType_NoNetworkPolicy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterType_NoNetworkPolicy{`,
		`NoNetworkPolicy:` + strings.Replace(fmt.Sprintf("%v", this.NoNetworkPolicy), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterType_ActiveNetworkPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterType_ActiveNetworkPolicies{`,
		`ActiveNetworkPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveNetworkPolicies), "ActiveNetworkPoliciesType", "ves_io_schema_network_firewall.ActiveNetworkPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterType_NoForwardProxy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterType_NoForwardProxy{`,
		`NoForwardProxy:` + strings.Replace(fmt.Sprintf("%v", this.NoForwardProxy), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterType_ActiveForwardProxyPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterType_ActiveForwardProxyPolicies{`,
		`ActiveForwardProxyPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveForwardProxyPolicies), "ActiveForwardProxyPoliciesType", "ves_io_schema_network_firewall.ActiveForwardProxyPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterType_NoOutsideStaticRoutes) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterType_NoOutsideStaticRoutes{`,
		`NoOutsideStaticRoutes:` + strings.Replace(fmt.Sprintf("%v", this.NoOutsideStaticRoutes), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterType_OutsideStaticRoutes) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterType_OutsideStaticRoutes{`,
		`OutsideStaticRoutes:` + strings.Replace(fmt.Sprintf("%v", this.OutsideStaticRoutes), "SiteStaticRoutesListType", "ves_io_schema_views1.SiteStaticRoutesListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterType_NoGlobalNetwork) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterType_NoGlobalNetwork{`,
		`NoGlobalNetwork:` + strings.Replace(fmt.Sprintf("%v", this.NoGlobalNetwork), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterType_GlobalNetworkList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterType_GlobalNetworkList{`,
		`GlobalNetworkList:` + strings.Replace(fmt.Sprintf("%v", this.GlobalNetworkList), "GlobalNetworkConnectionListType", "ves_io_schema_views1.GlobalNetworkConnectionListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterType_ForwardProxyAllowAll) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterType_ForwardProxyAllowAll{`,
		`ForwardProxyAllowAll:` + strings.Replace(fmt.Sprintf("%v", this.ForwardProxyAllowAll), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterType_DefaultStorage) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterType_DefaultStorage{`,
		`DefaultStorage:` + strings.Replace(fmt.Sprintf("%v", this.DefaultStorage), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterType_StorageClassList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterType_StorageClassList{`,
		`StorageClassList:` + strings.Replace(fmt.Sprintf("%v", this.StorageClassList), "StorageClassListType", "ves_io_schema_views2.StorageClassListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterType_NoK8SCluster) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterType_NoK8SCluster{`,
		`NoK8SCluster:` + strings.Replace(fmt.Sprintf("%v", this.NoK8SCluster), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterType_K8SCluster) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterType_K8SCluster{`,
		`K8SCluster:` + strings.Replace(fmt.Sprintf("%v", this.K8SCluster), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressGwReplaceType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressGwReplaceType{`,
		`AllowedVipPort:` + strings.Replace(fmt.Sprintf("%v", this.AllowedVipPort), "AllowedVIPPorts", "ves_io_schema_views1.AllowedVIPPorts", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwReplaceType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwReplaceType{`,
		`NetworkPolicyChoice:` + fmt.Sprintf("%v", this.NetworkPolicyChoice) + `,`,
		`ForwardProxyChoice:` + fmt.Sprintf("%v", this.ForwardProxyChoice) + `,`,
		`InsideStaticRouteChoice:` + fmt.Sprintf("%v", this.InsideStaticRouteChoice) + `,`,
		`OutsideStaticRouteChoice:` + fmt.Sprintf("%v", this.OutsideStaticRouteChoice) + `,`,
		`GlobalNetworkChoice:` + fmt.Sprintf("%v", this.GlobalNetworkChoice) + `,`,
		`AllowedVipPort:` + strings.Replace(fmt.Sprintf("%v", this.AllowedVipPort), "AllowedVIPPorts", "ves_io_schema_views1.AllowedVIPPorts", 1) + `,`,
		`AllowedVipPortSli:` + strings.Replace(fmt.Sprintf("%v", this.AllowedVipPortSli), "AllowedVIPPorts", "ves_io_schema_views1.AllowedVIPPorts", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwReplaceType_NoNetworkPolicy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwReplaceType_NoNetworkPolicy{`,
		`NoNetworkPolicy:` + strings.Replace(fmt.Sprintf("%v", this.NoNetworkPolicy), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwReplaceType_NoForwardProxy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwReplaceType_NoForwardProxy{`,
		`NoForwardProxy:` + strings.Replace(fmt.Sprintf("%v", this.NoForwardProxy), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwReplaceType_ActiveForwardProxyPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwReplaceType_ActiveForwardProxyPolicies{`,
		`ActiveForwardProxyPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveForwardProxyPolicies), "ActiveForwardProxyPoliciesType", "ves_io_schema_network_firewall.ActiveForwardProxyPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwReplaceType_ActiveNetworkPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwReplaceType_ActiveNetworkPolicies{`,
		`ActiveNetworkPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveNetworkPolicies), "ActiveNetworkPoliciesType", "ves_io_schema_network_firewall.ActiveNetworkPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwReplaceType_NoInsideStaticRoutes) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwReplaceType_NoInsideStaticRoutes{`,
		`NoInsideStaticRoutes:` + strings.Replace(fmt.Sprintf("%v", this.NoInsideStaticRoutes), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwReplaceType_InsideStaticRoutes) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwReplaceType_InsideStaticRoutes{`,
		`InsideStaticRoutes:` + strings.Replace(fmt.Sprintf("%v", this.InsideStaticRoutes), "SiteStaticRoutesListType", "ves_io_schema_views1.SiteStaticRoutesListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwReplaceType_NoOutsideStaticRoutes) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwReplaceType_NoOutsideStaticRoutes{`,
		`NoOutsideStaticRoutes:` + strings.Replace(fmt.Sprintf("%v", this.NoOutsideStaticRoutes), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwReplaceType_OutsideStaticRoutes) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwReplaceType_OutsideStaticRoutes{`,
		`OutsideStaticRoutes:` + strings.Replace(fmt.Sprintf("%v", this.OutsideStaticRoutes), "SiteStaticRoutesListType", "ves_io_schema_views1.SiteStaticRoutesListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwReplaceType_NoGlobalNetwork) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwReplaceType_NoGlobalNetwork{`,
		`NoGlobalNetwork:` + strings.Replace(fmt.Sprintf("%v", this.NoGlobalNetwork), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwReplaceType_GlobalNetworkList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwReplaceType_GlobalNetworkList{`,
		`GlobalNetworkList:` + strings.Replace(fmt.Sprintf("%v", this.GlobalNetworkList), "GlobalNetworkConnectionListType", "ves_io_schema_views1.GlobalNetworkConnectionListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCIngressEgressGwReplaceType_ForwardProxyAllowAll) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCIngressEgressGwReplaceType_ForwardProxyAllowAll{`,
		`ForwardProxyAllowAll:` + strings.Replace(fmt.Sprintf("%v", this.ForwardProxyAllowAll), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterReplaceType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterReplaceType{`,
		`NetworkPolicyChoice:` + fmt.Sprintf("%v", this.NetworkPolicyChoice) + `,`,
		`ForwardProxyChoice:` + fmt.Sprintf("%v", this.ForwardProxyChoice) + `,`,
		`OutsideStaticRouteChoice:` + fmt.Sprintf("%v", this.OutsideStaticRouteChoice) + `,`,
		`GlobalNetworkChoice:` + fmt.Sprintf("%v", this.GlobalNetworkChoice) + `,`,
		`AllowedVipPort:` + strings.Replace(fmt.Sprintf("%v", this.AllowedVipPort), "AllowedVIPPorts", "ves_io_schema_views1.AllowedVIPPorts", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterReplaceType_NoNetworkPolicy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterReplaceType_NoNetworkPolicy{`,
		`NoNetworkPolicy:` + strings.Replace(fmt.Sprintf("%v", this.NoNetworkPolicy), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterReplaceType_ActiveNetworkPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterReplaceType_ActiveNetworkPolicies{`,
		`ActiveNetworkPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveNetworkPolicies), "ActiveNetworkPoliciesType", "ves_io_schema_network_firewall.ActiveNetworkPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterReplaceType_NoForwardProxy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterReplaceType_NoForwardProxy{`,
		`NoForwardProxy:` + strings.Replace(fmt.Sprintf("%v", this.NoForwardProxy), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterReplaceType_ActiveForwardProxyPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterReplaceType_ActiveForwardProxyPolicies{`,
		`ActiveForwardProxyPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveForwardProxyPolicies), "ActiveForwardProxyPoliciesType", "ves_io_schema_network_firewall.ActiveForwardProxyPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterReplaceType_NoOutsideStaticRoutes) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterReplaceType_NoOutsideStaticRoutes{`,
		`NoOutsideStaticRoutes:` + strings.Replace(fmt.Sprintf("%v", this.NoOutsideStaticRoutes), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterReplaceType_OutsideStaticRoutes) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterReplaceType_OutsideStaticRoutes{`,
		`OutsideStaticRoutes:` + strings.Replace(fmt.Sprintf("%v", this.OutsideStaticRoutes), "SiteStaticRoutesListType", "ves_io_schema_views1.SiteStaticRoutesListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterReplaceType_NoGlobalNetwork) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterReplaceType_NoGlobalNetwork{`,
		`NoGlobalNetwork:` + strings.Replace(fmt.Sprintf("%v", this.NoGlobalNetwork), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterReplaceType_GlobalNetworkList) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterReplaceType_GlobalNetworkList{`,
		`GlobalNetworkList:` + strings.Replace(fmt.Sprintf("%v", this.GlobalNetworkList), "GlobalNetworkConnectionListType", "ves_io_schema_views1.GlobalNetworkConnectionListType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSVPCVoltstackClusterReplaceType_ForwardProxyAllowAll) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSVPCVoltstackClusterReplaceType_ForwardProxyAllowAll{`,
		`ForwardProxyAllowAll:` + strings.Replace(fmt.Sprintf("%v", this.ForwardProxyAllowAll), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType{`,
		`Vpc:` + strings.Replace(fmt.Sprintf("%v", this.Vpc), "AWSVPCchoiceType", "ves_io_schema_views1.AWSVPCchoiceType", 1) + `,`,
		`SiteType:` + fmt.Sprintf("%v", this.SiteType) + `,`,
		`Deployment:` + fmt.Sprintf("%v", this.Deployment) + `,`,
		`InstanceType:` + fmt.Sprintf("%v", this.InstanceType) + `,`,
		`VolterraSoftwareVersion:` + fmt.Sprintf("%v", this.VolterraSoftwareVersion) + `,`,
		`OperatingSystemVersion:` + fmt.Sprintf("%v", this.OperatingSystemVersion) + `,`,
		`AwsRegion:` + fmt.Sprintf("%v", this.AwsRegion) + `,`,
		`SshKey:` + fmt.Sprintf("%v", this.SshKey) + `,`,
		`NodesPerAz:` + fmt.Sprintf("%v", this.NodesPerAz) + `,`,
		`DiskSize:` + fmt.Sprintf("%v", this.DiskSize) + `,`,
		`Address:` + fmt.Sprintf("%v", this.Address) + `,`,
		`Coordinates:` + strings.Replace(fmt.Sprintf("%v", this.Coordinates), "Coordinates", "ves_io_schema_site.Coordinates", 1) + `,`,
		`LogsReceiverChoice:` + fmt.Sprintf("%v", this.LogsReceiverChoice) + `,`,
		`Sw:` + strings.Replace(fmt.Sprintf("%v", this.Sw), "VolterraSoftwareType", "ves_io_schema_views.VolterraSoftwareType", 1) + `,`,
		`Os:` + strings.Replace(fmt.Sprintf("%v", this.Os), "OperatingSystemType", "ves_io_schema_views.OperatingSystemType", 1) + `,`,
		`VipParamsPerAz:` + strings.Replace(fmt.Sprintf("%v", this.VipParamsPerAz), "PublishVIPParamsPerAz", "ves_io_schema_site.PublishVIPParamsPerAz", 1) + `,`,
		`UserModificationTimestamp:` + strings.Replace(fmt.Sprintf("%v", this.UserModificationTimestamp), "Timestamp", "google_protobuf1.Timestamp", 1) + `,`,
		`TfParams:` + strings.Replace(fmt.Sprintf("%v", this.TfParams), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`ViewInternal:` + strings.Replace(fmt.Sprintf("%v", this.ViewInternal), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_IngressGw) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_IngressGw{`,
		`IngressGw:` + strings.Replace(fmt.Sprintf("%v", this.IngressGw), "AWSVPCIngressGwType", "AWSVPCIngressGwType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_IngressEgressGw) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_IngressEgressGw{`,
		`IngressEgressGw:` + strings.Replace(fmt.Sprintf("%v", this.IngressEgressGw), "AWSVPCIngressEgressGwType", "AWSVPCIngressEgressGwType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_AwsCred) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_AwsCred{`,
		`AwsCred:` + strings.Replace(fmt.Sprintf("%v", this.AwsCred), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_Assisted) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_Assisted{`,
		`Assisted:` + strings.Replace(fmt.Sprintf("%v", this.Assisted), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_VoltstackCluster) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_VoltstackCluster{`,
		`VoltstackCluster:` + strings.Replace(fmt.Sprintf("%v", this.VoltstackCluster), "AWSVPCVoltstackClusterType", "AWSVPCVoltstackClusterType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_LogsStreamingDisabled) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_LogsStreamingDisabled{`,
		`LogsStreamingDisabled:` + strings.Replace(fmt.Sprintf("%v", this.LogsStreamingDisabled), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_LogReceiver) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_LogReceiver{`,
		`LogReceiver:` + strings.Replace(fmt.Sprintf("%v", this.LogReceiver), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType{`,
		`Vpc:` + strings.Replace(fmt.Sprintf("%v", this.Vpc), "AWSVPCchoiceType", "ves_io_schema_views1.AWSVPCchoiceType", 1) + `,`,
		`SiteType:` + fmt.Sprintf("%v", this.SiteType) + `,`,
		`Deployment:` + fmt.Sprintf("%v", this.Deployment) + `,`,
		`InstanceType:` + fmt.Sprintf("%v", this.InstanceType) + `,`,
		`AwsRegion:` + fmt.Sprintf("%v", this.AwsRegion) + `,`,
		`SshKey:` + fmt.Sprintf("%v", this.SshKey) + `,`,
		`NodesPerAz:` + fmt.Sprintf("%v", this.NodesPerAz) + `,`,
		`DiskSize:` + fmt.Sprintf("%v", this.DiskSize) + `,`,
		`Address:` + fmt.Sprintf("%v", this.Address) + `,`,
		`Coordinates:` + strings.Replace(fmt.Sprintf("%v", this.Coordinates), "Coordinates", "ves_io_schema_site.Coordinates", 1) + `,`,
		`LogsReceiverChoice:` + fmt.Sprintf("%v", this.LogsReceiverChoice) + `,`,
		`Sw:` + strings.Replace(fmt.Sprintf("%v", this.Sw), "VolterraSoftwareType", "ves_io_schema_views.VolterraSoftwareType", 1) + `,`,
		`Os:` + strings.Replace(fmt.Sprintf("%v", this.Os), "OperatingSystemType", "ves_io_schema_views.OperatingSystemType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_IngressGw) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_IngressGw{`,
		`IngressGw:` + strings.Replace(fmt.Sprintf("%v", this.IngressGw), "AWSVPCIngressGwType", "AWSVPCIngressGwType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_IngressEgressGw) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_IngressEgressGw{`,
		`IngressEgressGw:` + strings.Replace(fmt.Sprintf("%v", this.IngressEgressGw), "AWSVPCIngressEgressGwType", "AWSVPCIngressEgressGwType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_AwsCred) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_AwsCred{`,
		`AwsCred:` + strings.Replace(fmt.Sprintf("%v", this.AwsCred), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_Assisted) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_Assisted{`,
		`Assisted:` + strings.Replace(fmt.Sprintf("%v", this.Assisted), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_VoltstackCluster) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_VoltstackCluster{`,
		`VoltstackCluster:` + strings.Replace(fmt.Sprintf("%v", this.VoltstackCluster), "AWSVPCVoltstackClusterType", "AWSVPCVoltstackClusterType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_LogsStreamingDisabled) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_LogsStreamingDisabled{`,
		`LogsStreamingDisabled:` + strings.Replace(fmt.Sprintf("%v", this.LogsStreamingDisabled), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_LogReceiver) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_LogReceiver{`,
		`LogReceiver:` + strings.Replace(fmt.Sprintf("%v", this.LogReceiver), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType{`,
		`SiteType:` + fmt.Sprintf("%v", this.SiteType) + `,`,
		`NodesPerAz:` + fmt.Sprintf("%v", this.NodesPerAz) + `,`,
		`Address:` + fmt.Sprintf("%v", this.Address) + `,`,
		`Coordinates:` + strings.Replace(fmt.Sprintf("%v", this.Coordinates), "Coordinates", "ves_io_schema_site.Coordinates", 1) + `,`,
		`LogsReceiverChoice:` + fmt.Sprintf("%v", this.LogsReceiverChoice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_IngressGw) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_IngressGw{`,
		`IngressGw:` + strings.Replace(fmt.Sprintf("%v", this.IngressGw), "AWSVPCIngressGwReplaceType", "AWSVPCIngressGwReplaceType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_IngressEgressGw) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_IngressEgressGw{`,
		`IngressEgressGw:` + strings.Replace(fmt.Sprintf("%v", this.IngressEgressGw), "AWSVPCIngressEgressGwReplaceType", "AWSVPCIngressEgressGwReplaceType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_VoltstackCluster) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_VoltstackCluster{`,
		`VoltstackCluster:` + strings.Replace(fmt.Sprintf("%v", this.VoltstackCluster), "AWSVPCVoltstackClusterReplaceType", "AWSVPCVoltstackClusterReplaceType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_LogsStreamingDisabled) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_LogsStreamingDisabled{`,
		`LogsStreamingDisabled:` + strings.Replace(fmt.Sprintf("%v", this.LogsStreamingDisabled), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_LogReceiver) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_LogReceiver{`,
		`LogReceiver:` + strings.Replace(fmt.Sprintf("%v", this.LogReceiver), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType{`,
		`Vpc:` + strings.Replace(fmt.Sprintf("%v", this.Vpc), "AWSVPCchoiceType", "ves_io_schema_views1.AWSVPCchoiceType", 1) + `,`,
		`SiteType:` + fmt.Sprintf("%v", this.SiteType) + `,`,
		`Deployment:` + fmt.Sprintf("%v", this.Deployment) + `,`,
		`InstanceType:` + fmt.Sprintf("%v", this.InstanceType) + `,`,
		`VolterraSoftwareVersion:` + fmt.Sprintf("%v", this.VolterraSoftwareVersion) + `,`,
		`OperatingSystemVersion:` + fmt.Sprintf("%v", this.OperatingSystemVersion) + `,`,
		`AwsRegion:` + fmt.Sprintf("%v", this.AwsRegion) + `,`,
		`SshKey:` + fmt.Sprintf("%v", this.SshKey) + `,`,
		`NodesPerAz:` + fmt.Sprintf("%v", this.NodesPerAz) + `,`,
		`DiskSize:` + fmt.Sprintf("%v", this.DiskSize) + `,`,
		`Address:` + fmt.Sprintf("%v", this.Address) + `,`,
		`Coordinates:` + strings.Replace(fmt.Sprintf("%v", this.Coordinates), "Coordinates", "ves_io_schema_site.Coordinates", 1) + `,`,
		`LogsReceiverChoice:` + fmt.Sprintf("%v", this.LogsReceiverChoice) + `,`,
		`SiteState:` + fmt.Sprintf("%v", this.SiteState) + `,`,
		`VipParamsPerAz:` + strings.Replace(fmt.Sprintf("%v", this.VipParamsPerAz), "PublishVIPParamsPerAz", "ves_io_schema_site.PublishVIPParamsPerAz", 1) + `,`,
		`UserModificationTimestamp:` + strings.Replace(fmt.Sprintf("%v", this.UserModificationTimestamp), "Timestamp", "google_protobuf1.Timestamp", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_IngressGw) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_IngressGw{`,
		`IngressGw:` + strings.Replace(fmt.Sprintf("%v", this.IngressGw), "AWSVPCIngressGwType", "AWSVPCIngressGwType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_IngressEgressGw) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_IngressEgressGw{`,
		`IngressEgressGw:` + strings.Replace(fmt.Sprintf("%v", this.IngressEgressGw), "AWSVPCIngressEgressGwType", "AWSVPCIngressEgressGwType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_AwsCred) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_AwsCred{`,
		`AwsCred:` + strings.Replace(fmt.Sprintf("%v", this.AwsCred), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_Assisted) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_Assisted{`,
		`Assisted:` + strings.Replace(fmt.Sprintf("%v", this.Assisted), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_VoltstackCluster) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_VoltstackCluster{`,
		`VoltstackCluster:` + strings.Replace(fmt.Sprintf("%v", this.VoltstackCluster), "AWSVPCVoltstackClusterType", "AWSVPCVoltstackClusterType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_LogsStreamingDisabled) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_LogsStreamingDisabled{`,
		`LogsStreamingDisabled:` + strings.Replace(fmt.Sprintf("%v", this.LogsStreamingDisabled), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_LogReceiver) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_LogReceiver{`,
		`LogReceiver:` + strings.Replace(fmt.Sprintf("%v", this.LogReceiver), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringTypes(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *AWSVPCIngressGwType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AWSVPCIngressGwType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AWSVPCIngressGwType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AzNodes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AzNodes = append(m.AzNodes, &ves_io_schema_views1.AWSVPCOneInterfaceNodeType{})
			if err := m.AzNodes[len(m.AzNodes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AwsCertifiedHw", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AwsCertifiedHw = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowedVipPort", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AllowedVipPort == nil {
				m.AllowedVipPort = &ves_io_schema_views1.AllowedVIPPorts{}
			}
			if err := m.AllowedVipPort.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AWSVPCIngressEgressGwType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AWSVPCIngressEgressGwType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AWSVPCIngressEgressGwType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AzNodes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AzNodes = append(m.AzNodes, &ves_io_schema_views1.AWSVPCTwoInterfaceNodeType{})
			if err := m.AzNodes[len(m.AzNodes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoNetworkPolicy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &AWSVPCIngressEgressGwType_NoNetworkPolicy{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoForwardProxy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyChoice = &AWSVPCIngressEgressGwType_NoForwardProxy{v}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AwsCertifiedHw", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AwsCertifiedHw = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveForwardProxyPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_network_firewall.ActiveForwardProxyPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyChoice = &AWSVPCIngressEgressGwType_ActiveForwardProxyPolicies{v}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveNetworkPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_network_firewall.ActiveNetworkPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &AWSVPCIngressEgressGwType_ActiveNetworkPolicies{v}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoInsideStaticRoutes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.InsideStaticRouteChoice = &AWSVPCIngressEgressGwType_NoInsideStaticRoutes{v}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InsideStaticRoutes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views1.SiteStaticRoutesListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.InsideStaticRouteChoice = &AWSVPCIngressEgressGwType_InsideStaticRoutes{v}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoOutsideStaticRoutes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.OutsideStaticRouteChoice = &AWSVPCIngressEgressGwType_NoOutsideStaticRoutes{v}
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutsideStaticRoutes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views1.SiteStaticRoutesListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.OutsideStaticRouteChoice = &AWSVPCIngressEgressGwType_OutsideStaticRoutes{v}
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoGlobalNetwork", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalNetworkChoice = &AWSVPCIngressEgressGwType_NoGlobalNetwork{v}
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalNetworkList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views1.GlobalNetworkConnectionListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalNetworkChoice = &AWSVPCIngressEgressGwType_GlobalNetworkList{v}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardProxyAllowAll", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyChoice = &AWSVPCIngressEgressGwType_ForwardProxyAllowAll{v}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowedVipPort", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AllowedVipPort == nil {
				m.AllowedVipPort = &ves_io_schema_views1.AllowedVIPPorts{}
			}
			if err := m.AllowedVipPort.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowedVipPortSli", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AllowedVipPortSli == nil {
				m.AllowedVipPortSli = &ves_io_schema_views1.AllowedVIPPorts{}
			}
			if err := m.AllowedVipPortSli.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AWSVPCVoltstackClusterType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AWSVPCVoltstackClusterType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AWSVPCVoltstackClusterType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AwsCertifiedHw", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AwsCertifiedHw = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AzNodes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AzNodes = append(m.AzNodes, &ves_io_schema_views1.AWSVPCOneInterfaceNodeType{})
			if err := m.AzNodes[len(m.AzNodes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoNetworkPolicy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &AWSVPCVoltstackClusterType_NoNetworkPolicy{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveNetworkPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_network_firewall.ActiveNetworkPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &AWSVPCVoltstackClusterType_ActiveNetworkPolicies{v}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoForwardProxy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyChoice = &AWSVPCVoltstackClusterType_NoForwardProxy{v}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveForwardProxyPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_network_firewall.ActiveForwardProxyPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyChoice = &AWSVPCVoltstackClusterType_ActiveForwardProxyPolicies{v}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoOutsideStaticRoutes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.OutsideStaticRouteChoice = &AWSVPCVoltstackClusterType_NoOutsideStaticRoutes{v}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutsideStaticRoutes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views1.SiteStaticRoutesListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.OutsideStaticRouteChoice = &AWSVPCVoltstackClusterType_OutsideStaticRoutes{v}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoGlobalNetwork", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalNetworkChoice = &AWSVPCVoltstackClusterType_NoGlobalNetwork{v}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalNetworkList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views1.GlobalNetworkConnectionListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalNetworkChoice = &AWSVPCVoltstackClusterType_GlobalNetworkList{v}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardProxyAllowAll", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyChoice = &AWSVPCVoltstackClusterType_ForwardProxyAllowAll{v}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultStorage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.StorageClassChoice = &AWSVPCVoltstackClusterType_DefaultStorage{v}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StorageClassList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views2.StorageClassListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.StorageClassChoice = &AWSVPCVoltstackClusterType_StorageClassList{v}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowedVipPort", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AllowedVipPort == nil {
				m.AllowedVipPort = &ves_io_schema_views1.AllowedVIPPorts{}
			}
			if err := m.AllowedVipPort.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoK8SCluster", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.K8SClusterChoice = &AWSVPCVoltstackClusterType_NoK8SCluster{v}
			iNdEx = postIndex
		case 27:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field K8SCluster", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.K8SClusterChoice = &AWSVPCVoltstackClusterType_K8SCluster{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AWSVPCIngressGwReplaceType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AWSVPCIngressGwReplaceType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AWSVPCIngressGwReplaceType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowedVipPort", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AllowedVipPort == nil {
				m.AllowedVipPort = &ves_io_schema_views1.AllowedVIPPorts{}
			}
			if err := m.AllowedVipPort.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AWSVPCIngressEgressGwReplaceType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AWSVPCIngressEgressGwReplaceType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AWSVPCIngressEgressGwReplaceType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoNetworkPolicy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &AWSVPCIngressEgressGwReplaceType_NoNetworkPolicy{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoForwardProxy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyChoice = &AWSVPCIngressEgressGwReplaceType_NoForwardProxy{v}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveForwardProxyPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_network_firewall.ActiveForwardProxyPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyChoice = &AWSVPCIngressEgressGwReplaceType_ActiveForwardProxyPolicies{v}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveNetworkPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_network_firewall.ActiveNetworkPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &AWSVPCIngressEgressGwReplaceType_ActiveNetworkPolicies{v}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoInsideStaticRoutes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.InsideStaticRouteChoice = &AWSVPCIngressEgressGwReplaceType_NoInsideStaticRoutes{v}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InsideStaticRoutes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views1.SiteStaticRoutesListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.InsideStaticRouteChoice = &AWSVPCIngressEgressGwReplaceType_InsideStaticRoutes{v}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoOutsideStaticRoutes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.OutsideStaticRouteChoice = &AWSVPCIngressEgressGwReplaceType_NoOutsideStaticRoutes{v}
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutsideStaticRoutes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views1.SiteStaticRoutesListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.OutsideStaticRouteChoice = &AWSVPCIngressEgressGwReplaceType_OutsideStaticRoutes{v}
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoGlobalNetwork", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalNetworkChoice = &AWSVPCIngressEgressGwReplaceType_NoGlobalNetwork{v}
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalNetworkList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views1.GlobalNetworkConnectionListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalNetworkChoice = &AWSVPCIngressEgressGwReplaceType_GlobalNetworkList{v}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardProxyAllowAll", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyChoice = &AWSVPCIngressEgressGwReplaceType_ForwardProxyAllowAll{v}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowedVipPort", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AllowedVipPort == nil {
				m.AllowedVipPort = &ves_io_schema_views1.AllowedVIPPorts{}
			}
			if err := m.AllowedVipPort.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowedVipPortSli", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AllowedVipPortSli == nil {
				m.AllowedVipPortSli = &ves_io_schema_views1.AllowedVIPPorts{}
			}
			if err := m.AllowedVipPortSli.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AWSVPCVoltstackClusterReplaceType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AWSVPCVoltstackClusterReplaceType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AWSVPCVoltstackClusterReplaceType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoNetworkPolicy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &AWSVPCVoltstackClusterReplaceType_NoNetworkPolicy{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveNetworkPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_network_firewall.ActiveNetworkPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &AWSVPCVoltstackClusterReplaceType_ActiveNetworkPolicies{v}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoForwardProxy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyChoice = &AWSVPCVoltstackClusterReplaceType_NoForwardProxy{v}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveForwardProxyPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_network_firewall.ActiveForwardProxyPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyChoice = &AWSVPCVoltstackClusterReplaceType_ActiveForwardProxyPolicies{v}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoOutsideStaticRoutes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.OutsideStaticRouteChoice = &AWSVPCVoltstackClusterReplaceType_NoOutsideStaticRoutes{v}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutsideStaticRoutes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views1.SiteStaticRoutesListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.OutsideStaticRouteChoice = &AWSVPCVoltstackClusterReplaceType_OutsideStaticRoutes{v}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoGlobalNetwork", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalNetworkChoice = &AWSVPCVoltstackClusterReplaceType_NoGlobalNetwork{v}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalNetworkList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views1.GlobalNetworkConnectionListType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.GlobalNetworkChoice = &AWSVPCVoltstackClusterReplaceType_GlobalNetworkList{v}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardProxyAllowAll", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyChoice = &AWSVPCVoltstackClusterReplaceType_ForwardProxyAllowAll{v}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowedVipPort", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AllowedVipPort == nil {
				m.AllowedVipPort = &ves_io_schema_views1.AllowedVIPPorts{}
			}
			if err := m.AllowedVipPort.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GlobalSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GlobalSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GlobalSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vpc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Vpc == nil {
				m.Vpc = &ves_io_schema_views1.AWSVPCchoiceType{}
			}
			if err := m.Vpc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IngressGw", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AWSVPCIngressGwType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.SiteType = &GlobalSpecType_IngressGw{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IngressEgressGw", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AWSVPCIngressEgressGwType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.SiteType = &GlobalSpecType_IngressEgressGw{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AwsCred", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Deployment = &GlobalSpecType_AwsCred{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Assisted", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Deployment = &GlobalSpecType_Assisted{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstanceType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InstanceType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VolterraSoftwareVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VolterraSoftwareVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperatingSystemVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OperatingSystemVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AwsRegion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AwsRegion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SshKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SshKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodesPerAz", wireType)
			}
			m.NodesPerAz = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NodesPerAz |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DiskSize", wireType)
			}
			m.DiskSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DiskSize |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltstackCluster", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AWSVPCVoltstackClusterType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.SiteType = &GlobalSpecType_VoltstackCluster{v}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Coordinates", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Coordinates == nil {
				m.Coordinates = &ves_io_schema_site.Coordinates{}
			}
			if err := m.Coordinates.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LogsStreamingDisabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LogsReceiverChoice = &GlobalSpecType_LogsStreamingDisabled{v}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LogReceiver", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LogsReceiverChoice = &GlobalSpecType_LogReceiver{v}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sw", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Sw == nil {
				m.Sw = &ves_io_schema_views.VolterraSoftwareType{}
			}
			if err := m.Sw.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Os", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Os == nil {
				m.Os = &ves_io_schema_views.OperatingSystemType{}
			}
			if err := m.Os.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VipParamsPerAz", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VipParamsPerAz = append(m.VipParamsPerAz, &ves_io_schema_site.PublishVIPParamsPerAz{})
			if err := m.VipParamsPerAz[len(m.VipParamsPerAz)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserModificationTimestamp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserModificationTimestamp == nil {
				m.UserModificationTimestamp = &google_protobuf1.Timestamp{}
			}
			if err := m.UserModificationTimestamp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 999:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TfParams", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TfParams == nil {
				m.TfParams = &ves_io_schema_views.ObjectRefType{}
			}
			if err := m.TfParams.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 1000:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewInternal", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ViewInternal == nil {
				m.ViewInternal = &ves_io_schema_views.ObjectRefType{}
			}
			if err := m.ViewInternal.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vpc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Vpc == nil {
				m.Vpc = &ves_io_schema_views1.AWSVPCchoiceType{}
			}
			if err := m.Vpc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IngressGw", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AWSVPCIngressGwType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.SiteType = &CreateSpecType_IngressGw{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IngressEgressGw", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AWSVPCIngressEgressGwType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.SiteType = &CreateSpecType_IngressEgressGw{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AwsCred", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Deployment = &CreateSpecType_AwsCred{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Assisted", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Deployment = &CreateSpecType_Assisted{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstanceType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InstanceType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AwsRegion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AwsRegion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SshKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SshKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodesPerAz", wireType)
			}
			m.NodesPerAz = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NodesPerAz |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DiskSize", wireType)
			}
			m.DiskSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DiskSize |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltstackCluster", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AWSVPCVoltstackClusterType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.SiteType = &CreateSpecType_VoltstackCluster{v}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Coordinates", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Coordinates == nil {
				m.Coordinates = &ves_io_schema_site.Coordinates{}
			}
			if err := m.Coordinates.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LogsStreamingDisabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LogsReceiverChoice = &CreateSpecType_LogsStreamingDisabled{v}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LogReceiver", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LogsReceiverChoice = &CreateSpecType_LogReceiver{v}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sw", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Sw == nil {
				m.Sw = &ves_io_schema_views.VolterraSoftwareType{}
			}
			if err := m.Sw.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Os", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Os == nil {
				m.Os = &ves_io_schema_views.OperatingSystemType{}
			}
			if err := m.Os.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReplaceSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReplaceSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReplaceSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IngressGw", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AWSVPCIngressGwReplaceType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.SiteType = &ReplaceSpecType_IngressGw{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IngressEgressGw", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AWSVPCIngressEgressGwReplaceType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.SiteType = &ReplaceSpecType_IngressEgressGw{v}
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodesPerAz", wireType)
			}
			m.NodesPerAz = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NodesPerAz |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltstackCluster", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AWSVPCVoltstackClusterReplaceType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.SiteType = &ReplaceSpecType_VoltstackCluster{v}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Coordinates", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Coordinates == nil {
				m.Coordinates = &ves_io_schema_site.Coordinates{}
			}
			if err := m.Coordinates.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LogsStreamingDisabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LogsReceiverChoice = &ReplaceSpecType_LogsStreamingDisabled{v}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LogReceiver", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LogsReceiverChoice = &ReplaceSpecType_LogReceiver{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vpc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Vpc == nil {
				m.Vpc = &ves_io_schema_views1.AWSVPCchoiceType{}
			}
			if err := m.Vpc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IngressGw", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AWSVPCIngressGwType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.SiteType = &GetSpecType_IngressGw{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IngressEgressGw", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AWSVPCIngressEgressGwType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.SiteType = &GetSpecType_IngressEgressGw{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AwsCred", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Deployment = &GetSpecType_AwsCred{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Assisted", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Deployment = &GetSpecType_Assisted{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstanceType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InstanceType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VolterraSoftwareVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VolterraSoftwareVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperatingSystemVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OperatingSystemVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AwsRegion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AwsRegion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SshKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SshKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodesPerAz", wireType)
			}
			m.NodesPerAz = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NodesPerAz |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DiskSize", wireType)
			}
			m.DiskSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DiskSize |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltstackCluster", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AWSVPCVoltstackClusterType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.SiteType = &GetSpecType_VoltstackCluster{v}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Coordinates", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Coordinates == nil {
				m.Coordinates = &ves_io_schema_site.Coordinates{}
			}
			if err := m.Coordinates.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LogsStreamingDisabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LogsReceiverChoice = &GetSpecType_LogsStreamingDisabled{v}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LogReceiver", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.LogsReceiverChoice = &GetSpecType_LogReceiver{v}
			iNdEx = postIndex
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SiteState", wireType)
			}
			m.SiteState = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SiteState |= (ves_io_schema_site.SiteState(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VipParamsPerAz", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VipParamsPerAz = append(m.VipParamsPerAz, &ves_io_schema_site.PublishVIPParamsPerAz{})
			if err := m.VipParamsPerAz[len(m.VipParamsPerAz)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserModificationTimestamp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserModificationTimestamp == nil {
				m.UserModificationTimestamp = &google_protobuf1.Timestamp{}
			}
			if err := m.UserModificationTimestamp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTypes(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthTypes
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowTypes
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipTypes(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthTypes = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTypes   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("ves.io/schema/views/aws_vpc_site/types.proto", fileDescriptorTypes) }
func init() {
	golang_proto.RegisterFile("ves.io/schema/views/aws_vpc_site/types.proto", fileDescriptorTypes)
}

var fileDescriptorTypes = []byte{
	// 3204 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5b, 0xcd, 0x6f, 0x1b, 0xd7,
	0x76, 0xd7, 0x25, 0x29, 0x89, 0xbc, 0x92, 0x28, 0x6a, 0x44, 0x59, 0x63, 0xc9, 0xa6, 0x19, 0x35,
	0x41, 0x64, 0x67, 0x48, 0x69, 0x48, 0x49, 0x96, 0x95, 0x54, 0xb1, 0x46, 0x4d, 0x6c, 0x2b, 0x8d,
	0xad, 0x8e, 0x1c, 0xb5, 0x49, 0xd3, 0x0e, 0x46, 0xe4, 0x25, 0x35, 0xd5, 0x70, 0x2e, 0x33, 0x77,
	0x48, 0x5a, 0x06, 0x0c, 0x04, 0xee, 0x26, 0x28, 0xb2, 0x28, 0xfc, 0x07, 0x74, 0x59, 0x04, 0xde,
	0x65, 0x1b, 0x66, 0x61, 0x18, 0x08, 0x10, 0x78, 0xe5, 0x65, 0xe0, 0x45, 0x91, 0x28, 0x05, 0xea,
	0xb4, 0x9b, 0xa0, 0xab, 0xc0, 0x0f, 0x78, 0x78, 0x98, 0x3b, 0x1f, 0x9a, 0x21, 0x87, 0xd4, 0x87,
	0xed, 0xbc, 0x04, 0x4f, 0x1b, 0x81, 0x9c, 0xfb, 0x3b, 0xe7, 0x7e, 0x9f, 0xdf, 0xf9, 0x9d, 0xa1,
	0x20, 0x57, 0x47, 0x24, 0xab, 0xe0, 0x19, 0x52, 0xd8, 0x46, 0x15, 0x79, 0xa6, 0xae, 0xa0, 0x06,
	0x99, 0x91, 0x1b, 0x44, 0xaa, 0x57, 0x0b, 0x12, 0x51, 0x0c, 0x34, 0x63, 0xec, 0x56, 0x11, 0xc9,
	0x56, 0x75, 0x6c, 0x60, 0x26, 0x6d, 0xa1, 0xb3, 0x16, 0x3a, 0x4b, 0xd1, 0x59, 0x2f, 0x7a, 0x22,
	0x53, 0x56, 0x8c, 0xed, 0xda, 0x56, 0xb6, 0x80, 0x2b, 0x33, 0x65, 0x5c, 0xc6, 0x33, 0xd4, 0x70,
	0xab, 0x56, 0xa2, 0xdf, 0xe8, 0x17, 0xfa, 0xc9, 0x72, 0x38, 0x71, 0xae, 0x8c, 0x71, 0x59, 0x45,
	0xfb, 0x28, 0x43, 0xa9, 0x20, 0x62, 0xc8, 0x95, 0xaa, 0x0d, 0xb8, 0xe0, 0x1f, 0x9f, 0x86, 0x8c,
	0x06, 0xd6, 0x77, 0xa4, 0x92, 0xa2, 0xa3, 0x86, 0xac, 0xaa, 0xde, 0xd1, 0x4d, 0x4c, 0xfa, 0xb1,
	0xb8, 0x6a, 0x28, 0x58, 0x73, 0x1a, 0x53, 0xfe, 0xc6, 0xd6, 0xa9, 0x4d, 0x9c, 0xf6, 0xb7, 0x7b,
	0x9b, 0xce, 0xb4, 0xac, 0x91, 0xac, 0x2a, 0x45, 0xd9, 0x40, 0x76, 0x6b, 0xba, 0x7d, 0x05, 0x25,
	0x7f, 0xd7, 0xaf, 0x06, 0xad, 0xb1, 0x39, 0x00, 0xc9, 0xdb, 0xcb, 0xeb, 0x81, 0x28, 0x03, 0xeb,
	0x72, 0xd9, 0x0f, 0x3c, 0x17, 0x04, 0xf4, 0x00, 0xa6, 0xbe, 0x0c, 0xc1, 0xd1, 0x95, 0xbf, 0xdf,
	0xd8, 0x5c, 0x5f, 0xbd, 0xa6, 0x95, 0x75, 0x44, 0xc8, 0x95, 0xc6, 0xcd, 0xdd, 0x2a, 0x62, 0x3e,
	0x84, 0x51, 0xf9, 0xb6, 0xa4, 0xe1, 0x22, 0x22, 0x2c, 0x48, 0x87, 0xa7, 0x07, 0x72, 0x33, 0xd9,
	0xa0, 0x0d, 0xb5, 0x6c, 0x6f, 0x68, 0xe8, 0x9a, 0x66, 0x20, 0xbd, 0x24, 0x17, 0xd0, 0x75, 0x5c,
	0x44, 0xa6, 0x0b, 0x61, 0xe8, 0xab, 0x9f, 0x1e, 0x84, 0xa3, 0xf7, 0x40, 0xef, 0x85, 0x30, 0xcf,
	0xe5, 0xc5, 0x7e, 0xf9, 0xb6, 0xd9, 0x44, 0x18, 0x09, 0x26, 0xcc, 0x63, 0x50, 0x40, 0xba, 0xa1,
	0x94, 0x14, 0x54, 0x94, 0xb6, 0x1b, 0x6c, 0x28, 0x0d, 0xa6, 0x63, 0xc2, 0xfc, 0x93, 0x26, 0x18,
	0x91, 0x1b, 0x24, 0xb3, 0xb5, 0x8b, 0xd5, 0x4c, 0x1d, 0xab, 0x46, 0x05, 0x91, 0xed, 0x5f, 0x9a,
	0xa0, 0xc7, 0x74, 0x35, 0xae, 0x8f, 0xb1, 0x97, 0xc5, 0xf6, 0x76, 0x31, 0x2e, 0x37, 0xc8, 0xaa,
	0xe3, 0xed, 0x6a, 0x83, 0xb9, 0x09, 0x13, 0xb2, 0xaa, 0xe2, 0x06, 0x2a, 0x4a, 0x75, 0xa5, 0x2a,
	0x55, 0xb1, 0x6e, 0xb0, 0xe1, 0x34, 0x98, 0x1e, 0xc8, 0xbd, 0x1a, 0x3c, 0x07, 0x0b, 0xbc, 0x79,
	0x6d, 0x7d, 0x1d, 0xeb, 0x06, 0x11, 0x22, 0x0f, 0x9a, 0x00, 0x88, 0x71, 0xdb, 0xc7, 0xa6, 0x52,
	0x35, 0x1f, 0x2f, 0x45, 0xff, 0x7f, 0xb9, 0x37, 0xc7, 0xf1, 0x5c, 0x7e, 0xea, 0xf3, 0x38, 0x3c,
	0xed, 0x5b, 0xb3, 0x77, 0x8e, 0xbf, 0x72, 0x37, 0x1b, 0xf8, 0xf0, 0x2b, 0x27, 0xc0, 0x11, 0x0d,
	0x4b, 0xce, 0xb9, 0xae, 0x62, 0x55, 0x29, 0xec, 0xd2, 0xa5, 0x1b, 0xc8, 0x25, 0x5b, 0xfa, 0x78,
	0xa7, 0x52, 0x35, 0x76, 0xaf, 0xf6, 0x88, 0xc3, 0x1a, 0xbe, 0x6e, 0xe1, 0xd7, 0x29, 0x9c, 0xb9,
	0x0c, 0x13, 0x1a, 0x96, 0x4a, 0x58, 0x6f, 0xc8, 0x7a, 0x51, 0xaa, 0xea, 0xf8, 0xd6, 0x2e, 0x1b,
	0xe9, 0xe2, 0x02, 0x88, 0x71, 0x0d, 0xbf, 0x6b, 0xc1, 0xd7, 0x4d, 0x34, 0x43, 0x02, 0xf6, 0x2f,
	0x4a, 0xf7, 0xef, 0xda, 0x93, 0x26, 0x98, 0x74, 0xf7, 0xa7, 0x52, 0x53, 0x0d, 0x25, 0xa3, 0x29,
	0x85, 0xb6, 0x9d, 0x7c, 0x45, 0x3f, 0xc7, 0x5e, 0x16, 0xbb, 0x21, 0xdb, 0xf6, 0xf4, 0x5f, 0x01,
	0x3c, 0x2b, 0x17, 0x0c, 0xa5, 0x8e, 0xfc, 0x63, 0xb7, 0x56, 0x41, 0x41, 0x84, 0x8d, 0xd1, 0x49,
	0x2c, 0xb7, 0x4c, 0xa2, 0x35, 0x08, 0x64, 0x57, 0xa8, 0x13, 0xef, 0x84, 0xd6, 0x6d, 0x0f, 0xe6,
	0xd2, 0x5f, 0x05, 0xe2, 0x84, 0xdc, 0x11, 0xc1, 0x10, 0x38, 0x6e, 0x0f, 0xc2, 0xb7, 0x09, 0x66,
	0xf7, 0x90, 0x76, 0x7f, 0xe9, 0x70, 0xdd, 0x7b, 0xb7, 0xc4, 0xe9, 0xb9, 0x47, 0x1c, 0x93, 0x83,
	0x1a, 0x99, 0x0d, 0x38, 0xae, 0x61, 0x49, 0xd1, 0x88, 0x52, 0x44, 0x12, 0x31, 0x64, 0x43, 0x29,
	0x48, 0x3a, 0xae, 0x19, 0x88, 0xb0, 0x83, 0x9d, 0x37, 0xce, 0x3a, 0xc5, 0x57, 0x43, 0x62, 0x52,
	0xc3, 0xd7, 0xa8, 0xed, 0x06, 0x35, 0x15, 0xa9, 0x25, 0x53, 0x86, 0xc9, 0x40, 0x8f, 0x43, 0xd4,
	0x63, 0x26, 0xf0, 0xc4, 0x6e, 0x28, 0x86, 0xcf, 0xc9, 0xdf, 0x2a, 0xc4, 0xa0, 0xe7, 0xd5, 0xe9,
	0x8a, 0x51, 0xda, 0x3b, 0xfa, 0x00, 0xb2, 0x1a, 0x96, 0x70, 0xcd, 0x08, 0xe8, 0x6c, 0xf8, 0xc0,
	0xe1, 0x87, 0xc5, 0x31, 0x0d, 0xdf, 0xb0, 0x8c, 0x7d, 0x6e, 0x15, 0x38, 0x16, 0xec, 0x33, 0x71,
	0xfc, 0x09, 0x84, 0xc5, 0x51, 0x1c, 0xd0, 0x95, 0x75, 0xeb, 0xca, 0x2a, 0xde, 0x92, 0x55, 0x67,
	0xdf, 0x59, 0xa6, 0xcb, 0x95, 0x89, 0x98, 0xb7, 0xee, 0x0a, 0xc5, 0xdb, 0x7b, 0xc9, 0x94, 0xe0,
	0xa8, 0xdf, 0x81, 0xa4, 0x2a, 0xc4, 0x60, 0x47, 0xa9, 0x97, 0xb9, 0xc0, 0xc1, 0xfa, 0x1c, 0xac,
	0x62, 0x4d, 0x43, 0x05, 0x93, 0x28, 0x9c, 0x31, 0x5f, 0x8d, 0x88, 0x23, 0x65, 0x2f, 0xc4, 0x6c,
	0x60, 0xde, 0x87, 0xe3, 0xfe, 0xeb, 0x41, 0x83, 0x98, 0xf9, 0x97, 0x4d, 0x76, 0xbd, 0xe4, 0xc9,
	0x92, 0xe7, 0xbc, 0xd3, 0x80, 0xb8, 0xa2, 0xaa, 0x81, 0x91, 0x74, 0xec, 0x79, 0x23, 0x29, 0xf3,
	0x8f, 0x30, 0xd9, 0xea, 0x55, 0x22, 0xaa, 0xc2, 0x9e, 0x3a, 0xb2, 0xe7, 0x11, 0xbf, 0xe7, 0x0d,
	0x55, 0x59, 0xba, 0xf9, 0xb0, 0x09, 0xd6, 0xe1, 0x20, 0xec, 0xb5, 0x42, 0x66, 0x78, 0x91, 0xe3,
	0xe1, 0x19, 0x38, 0x66, 0x6e, 0x7d, 0xda, 0x5e, 0xa9, 0xf4, 0xbb, 0xf6, 0x6d, 0x64, 0xc2, 0x0b,
	0xdc, 0x45, 0x38, 0x05, 0x13, 0x2b, 0xc5, 0xba, 0xac, 0x15, 0x50, 0x31, 0x7d, 0xc3, 0x22, 0x63,
	0x26, 0xce, 0x5f, 0xe4, 0x78, 0x9e, 0xe3, 0xe7, 0xb8, 0x1c, 0xcf, 0xe5, 0x72, 0xc2, 0x79, 0x38,
	0xe6, 0x0f, 0xbb, 0x52, 0x61, 0x1b, 0x2b, 0x05, 0xc4, 0x24, 0x1e, 0x34, 0x41, 0xe8, 0x71, 0x13,
	0xf4, 0xed, 0x35, 0x41, 0x24, 0xc7, 0xf1, 0xb3, 0xc2, 0x05, 0x98, 0xf4, 0x6f, 0x81, 0x8d, 0x64,
	0x1e, 0x34, 0x41, 0xe4, 0x71, 0x13, 0xf4, 0xef, 0x35, 0x41, 0xdf, 0x1c, 0x97, 0x9b, 0xe5, 0x2e,
	0x09, 0x79, 0x38, 0x11, 0x70, 0x0b, 0x1d, 0x8b, 0xb1, 0x07, 0x4d, 0x30, 0xf8, 0x6d, 0x13, 0x80,
	0xc7, 0x4d, 0x30, 0xb0, 0xd7, 0x04, 0xbd, 0x7c, 0x8e, 0xe3, 0xf3, 0xc2, 0x1c, 0x9c, 0x0c, 0x3a,
	0xfa, 0x5e, 0xab, 0x61, 0xdb, 0x2a, 0x4e, 0xad, 0xe6, 0x39, 0x7e, 0x41, 0xc8, 0xc2, 0xb1, 0x96,
	0x13, 0xe8, 0xc1, 0x33, 0x36, 0x7e, 0x84, 0xe2, 0x17, 0x39, 0xfe, 0xd2, 0x5a, 0x24, 0x1a, 0x4e,
	0x44, 0xd6, 0x22, 0xd1, 0xde, 0x44, 0xdf, 0x5a, 0x24, 0xda, 0x97, 0xe8, 0x5f, 0x8b, 0x44, 0xfb,
	0x13, 0xd1, 0xb5, 0x48, 0x74, 0x20, 0x31, 0xb8, 0x16, 0x89, 0xc6, 0x13, 0xc3, 0x6b, 0x91, 0xe8,
	0x48, 0x82, 0x99, 0xfa, 0x3e, 0x0e, 0x27, 0x2c, 0x32, 0xdb, 0xc4, 0xaa, 0x41, 0x0c, 0xb9, 0xb0,
	0xb3, 0xaa, 0xd6, 0x88, 0x81, 0x74, 0xca, 0x87, 0x95, 0x00, 0xba, 0x00, 0x94, 0x2e, 0x56, 0x9f,
	0x34, 0x01, 0xeb, 0xa3, 0x73, 0x6a, 0x9c, 0x29, 0xe0, 0xca, 0x16, 0x76, 0xb8, 0x22, 0xa5, 0x9f,
	0x61, 0x2f, 0x8b, 0x1d, 0x61, 0x6d, 0x44, 0xe1, 0xa5, 0xdf, 0xd0, 0x8b, 0x4d, 0x5c, 0x02, 0xe9,
	0x37, 0x72, 0x34, 0xfa, 0xed, 0xc2, 0x20, 0xbd, 0x2f, 0x8d, 0x41, 0x82, 0x38, 0xbf, 0xff, 0x48,
	0x9c, 0x7f, 0x30, 0xfd, 0x46, 0x7f, 0x05, 0xfa, 0xed, 0xc6, 0x25, 0xf0, 0x10, 0x54, 0x78, 0x54,
	0x2e, 0x19, 0x78, 0x1e, 0x32, 0x3c, 0x3c, 0x97, 0x0c, 0x75, 0xd9, 0x8a, 0xf0, 0xa1, 0xb9, 0x24,
	0xfe, 0x1c, 0x5c, 0x12, 0x3e, 0x22, 0x97, 0x0c, 0x1f, 0x83, 0x4b, 0xde, 0x86, 0xc3, 0x45, 0x54,
	0x92, 0x6b, 0xaa, 0x21, 0xd9, 0x4a, 0xa5, 0x2b, 0x25, 0x45, 0xc4, 0xb8, 0x0d, 0xdf, 0xb0, 0xd0,
	0xcc, 0x87, 0x90, 0x71, 0x24, 0x4e, 0x41, 0x95, 0x09, 0xb1, 0xa6, 0x6d, 0xd1, 0xd1, 0xf9, 0xe0,
	0x3d, 0xb2, 0xe0, 0xab, 0x26, 0xda, 0xc3, 0x9b, 0x09, 0xd2, 0xf2, 0x3c, 0x90, 0xe7, 0x4e, 0x3d,
	0x37, 0xcf, 0x09, 0x30, 0xae, 0x61, 0x69, 0x67, 0x91, 0x48, 0x05, 0x2b, 0x1e, 0xb2, 0x13, 0x07,
	0x1e, 0xd2, 0x5e, 0x71, 0x50, 0xc3, 0xef, 0x2d, 0x12, 0x3b, 0x82, 0x32, 0x1f, 0xc2, 0x01, 0xaf,
	0x83, 0x49, 0xea, 0x60, 0x2a, 0x70, 0x50, 0x37, 0xb6, 0xfe, 0x05, 0x15, 0x0c, 0x11, 0x95, 0xe8,
	0x31, 0x64, 0xee, 0xdf, 0xf1, 0x5a, 0xda, 0xce, 0xe1, 0x8e, 0xeb, 0x7a, 0xa9, 0xf2, 0xb0, 0x09,
	0x14, 0x0f, 0x53, 0xf2, 0x5c, 0xae, 0x0b, 0x53, 0xe6, 0xb9, 0x05, 0x38, 0x09, 0xc7, 0xec, 0x25,
	0x4d, 0xaf, 0x62, 0xad, 0xa4, 0x94, 0x6b, 0xba, 0x6c, 0x9e, 0x23, 0x26, 0xc4, 0x5f, 0x82, 0xa9,
	0x00, 0x1a, 0x85, 0x97, 0x38, 0x3e, 0xc7, 0xe5, 0x72, 0x5c, 0x6e, 0x5e, 0x98, 0xee, 0x44, 0xa1,
	0xc3, 0x36, 0x31, 0x86, 0xf7, 0x9a, 0x20, 0x3c, 0xc7, 0xcd, 0x77, 0x65, 0xd0, 0x7e, 0x9b, 0x6b,
	0xfb, 0x2e, 0x72, 0xfc, 0x3c, 0xb7, 0x78, 0x18, 0x32, 0x84, 0x36, 0xb9, 0xc5, 0x28, 0xb9, 0xcd,
	0x72, 0x3c, 0xdf, 0x9d, 0x0c, 0x87, 0x6c, 0xfc, 0x20, 0xc5, 0xe7, 0x39, 0x7e, 0x4e, 0xc8, 0xc0,
	0xa4, 0xff, 0xe8, 0x79, 0xe0, 0x49, 0x1b, 0x3e, 0x6a, 0xc2, 0x73, 0xb3, 0x5c, 0x8e, 0x17, 0xde,
	0x80, 0x8c, 0x67, 0xe9, 0xbd, 0xe0, 0x09, 0x1b, 0x7c, 0x9a, 0x82, 0x17, 0xb8, 0xdc, 0x45, 0x97,
	0x68, 0x2d, 0x8a, 0x8d, 0x25, 0xe0, 0x5a, 0x24, 0x3a, 0x98, 0x18, 0x5a, 0x8b, 0x44, 0x47, 0x13,
	0xc9, 0xb5, 0x48, 0xf4, 0x74, 0x62, 0x62, 0xea, 0xdf, 0x80, 0x43, 0xb1, 0xae, 0x4a, 0x17, 0x51,
	0x55, 0x95, 0x0b, 0x94, 0xb0, 0x5e, 0x92, 0xe0, 0x3d, 0xf5, 0x68, 0x39, 0xa8, 0x34, 0x30, 0xf5,
	0xdf, 0x43, 0x30, 0x1d, 0x28, 0x7f, 0xbd, 0x43, 0xfa, 0x6d, 0x48, 0xd5, 0x13, 0xd5, 0x78, 0xa2,
	0x1a, 0x4f, 0x54, 0xe3, 0x89, 0x6a, 0x3c, 0x50, 0x35, 0x6e, 0x3d, 0x5a, 0xee, 0x5c, 0xd2, 0x7b,
	0xd8, 0x04, 0xc2, 0x0b, 0xd0, 0x90, 0x42, 0x27, 0x02, 0x3c, 0xdf, 0xaa, 0x21, 0xef, 0x3e, 0x03,
	0xc1, 0x50, 0x41, 0xe8, 0x40, 0x8d, 0x17, 0xda, 0xc5, 0xe5, 0xdd, 0x67, 0x20, 0x10, 0x2b, 0xfc,
	0x5d, 0x57, 0xd1, 0x99, 0x0f, 0x14, 0x9d, 0x77, 0x9f, 0x81, 0x2e, 0x46, 0xc2, 0x46, 0x77, 0x16,
	0x9e, 0x0b, 0x94, 0xa4, 0x77, 0x9f, 0x81, 0x6e, 0x56, 0xc2, 0x95, 0x4e, 0x24, 0x9d, 0x0d, 0x54,
	0xac, 0xe6, 0xa2, 0x05, 0xe2, 0xd7, 0x22, 0x51, 0x90, 0x08, 0xb5, 0x08, 0xda, 0x68, 0x22, 0x76,
	0x80, 0xac, 0xfd, 0x2f, 0x08, 0x5f, 0x09, 0x96, 0xb5, 0x07, 0xf2, 0xdc, 0x89, 0x26, 0x3c, 0xd1,
	0x84, 0x27, 0x9a, 0xf0, 0x98, 0x4c, 0xf1, 0xdc, 0xba, 0x6b, 0xe9, 0xe3, 0x47, 0xcb, 0x5d, 0x0a,
	0x52, 0x0f, 0x9b, 0xe0, 0xcd, 0x03, 0x75, 0x4e, 0x7b, 0x34, 0xef, 0xb7, 0xa5, 0x8c, 0xb0, 0xd2,
	0x29, 0x8c, 0x4f, 0xb7, 0xe8, 0x98, 0xe3, 0x45, 0xf1, 0x16, 0x81, 0xd3, 0x31, 0x8a, 0x1f, 0x22,
	0xe4, 0xb6, 0x0b, 0x9f, 0xe7, 0x0a, 0xb9, 0xed, 0xba, 0xe8, 0xe0, 0x90, 0x1b, 0x4a, 0x84, 0x3b,
	0x09, 0x9c, 0xa9, 0x2f, 0x47, 0x61, 0xdc, 0x3a, 0x84, 0x1b, 0x55, 0x54, 0xa0, 0xd1, 0xf4, 0xaf,
	0x61, 0xb8, 0x5e, 0x2d, 0xd0, 0xf2, 0xe0, 0x40, 0xee, 0xb5, 0x2e, 0x75, 0x3b, 0xab, 0x1b, 0xeb,
	0x6e, 0xfd, 0x6c, 0x9e, 0x01, 0xd3, 0x8e, 0xf9, 0x18, 0x42, 0xc5, 0xa2, 0x6f, 0xa9, 0xdc, 0xb0,
	0xd5, 0xc6, 0x7c, 0xf6, 0xa0, 0xf7, 0xd0, 0xd9, 0x00, 0x91, 0x23, 0x98, 0x1b, 0x09, 0xae, 0xf6,
	0x88, 0x31, 0xc5, 0x79, 0xcc, 0x60, 0x38, 0xe2, 0x78, 0x47, 0x6e, 0x27, 0x96, 0xcc, 0x7a, 0xf3,
	0x88, 0x9d, 0xbc, 0x13, 0xd4, 0xd5, 0xb0, 0xe2, 0x6f, 0x64, 0x3e, 0x80, 0x51, 0x5a, 0x39, 0xd5,
	0x51, 0xd1, 0xa6, 0x94, 0xc3, 0x08, 0xff, 0xe4, 0xfd, 0x3b, 0x23, 0x05, 0x15, 0xd7, 0x8a, 0xd4,
	0x10, 0x69, 0x86, 0x22, 0xab, 0xe4, 0x2a, 0x10, 0xfb, 0xe5, 0x06, 0x59, 0xd5, 0x51, 0x91, 0xc9,
	0xc1, 0xa8, 0x4c, 0x88, 0x42, 0x0c, 0x54, 0xb4, 0xf9, 0xa5, 0xd3, 0xa5, 0x75, 0x71, 0xcc, 0xff,
	0x01, 0x38, 0xa4, 0x68, 0xc4, 0x30, 0xef, 0x04, 0x7d, 0xc1, 0xcc, 0xf6, 0xd1, 0x12, 0xee, 0x37,
	0xe0, 0x49, 0x13, 0xc4, 0x8c, 0x7c, 0xf6, 0x96, 0x2a, 0xeb, 0x65, 0xf4, 0x4b, 0x13, 0xf4, 0xdc,
	0xfb, 0x1a, 0xfc, 0x27, 0x80, 0x73, 0x70, 0xff, 0x29, 0xf3, 0xfa, 0xf4, 0x5c, 0xfa, 0x56, 0xba,
	0xbe, 0xba, 0xfe, 0x01, 0x97, 0xe6, 0x17, 0xae, 0x08, 0x69, 0x71, 0xe5, 0xfd, 0xf3, 0xe9, 0x0a,
	0x2a, 0x2a, 0xb5, 0x4a, 0xba, 0x8a, 0xf4, 0x12, 0xd6, 0x2b, 0xa6, 0x67, 0x98, 0x87, 0xd0, 0xc8,
	0x67, 0x73, 0xb6, 0xd9, 0x6b, 0xd3, 0x8b, 0xae, 0x59, 0x3e, 0xe7, 0x98, 0x6d, 0x2b, 0xe5, 0x6d,
	0x9f, 0xd1, 0x25, 0x08, 0x2b, 0xf3, 0xd9, 0x39, 0xdb, 0xe8, 0x8d, 0x69, 0x7e, 0xc1, 0xb5, 0x5a,
	0x98, 0x73, 0xac, 0xea, 0x48, 0xdf, 0x6d, 0x33, 0xfd, 0xea, 0xa7, 0x07, 0xe1, 0x88, 0x1e, 0x62,
	0x2f, 0x8b, 0x83, 0xce, 0xe4, 0xe8, 0x31, 0x5c, 0x87, 0xa7, 0xeb, 0x58, 0x35, 0x90, 0xae, 0xcb,
	0x12, 0xc1, 0x25, 0xa3, 0x21, 0xeb, 0x48, 0xaa, 0x23, 0x9d, 0x28, 0x58, 0xb3, 0x5f, 0x75, 0x26,
	0xbf, 0xbb, 0x03, 0x9e, 0x36, 0x01, 0x70, 0xca, 0xd4, 0x96, 0x9b, 0x71, 0xc7, 0x6c, 0xc3, 0xb6,
	0xda, 0xb4, 0x8c, 0x98, 0xeb, 0x90, 0xc5, 0x55, 0xa4, 0xcb, 0x86, 0xa2, 0x95, 0x25, 0xb2, 0x4b,
	0x0c, 0x54, 0x71, 0x1d, 0xc6, 0xba, 0x38, 0x3c, 0xe5, 0x5a, 0x6d, 0x50, 0x23, 0xc7, 0xdf, 0x17,
	0x21, 0x08, 0xcd, 0xb3, 0xa1, 0xa3, 0xb2, 0xe9, 0x62, 0x90, 0xba, 0xf8, 0x2c, 0xe4, 0x18, 0xff,
	0x11, 0xe8, 0x7f, 0x30, 0xe3, 0x62, 0x35, 0xa3, 0x61, 0xdd, 0xd8, 0x46, 0x32, 0x31, 0x32, 0x3c,
	0xfd, 0x4e, 0x70, 0xcd, 0xfd, 0x3e, 0x88, 0x6a, 0x99, 0x02, 0xd2, 0x0c, 0x5d, 0x56, 0x33, 0xbc,
	0x18, 0x43, 0xb5, 0x4c, 0x03, 0xd1, 0x06, 0xf7, 0x63, 0x5e, 0x8c, 0x11, 0x39, 0x63, 0xc3, 0x63,
	0x35, 0xd2, 0xf6, 0x31, 0x47, 0x3f, 0x52, 0x6c, 0x4e, 0x1c, 0x2c, 0xc8, 0x1e, 0x7f, 0x50, 0x2e,
	0x59, 0xbd, 0x99, 0x78, 0xb9, 0xea, 0x98, 0x42, 0x67, 0x10, 0xf6, 0x80, 0xf6, 0x07, 0x98, 0x6b,
	0x19, 0x60, 0x4e, 0x84, 0xa8, 0xe6, 0x62, 0xcd, 0xcf, 0x14, 0xeb, 0x1d, 0x5f, 0x4e, 0x84, 0x15,
	0xb4, 0xdf, 0x8b, 0x33, 0x14, 0xb3, 0xc3, 0x06, 0x11, 0xe9, 0xda, 0x30, 0xaf, 0xc3, 0x7e, 0x42,
	0xb6, 0xa5, 0x1d, 0xb4, 0x4b, 0x49, 0x35, 0x26, 0xc4, 0x7f, 0x69, 0x82, 0xb0, 0xb9, 0x4a, 0xbd,
	0x7a, 0x98, 0xfd, 0xf4, 0xb2, 0xd8, 0x47, 0xc8, 0xf6, 0x7b, 0x68, 0x97, 0x59, 0x84, 0x83, 0xf4,
	0xb5, 0x81, 0x54, 0x45, 0xba, 0x24, 0xdf, 0xa6, 0xe4, 0x39, 0x24, 0x9c, 0x32, 0x29, 0xe6, 0x49,
	0x13, 0x80, 0x59, 0x77, 0x67, 0x2e, 0x84, 0xd8, 0x31, 0x11, 0x52, 0xec, 0x3a, 0xd2, 0x57, 0x6e,
	0x33, 0x79, 0x18, 0x2b, 0x2a, 0x64, 0x47, 0x22, 0xca, 0x6d, 0x44, 0x79, 0xd0, 0x36, 0x33, 0x2d,
	0x3e, 0xfb, 0x1a, 0x8c, 0xd0, 0xce, 0x2e, 0x84, 0xd9, 0x4f, 0x13, 0x62, 0xd4, 0x04, 0x6e, 0x28,
	0xb7, 0x11, 0xf3, 0x09, 0x1c, 0x71, 0xdf, 0x65, 0xb8, 0xf5, 0x3d, 0x4b, 0x87, 0xbe, 0x75, 0xd8,
	0x70, 0x12, 0xc4, 0x6f, 0x6e, 0x3c, 0x49, 0xd4, 0x5b, 0x5a, 0x99, 0x69, 0xd8, 0x2f, 0x17, 0x8b,
	0x66, 0x74, 0x61, 0x47, 0xac, 0xa5, 0x30, 0x47, 0xe9, 0x2e, 0x45, 0x48, 0x74, 0x9a, 0x99, 0x2b,
	0x70, 0xa0, 0x80, 0xb1, 0x5e, 0x54, 0x34, 0xd9, 0x4c, 0x7a, 0x2c, 0xdd, 0x7a, 0xae, 0x65, 0x58,
	0x74, 0x20, 0xab, 0xfb, 0x30, 0x9b, 0x8e, 0xbd, 0x96, 0xcc, 0x4d, 0x38, 0xae, 0xe2, 0x32, 0x91,
	0x88, 0xa1, 0x23, 0xb9, 0x62, 0x9e, 0xfe, 0xa2, 0x42, 0xe4, 0x2d, 0x15, 0x15, 0xbb, 0x49, 0xcb,
	0xfd, 0xec, 0xcc, 0x34, 0xde, 0x70, 0x6c, 0xff, 0xc6, 0x36, 0x65, 0x3e, 0x86, 0x83, 0x2a, 0x2e,
	0x4b, 0x3a, 0x2a, 0x20, 0xa5, 0x8e, 0x74, 0x5b, 0x5d, 0x1e, 0x26, 0x3a, 0x8e, 0xde, 0xbf, 0xe3,
	0x33, 0xb5, 0xfb, 0x19, 0x50, 0x71, 0x59, 0xb4, 0x1f, 0x31, 0xab, 0x30, 0x44, 0x1a, 0x76, 0x1e,
	0x12, 0x5c, 0x58, 0xde, 0x6c, 0xb9, 0xe6, 0xd4, 0x75, 0xd4, 0xf4, 0x45, 0xc9, 0x28, 0x44, 0x1a,
	0x8c, 0x00, 0x43, 0x98, 0xb0, 0xe3, 0xd4, 0xc9, 0x74, 0xf0, 0xc0, 0xfc, 0x57, 0xbb, 0xd5, 0x07,
	0x26, 0x4c, 0x1d, 0x8e, 0xd0, 0xb4, 0x48, 0xd6, 0xe5, 0x8a, 0x7b, 0x2c, 0x59, 0xfa, 0x52, 0xeb,
	0x7c, 0xd0, 0x5e, 0xac, 0xd7, 0xb6, 0x54, 0x85, 0x6c, 0x9b, 0xe9, 0x11, 0x35, 0xa1, 0xa7, 0x53,
	0x48, 0xdb, 0x91, 0xc5, 0xdc, 0x67, 0x78, 0x0f, 0xf4, 0x5f, 0xe8, 0x9d, 0xe5, 0x78, 0x2e, 0x4f,
	0xb7, 0xfd, 0x1e, 0x08, 0xb1, 0x40, 0x8c, 0xd7, 0x95, 0xaa, 0xc7, 0x82, 0xf9, 0x08, 0x4e, 0xd6,
	0x08, 0xd2, 0xa5, 0x0a, 0x2e, 0x2a, 0x25, 0xa5, 0x40, 0x6b, 0xbc, 0x92, 0xfb, 0x6b, 0x2b, 0xf6,
	0x34, 0x9d, 0xd4, 0x44, 0xd6, 0xfa, 0x3d, 0x56, 0xd6, 0xf9, 0x3d, 0x56, 0xf6, 0xa6, 0x83, 0x10,
	0x4f, 0x9b, 0xe6, 0xef, 0x7b, 0xac, 0xdd, 0x26, 0xe6, 0x9f, 0x60, 0xcc, 0x28, 0xd9, 0x53, 0x62,
	0xff, 0xa7, 0xff, 0xd0, 0x1b, 0x37, 0x79, 0xff, 0x4e, 0x92, 0xae, 0xb9, 0x19, 0xbc, 0x2d, 0x7b,
	0x64, 0x20, 0x9d, 0x98, 0x33, 0x13, 0xa3, 0x46, 0xc9, 0x1a, 0x3f, 0xf3, 0xcf, 0x70, 0x88, 0xfe,
	0xaa, 0x4a, 0xd1, 0x0c, 0xa4, 0x6b, 0xb2, 0xca, 0x3e, 0xed, 0x3f, 0x0a, 0x73, 0xfa, 0x8d, 0xa9,
	0xef, 0x41, 0xf3, 0xd1, 0x35, 0xfb, 0xc9, 0x52, 0xed, 0x61, 0x13, 0x7c, 0x02, 0x5f, 0x81, 0xa3,
	0x34, 0x7d, 0x34, 0xcd, 0xd2, 0x1b, 0x48, 0xb5, 0x52, 0x67, 0x06, 0x9a, 0x5a, 0x99, 0xa3, 0x99,
	0x16, 0x9c, 0x86, 0x49, 0x2b, 0xc3, 0xc4, 0x45, 0x94, 0x5e, 0x77, 0x87, 0xcb, 0x24, 0x16, 0x38,
	0x7e, 0x8e, 0x33, 0xd3, 0xa7, 0x79, 0x8e, 0xbf, 0xc8, 0xf1, 0x8b, 0x70, 0x0a, 0x9e, 0x72, 0xb3,
	0x4d, 0x7f, 0x59, 0x3d, 0xca, 0x5f, 0xa2, 0xc5, 0xf3, 0xbc, 0x90, 0x86, 0x31, 0xf7, 0x47, 0x60,
	0xcc, 0xa8, 0x5d, 0x2f, 0x80, 0x66, 0xa2, 0x99, 0xe3, 0xf2, 0xe6, 0x30, 0x85, 0xb3, 0x10, 0x16,
	0x51, 0x55, 0xc5, 0xbb, 0x15, 0xa4, 0x19, 0x6e, 0x4d, 0x7d, 0xc0, 0xa9, 0xa9, 0x67, 0x60, 0x92,
	0xde, 0x43, 0xe7, 0xdc, 0x77, 0xaf, 0x60, 0xaf, 0x45, 0xa2, 0x30, 0x31, 0xe0, 0x8a, 0x62, 0x4b,
	0x20, 0x8f, 0x26, 0x92, 0x53, 0xdf, 0xc4, 0x60, 0x7c, 0x55, 0x47, 0xb2, 0x81, 0xdc, 0x9c, 0xed,
	0xe2, 0xd1, 0x73, 0x36, 0x2b, 0x5b, 0xdb, 0x7c, 0x61, 0xd9, 0x9a, 0x3f, 0x4f, 0x53, 0x5e, 0x4e,
	0x9e, 0xf6, 0x1b, 0xcf, 0xd0, 0xfe, 0x2a, 0x30, 0x41, 0x6b, 0x49, 0x6c, 0xce, 0xb6, 0x67, 0x0d,
	0x5e, 0xaa, 0x1c, 0x6f, 0xa1, 0x4a, 0x97, 0x1a, 0xd3, 0x41, 0xd4, 0xe8, 0xa3, 0xc0, 0xc9, 0x36,
	0x0a, 0xf4, 0x50, 0xdd, 0xce, 0x4b, 0xa2, 0xba, 0x40, 0x92, 0x63, 0x5b, 0x48, 0x6e, 0x9f, 0xd4,
	0x56, 0x8e, 0x43, 0x6a, 0x7e, 0x3a, 0xbb, 0x7e, 0x2c, 0x3a, 0xeb, 0x4c, 0x64, 0xff, 0x70, 0x6c,
	0x22, 0x1b, 0x6e, 0x21, 0xb2, 0x56, 0x12, 0x7b, 0xfb, 0x78, 0x24, 0x16, 0x71, 0x09, 0x6c, 0xf9,
	0x58, 0x04, 0x16, 0x71, 0xc8, 0x6b, 0x69, 0xe4, 0xd1, 0x72, 0x8b, 0xbc, 0x13, 0x26, 0xbc, 0x51,
	0x6c, 0xe8, 0xee, 0x33, 0xb0, 0xff, 0x55, 0x38, 0xe3, 0x8b, 0x5f, 0xf1, 0xbb, 0xcf, 0x80, 0xe7,
	0xbb, 0x30, 0xdb, 0x21, 0x7c, 0xb1, 0xa6, 0x3e, 0x0e, 0x6a, 0x69, 0x89, 0x60, 0x56, 0xb9, 0xcf,
	0xd2, 0x9e, 0x66, 0x1c, 0xfb, 0xdf, 0x3e, 0x38, 0x6c, 0x97, 0xf1, 0xdc, 0x40, 0x56, 0x08, 0x88,
	0x47, 0x6f, 0x1d, 0x39, 0x1e, 0x79, 0x8a, 0x83, 0x41, 0x22, 0xb2, 0xde, 0x39, 0x38, 0x09, 0xc7,
	0x0c, 0x4e, 0x41, 0x3d, 0xb6, 0x45, 0xaa, 0x83, 0x6f, 0xf0, 0xad, 0xce, 0x97, 0x74, 0xf5, 0xb8,
	0x97, 0x34, 0x68, 0x68, 0xbf, 0x8f, 0x1b, 0x0b, 0x7e, 0x85, 0x1b, 0x0b, 0x7c, 0x37, 0x76, 0x69,
	0xbd, 0xed, 0xc2, 0xd0, 0x52, 0xd5, 0x38, 0x1c, 0xb1, 0xab, 0x54, 0x8a, 0x56, 0xb6, 0x13, 0x04,
	0x26, 0xc4, 0xcf, 0xc2, 0x74, 0x87, 0x0c, 0x23, 0x6a, 0xe6, 0x17, 0x66, 0x66, 0x21, 0x9c, 0xf7,
	0xde, 0xb7, 0x33, 0x2d, 0x59, 0x83, 0xff, 0xfa, 0x1d, 0xff, 0x82, 0x45, 0x12, 0xbd, 0x6e, 0x55,
	0x3d, 0xf8, 0xb2, 0xfd, 0xc7, 0x00, 0x1c, 0xb8, 0x82, 0x8c, 0x93, 0x8c, 0xe1, 0x77, 0x98, 0x31,
	0x2c, 0x1d, 0x58, 0x0a, 0xe9, 0x5c, 0xf4, 0x58, 0x3c, 0xa8, 0xe8, 0xd1, 0xb1, 0xbc, 0x71, 0x92,
	0xa7, 0xfc, 0xc5, 0xe4, 0x29, 0x6f, 0x41, 0x48, 0xa3, 0x10, 0x31, 0x64, 0x03, 0xd1, 0x7c, 0x25,
	0x9e, 0x3b, 0x1b, 0x34, 0x57, 0xe7, 0xe5, 0x0a, 0x12, 0x69, 0xd8, 0xa2, 0x1f, 0x99, 0x9b, 0x2f,
	0x42, 0x21, 0xff, 0x9a, 0xfa, 0x77, 0x29, 0xd9, 0x16, 0xe5, 0x9f, 0x2e, 0x83, 0x3f, 0x63, 0x66,
	0x34, 0x9a, 0x48, 0x0a, 0x9f, 0x83, 0xc7, 0x3f, 0xa4, 0x7a, 0xbe, 0xfb, 0x21, 0xd5, 0xf3, 0xf3,
	0x0f, 0x29, 0xf0, 0xe9, 0x5e, 0x0a, 0x7c, 0xb1, 0x97, 0x02, 0xdf, 0xee, 0xa5, 0xc0, 0xe3, 0xbd,
	0x14, 0xf8, 0x6e, 0x2f, 0x05, 0xbe, 0xdf, 0x4b, 0x81, 0xa7, 0x7b, 0xa9, 0x9e, 0x9f, 0xf7, 0x52,
	0xe0, 0xdf, 0x7f, 0x4c, 0xf5, 0x3c, 0xf8, 0x31, 0x05, 0x3e, 0xda, 0x2c, 0xe3, 0xea, 0x4e, 0x39,
	0xeb, 0x5c, 0xff, 0x6c, 0x8d, 0xcc, 0xb8, 0x0a, 0x3d, 0x53, 0xd5, 0x71, 0x5d, 0x29, 0x22, 0x3d,
	0xe3, 0x34, 0xcf, 0x54, 0xb7, 0xca, 0x78, 0x06, 0xdd, 0x32, 0x9c, 0xff, 0xaa, 0xea, 0xf4, 0x5f,
	0x64, 0x5b, 0x7d, 0x74, 0x45, 0xf3, 0x7f, 0x0a, 0x00, 0x00, 0xff, 0xff, 0xff, 0xcc, 0x7e, 0x26,
	0x70, 0x36, 0x00, 0x00,
}
