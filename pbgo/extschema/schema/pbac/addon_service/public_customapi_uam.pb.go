// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/pbac/addon_service/public_customapi_uam.proto

// addon service
//
// x-displayName: "Addon Service"
// Additional public APIs for addon_service config object.

package addon_service

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	schema "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/vesenv"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// GetActivationStatusReq
//
// x-displayName: "Get Addon Service activation status"
// Request shape for addon service activation status
type GetActivationStatusReq struct {
	// addon_service
	//
	// x-displayName: "Addon Service"
	// x-example: "addon-service-1"
	// Name of the addon_service
	AddonService string `protobuf:"bytes,1,opt,name=addon_service,json=addonService,proto3" json:"addon_service,omitempty"`
}

func (m *GetActivationStatusReq) Reset()      { *m = GetActivationStatusReq{} }
func (*GetActivationStatusReq) ProtoMessage() {}
func (*GetActivationStatusReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a28b54af30dbfa2c, []int{0}
}
func (m *GetActivationStatusReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetActivationStatusReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetActivationStatusReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetActivationStatusReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetActivationStatusReq.Merge(m, src)
}
func (m *GetActivationStatusReq) XXX_Size() int {
	return m.Size()
}
func (m *GetActivationStatusReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetActivationStatusReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetActivationStatusReq proto.InternalMessageInfo

func (m *GetActivationStatusReq) GetAddonService() string {
	if m != nil {
		return m.AddonService
	}
	return ""
}

// GetActivationStatusResp
//
// x-displayName: "Addon Service activation status Response"
// Response shape for addon service activation status
type GetActivationStatusResp struct {
	// state
	//
	// x-displayName: "State"
	// x-example: "AS_PENDING"
	// current state of addon service subscription.
	State schema.AddonServiceState `protobuf:"varint,1,opt,name=state,proto3,enum=ves.io.schema.AddonServiceState" json:"state,omitempty"`
}

func (m *GetActivationStatusResp) Reset()      { *m = GetActivationStatusResp{} }
func (*GetActivationStatusResp) ProtoMessage() {}
func (*GetActivationStatusResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a28b54af30dbfa2c, []int{1}
}
func (m *GetActivationStatusResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetActivationStatusResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetActivationStatusResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetActivationStatusResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetActivationStatusResp.Merge(m, src)
}
func (m *GetActivationStatusResp) XXX_Size() int {
	return m.Size()
}
func (m *GetActivationStatusResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetActivationStatusResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetActivationStatusResp proto.InternalMessageInfo

func (m *GetActivationStatusResp) GetState() schema.AddonServiceState {
	if m != nil {
		return m.State
	}
	return schema.AS_NONE
}

func init() {
	proto.RegisterType((*GetActivationStatusReq)(nil), "ves.io.schema.pbac.addon_service.GetActivationStatusReq")
	golang_proto.RegisterType((*GetActivationStatusReq)(nil), "ves.io.schema.pbac.addon_service.GetActivationStatusReq")
	proto.RegisterType((*GetActivationStatusResp)(nil), "ves.io.schema.pbac.addon_service.GetActivationStatusResp")
	golang_proto.RegisterType((*GetActivationStatusResp)(nil), "ves.io.schema.pbac.addon_service.GetActivationStatusResp")
}

func init() {
	proto.RegisterFile("ves.io/schema/pbac/addon_service/public_customapi_uam.proto", fileDescriptor_a28b54af30dbfa2c)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/pbac/addon_service/public_customapi_uam.proto", fileDescriptor_a28b54af30dbfa2c)
}

var fileDescriptor_a28b54af30dbfa2c = []byte{
	// 510 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0x31, 0x8b, 0x13, 0x41,
	0x14, 0xde, 0x89, 0x28, 0xdc, 0xa2, 0x16, 0x2b, 0x9c, 0x31, 0x1e, 0x43, 0x88, 0x8d, 0x85, 0x3b,
	0x23, 0x27, 0x88, 0x22, 0x16, 0xd1, 0x42, 0x14, 0x41, 0xcd, 0x81, 0x85, 0x4d, 0x98, 0x9d, 0xbc,
	0xdb, 0x8c, 0x66, 0x77, 0xc6, 0x7d, 0xb3, 0x7b, 0x1e, 0x22, 0xc8, 0xfd, 0x82, 0x03, 0xff, 0x84,
	0x3f, 0x41, 0xb8, 0xe6, 0x3a, 0xad, 0x24, 0x68, 0x73, 0xa5, 0xd9, 0x58, 0x58, 0x5e, 0x69, 0x29,
	0xb7, 0x9b, 0x93, 0x4c, 0x88, 0x1c, 0xd8, 0xcd, 0x9b, 0xef, 0xfb, 0xde, 0xfb, 0x1e, 0xef, 0xf3,
	0xef, 0x14, 0x80, 0x4c, 0x69, 0x8e, 0x72, 0x08, 0x89, 0xe0, 0x26, 0x12, 0x92, 0x8b, 0xc1, 0x40,
	0xa7, 0x7d, 0x84, 0xac, 0x50, 0x12, 0xb8, 0xc9, 0xa3, 0x91, 0x92, 0x7d, 0x99, 0xa3, 0xd5, 0x89,
	0x30, 0xaa, 0x9f, 0x8b, 0x84, 0x99, 0x4c, 0x5b, 0x1d, 0xb4, 0x6b, 0x31, 0xab, 0xc5, 0xec, 0x48,
	0xcc, 0x1c, 0x71, 0x2b, 0x8c, 0x95, 0x1d, 0xe6, 0x11, 0x93, 0x3a, 0xe1, 0xb1, 0x8e, 0x35, 0xaf,
	0x84, 0x51, 0xbe, 0x59, 0x55, 0x55, 0x51, 0xbd, 0xea, 0x86, 0xad, 0xb5, 0x58, 0xeb, 0x78, 0x04,
	0x5c, 0x18, 0xc5, 0x45, 0x9a, 0x6a, 0x2b, 0xac, 0xd2, 0x29, 0xce, 0xd0, 0xcb, 0xae, 0x57, 0x6d,
	0xe6, 0xc1, 0x6b, 0x27, 0x2e, 0x62, 0xb7, 0x0d, 0x1c, 0xb3, 0x2f, 0xb9, 0xec, 0x79, 0x68, 0xcd,
	0x85, 0x0a, 0x31, 0x52, 0x03, 0x61, 0x61, 0x86, 0x76, 0x16, 0x50, 0x40, 0x48, 0x8b, 0x05, 0x2b,
	0xed, 0x05, 0x8e, 0x82, 0xad, 0xbe, 0xc3, 0xe8, 0xdc, 0xf5, 0x57, 0x1f, 0x80, 0xed, 0x4a, 0xab,
	0x8a, 0x6a, 0xc3, 0x0d, 0x2b, 0x6c, 0x8e, 0x3d, 0x78, 0x1d, 0x5c, 0xf1, 0xcf, 0x39, 0xae, 0x9b,
	0xa4, 0x4d, 0xae, 0xae, 0xf4, 0xce, 0x56, 0x9f, 0x1b, 0xf5, 0x5f, 0xe7, 0x99, 0x7f, 0x71, 0xa9,
	0x1c, 0x4d, 0x70, 0xd3, 0x3f, 0x8d, 0x56, 0xd8, 0x5a, 0x77, 0x7e, 0xbd, 0xcd, 0xdc, 0x13, 0x75,
	0xe7, 0xda, 0x1c, 0xa9, 0xa0, 0x57, 0xd3, 0xd7, 0x3f, 0x35, 0xfc, 0x95, 0xfb, 0xd5, 0x89, 0xbb,
	0x4f, 0x1f, 0x06, 0xbf, 0x89, 0x7f, 0x61, 0xc9, 0x84, 0xe0, 0x16, 0x3b, 0xe9, 0xe2, 0x6c, 0xf9,
	0x5e, 0xad, 0xdb, 0xff, 0xa9, 0x44, 0xd3, 0x19, 0x95, 0x9f, 0x9b, 0xab, 0x05, 0x60, 0xa8, 0x74,
	0xb8, 0x05, 0x51, 0x28, 0xa4, 0x04, 0xc4, 0x30, 0x03, 0x31, 0xd8, 0xf9, 0xfe, 0xf3, 0x43, 0xe3,
	0x71, 0xf0, 0x68, 0x16, 0x52, 0x9e, 0x8a, 0x04, 0xd0, 0x08, 0x09, 0xc8, 0x71, 0x1b, 0x2d, 0x24,
	0x6e, 0x04, 0x90, 0xbf, 0x75, 0xea, 0x77, 0x5c, 0xfc, 0x1d, 0x18, 0x62, 0x35, 0xb1, 0x75, 0x7d,
	0x7f, 0x8f, 0x9c, 0xfa, 0xb6, 0x47, 0x3a, 0xae, 0x5f, 0xd7, 0xea, 0x93, 0xe8, 0x25, 0x48, 0xbb,
	0xf3, 0xb5, 0xd9, 0x18, 0x92, 0x7b, 0xbb, 0x64, 0x3c, 0xa1, 0xde, 0xc1, 0x84, 0x7a, 0x87, 0x13,
	0x4a, 0xde, 0x97, 0x94, 0x7c, 0x2c, 0x29, 0xf9, 0x52, 0x52, 0x32, 0x2e, 0x29, 0xf9, 0x51, 0x52,
	0xf2, 0xab, 0xa4, 0xde, 0x61, 0x49, 0xc9, 0xee, 0x94, 0x7a, 0xfb, 0x53, 0x4a, 0xc6, 0x53, 0xea,
	0x1d, 0x4c, 0xa9, 0xf7, 0xe2, 0x79, 0xac, 0xcd, 0xab, 0x98, 0x15, 0x7a, 0x64, 0x21, 0xcb, 0x04,
	0xcb, 0x91, 0x57, 0x8f, 0x4d, 0x9d, 0x25, 0xa1, 0xc9, 0x74, 0xa1, 0x06, 0x90, 0x85, 0xc7, 0x30,
	0x37, 0x51, 0xac, 0x39, 0xbc, 0xb1, 0xb3, 0x60, 0xfd, 0x33, 0xea, 0xd1, 0x99, 0x2a, 0x66, 0x37,
	0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x6d, 0x8a, 0x76, 0xa6, 0xde, 0x03, 0x00, 0x00,
}

func (this *GetActivationStatusReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetActivationStatusReq)
	if !ok {
		that2, ok := that.(GetActivationStatusReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AddonService != that1.AddonService {
		return false
	}
	return true
}
func (this *GetActivationStatusResp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetActivationStatusResp)
	if !ok {
		that2, ok := that.(GetActivationStatusResp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.State != that1.State {
		return false
	}
	return true
}
func (this *GetActivationStatusReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&addon_service.GetActivationStatusReq{")
	s = append(s, "AddonService: "+fmt.Sprintf("%#v", this.AddonService)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetActivationStatusResp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&addon_service.GetActivationStatusResp{")
	s = append(s, "State: "+fmt.Sprintf("%#v", this.State)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringPublicCustomapiUam(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CustomAPIClient is the client API for CustomAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomAPIClient interface {
	// GetActivationStatus
	//
	// x-displayName: "Addon Service Activation Status"
	// Get current subscription status for an addon service. Response can indicate whether the service was successfully subscribed or in pending state.
	GetActivationStatus(ctx context.Context, in *GetActivationStatusReq, opts ...grpc.CallOption) (*GetActivationStatusResp, error)
}

type customAPIClient struct {
	cc *grpc.ClientConn
}

func NewCustomAPIClient(cc *grpc.ClientConn) CustomAPIClient {
	return &customAPIClient{cc}
}

func (c *customAPIClient) GetActivationStatus(ctx context.Context, in *GetActivationStatusReq, opts ...grpc.CallOption) (*GetActivationStatusResp, error) {
	out := new(GetActivationStatusResp)
	err := c.cc.Invoke(ctx, "/ves.io.schema.pbac.addon_service.CustomAPI/GetActivationStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomAPIServer is the server API for CustomAPI service.
type CustomAPIServer interface {
	// GetActivationStatus
	//
	// x-displayName: "Addon Service Activation Status"
	// Get current subscription status for an addon service. Response can indicate whether the service was successfully subscribed or in pending state.
	GetActivationStatus(context.Context, *GetActivationStatusReq) (*GetActivationStatusResp, error)
}

// UnimplementedCustomAPIServer can be embedded to have forward compatible implementations.
type UnimplementedCustomAPIServer struct {
}

func (*UnimplementedCustomAPIServer) GetActivationStatus(ctx context.Context, req *GetActivationStatusReq) (*GetActivationStatusResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActivationStatus not implemented")
}

func RegisterCustomAPIServer(s *grpc.Server, srv CustomAPIServer) {
	s.RegisterService(&_CustomAPI_serviceDesc, srv)
}

func _CustomAPI_GetActivationStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActivationStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).GetActivationStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.pbac.addon_service.CustomAPI/GetActivationStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).GetActivationStatus(ctx, req.(*GetActivationStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ves.io.schema.pbac.addon_service.CustomAPI",
	HandlerType: (*CustomAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetActivationStatus",
			Handler:    _CustomAPI_GetActivationStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ves.io/schema/pbac/addon_service/public_customapi_uam.proto",
}

func (m *GetActivationStatusReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetActivationStatusReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetActivationStatusReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AddonService) > 0 {
		i -= len(m.AddonService)
		copy(dAtA[i:], m.AddonService)
		i = encodeVarintPublicCustomapiUam(dAtA, i, uint64(len(m.AddonService)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetActivationStatusResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetActivationStatusResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetActivationStatusResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.State != 0 {
		i = encodeVarintPublicCustomapiUam(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintPublicCustomapiUam(dAtA []byte, offset int, v uint64) int {
	offset -= sovPublicCustomapiUam(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetActivationStatusReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AddonService)
	if l > 0 {
		n += 1 + l + sovPublicCustomapiUam(uint64(l))
	}
	return n
}

func (m *GetActivationStatusResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != 0 {
		n += 1 + sovPublicCustomapiUam(uint64(m.State))
	}
	return n
}

func sovPublicCustomapiUam(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPublicCustomapiUam(x uint64) (n int) {
	return sovPublicCustomapiUam(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *GetActivationStatusReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetActivationStatusReq{`,
		`AddonService:` + fmt.Sprintf("%v", this.AddonService) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetActivationStatusResp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetActivationStatusResp{`,
		`State:` + fmt.Sprintf("%v", this.State) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringPublicCustomapiUam(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *GetActivationStatusReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomapiUam
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetActivationStatusReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetActivationStatusReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddonService", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapiUam
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomapiUam
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomapiUam
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddonService = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomapiUam(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomapiUam
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomapiUam
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetActivationStatusResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomapiUam
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetActivationStatusResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetActivationStatusResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapiUam
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= schema.AddonServiceState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomapiUam(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomapiUam
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomapiUam
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPublicCustomapiUam(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPublicCustomapiUam
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPublicCustomapiUam
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPublicCustomapiUam
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPublicCustomapiUam
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPublicCustomapiUam
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPublicCustomapiUam
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPublicCustomapiUam        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPublicCustomapiUam          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPublicCustomapiUam = fmt.Errorf("proto: unexpected end of group")
)
