// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/app_type/custom_api.proto

/*
	Package app_type is a generated protocol buffer package.

	app type object

	x-displayName: "App Type"
	App Type object defines a application profile type from an advanced monitoring/security point of view.
	An App type is a set of (micro) services that interact with one another and function as an application.
	Services can be made members of a particular AppType set by adding label ves.io/app_type=app_type.metadata.name to services.
	App type object is the profile for one such application label. One can define various AI/ML features that can
	be enabled for a given application in this object. All services in a given namespace that are labeled with
	same ves.io/app_type label are assumed to be a single application. In a different namespace as two different
	instances of same application.
	app_type object is recommended per tenant and present only in shared namespace.
	This way AI/ML modelled developed for a given application can be shared across namespaces or deployments.
	app_setting object can be used to enable a app_type monitoring profile in a given namespace.

	It is generated from these files:
		ves.io/schema/app_type/custom_api.proto
		ves.io/schema/app_type/object.proto
		ves.io/schema/app_type/public_crudapi.proto
		ves.io/schema/app_type/types.proto

	It has these top-level messages:
		APIEndpointsReq
		SwaggerSpecReq
		SwaggerSpecRsp
		ServiceAPIEndpointsReq
		APIEndpointsRsp
		APIEndpointPDFReq
		ServiceAPIEndpointPDFReq
		APIEndpointPDFRsp
		OverridesReq
		OverridesRsp
		OverridePushReq
		OverridePushRsp
		OverridePopReq
		OverridePopRsp
		APIEndpointLearntSchemaReq
		APIEndpointLearntSchemaRsp
		Object
		SpecType
		StatusObject
		CreateRequest
		CreateResponse
		ReplaceRequest
		ReplaceResponse
		GetRequest
		GetResponse
		ListRequest
		ListResponseItem
		ListResponse
		DeleteRequest
		Feature
		BusinessLogicMarkupSetting
		GlobalSpecType
		CreateSpecType
		ReplaceSpecType
		GetSpecType
		APIEPDynExample
		APIEPInfo
		PDFSpec
		PDFStat
		APIEPPDFInfo
		OverrideInfo
*/
package app_type

import proto "github.com/gogo/protobuf/proto"
import golang_proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "github.com/gogo/googleapis/google/api"
import google_protobuf1 "github.com/gogo/protobuf/types"
import _ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
import _ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
import _ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/vesenv"

import strings "strings"
import reflect "reflect"

import context "golang.org/x/net/context"
import grpc "google.golang.org/grpc"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// API endpoints GET request
//
// x-displayName: "API Endpoints Request"
// Request shape for GET API endpoints API
type APIEndpointsReq struct {
	// App Type
	//
	// x-displayName: "App Type"
	// x-example: "blogging-app"
	// App Type for current request
	AppTypeName string `protobuf:"bytes,1,opt,name=app_type_name,json=appTypeName,proto3" json:"app_type_name,omitempty"`
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "shared"
	// Namespace of the App type for current request
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Api Endpoint Info Request
	//
	// x-displayName: "Api Endpoint Info Request"
	// List of additional things that needs to be sent as part of the request
	ApiEndpointInfoRequest []ApiEndpointInfoRequest `protobuf:"varint,3,rep,packed,name=api_endpoint_info_request,json=apiEndpointInfoRequest,enum=ves.io.schema.app_type.ApiEndpointInfoRequest" json:"api_endpoint_info_request,omitempty"`
}

func (m *APIEndpointsReq) Reset()                    { *m = APIEndpointsReq{} }
func (*APIEndpointsReq) ProtoMessage()               {}
func (*APIEndpointsReq) Descriptor() ([]byte, []int) { return fileDescriptorCustomApi, []int{0} }

func (m *APIEndpointsReq) GetAppTypeName() string {
	if m != nil {
		return m.AppTypeName
	}
	return ""
}

func (m *APIEndpointsReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *APIEndpointsReq) GetApiEndpointInfoRequest() []ApiEndpointInfoRequest {
	if m != nil {
		return m.ApiEndpointInfoRequest
	}
	return nil
}

// Swagger spec request
//
// x-displayName: "Swagger spec Request"
// Request shape for GET Swagger Spec API
type SwaggerSpecReq struct {
	// App Type
	//
	// x-displayName: "App Type"
	// x-example: "blogging-app"
	// App Type for current request
	AppTypeName string `protobuf:"bytes,1,opt,name=app_type_name,json=appTypeName,proto3" json:"app_type_name,omitempty"`
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "shared"
	// Namespace of the App type for current request
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (m *SwaggerSpecReq) Reset()                    { *m = SwaggerSpecReq{} }
func (*SwaggerSpecReq) ProtoMessage()               {}
func (*SwaggerSpecReq) Descriptor() ([]byte, []int) { return fileDescriptorCustomApi, []int{1} }

func (m *SwaggerSpecReq) GetAppTypeName() string {
	if m != nil {
		return m.AppTypeName
	}
	return ""
}

func (m *SwaggerSpecReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

// API endpoint PDF request
//
// x-displayName: "PDF Request"
// shape of request to get PDF for a given API endpoint.
type SwaggerSpecRsp struct {
	// Swagger Spec
	//
	// x-displayName: "Swagger Spec"
	// x-example: "{\"info\": {\"description\": \"\",\"title\": \"\",\"version\": \"\"},\"paths\": {\"\/api\/Addresss\": {\"post\": {\"consumes\": [\"application\/json\"],\"description\": \"Swagger auto-generated from learnt schema\",\"parameters\": [{\"description\": \"\",\"in\": \"query\",\"name\": \"test1\",\"type\": \"string\"},{\"description\": \"\",\"in\": \"query\",\"items\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"},\"name\": \"test\",\"type\": \"array\"},{\"description\": \"\",\"in\": \"body\",\"name\": \"body\",\"schema\": {\"example\": [\"{\\\"country\\\": \\\"dummy\\\", \\\"fullName\\\": \\\"dummy\\\", \\\"mobileNum\\\": 1234567890, \\\"zipCode\\\": \\\"121\\\", \\\"streetAddress\\\": \\\"dummy\\\", \\\"city\\\": \\\"dummy\\\", \\\"state\\\": \\\"dummy\\\", \\\"test\\\": \\\"Hello, \\\\u4e16\\\\u754c\\\", \\\"abc\\\": \\\"def\\\"}\"],\"properties\": {\"abc\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"city\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"country\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"fullName\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"mobileNum\": {\"type\": \"integer\"},\"state\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"streetAddress\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"test\": {\"type\": \"string\"},\"zipCode\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"}},\"required\": [\"fullName\",\"mobileNum\",\"city\",\"test\",\"zipCode\",\"state\",\"streetAddress\",\"country\",\"abc\"],\"type\": \"object\"}}],\"responses\": {\"200\": {\"description\": \"\"}}}},\"\/api\/Cards\": {\"post\": {\"consumes\": [\"application\/json\"],\"description\": \"Swagger auto-generated from learnt schema\",\"parameters\": [{\"description\": \"\",\"in\": \"body\",\"name\": \"body\",\"schema\": {\"example\": [\"{\\\"fullName\\\": \\\"dummy\\\", \\\"cardNum\\\": 0, \\\"expMonth\\\": \\\"0\\\", \\\"expYear\\\": \\\"0\\\"}\"],\"properties\": {\"cardNum\": {\"type\": \"integer\"},\"expMonth\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"},\"expYear\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"},\"fullName\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"}},\"required\": [\"expMonth\",\"expYear\",\"fullName\",\"cardNum\"],\"type\": \"object\"}}],\"responses\": {\"200\": {\"description\": \"\"}}}},\"\/rest\/basket\/6\/checkout\": {\"post\": {\"consumes\": [\"application\/json\"],\"description\": \"Swagger auto-generated from learnt schema\",\"parameters\": [{\"description\": \"\",\"in\": \"body\",\"name\": \"body\",\"schema\": {\"example\": [\"{\\\"couponData\\\": \\\"MTIzNDU2Nzg5MC0xNTg3MzM3MjAwMDAw\\\", \\\"orderDetails\\\": {\\\"paymentId\\\": \\\"9792\\\", \\\"addressId\\\": \\\"21189\\\", \\\"deliveryMethodId\\\": \\\"1\\\"}}\",\"{\\\"couponData\\\": \\\"MTIzNDU2Nzg5MC0xNTg3MzM3MjAwMDAw\\\", \\\"orderDetails\\\": {\\\"paymentId\\\": \\\"9814\\\", \\\"addressId\\\": \\\"21409\\\", \\\"deliveryMethodId\\\": \\\"1\\\"}}\",\"{\\\"couponData\\\": \\\"MTIzNDU2Nzg5MC0xNTg3MzM3MjAwMDAw\\\", \\\"orderDetails\\\": {\\\"paymentId\\\": \\\"9822\\\", \\\"addressId\\\": \\\"21489\\\", \\\"deliveryMethodId\\\": \\\"1\\\"}}\",\"{\\\"couponData\\\": \\\"MTIzNDU2Nzg5MC0xNTg3MzM3MjAwMDAw\\\", \\\"orderDetails\\\": {\\\"paymentId\\\": \\\"9793\\\", \\\"addressId\\\": \\\"21199\\\", \\\"deliveryMethodId\\\": \\\"1\\\"}}\",\"{\\\"couponData\\\": \\\"MTIzNDU2Nzg5MC0xNTg3MzM3MjAwMDAw\\\", \\\"orderDetails\\\": {\\\"paymentId\\\": \\\"9817\\\", \\\"addressId\\\": \\\"21439\\\", \\\"deliveryMethodId\\\": \\\"1\\\"}}\"],\"properties\": {\"couponData\": {\"type\": \"string\"},\"orderDetails\": {\"properties\": {\"addressId\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"},\"deliveryMethodId\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"},\"paymentId\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"}},\"required\": [\"addressId\",\"paymentId\",\"deliveryMethodId\"],\"type\": \"object\"}},\"required\": [\"orderDetails\",\"couponData\"],\"type\": \"object\"}}],\"responses\": {\"200\": {\"description\": \"\"}}}},\"\/rest\/products\/1\/reviews\": {\"put\": {\"consumes\": [\"application\/json\"],\"description\": \"Swagger auto-generated from learnt schema\",\"parameters\": [],\"responses\": {\"200\": {\"description\": \"\"}}}},\"\/rest\/user\/login\": {\"post\": {\"consumes\": [\"application\/json\"],\"description\": \"Swagger auto-generated from learnt schema\",\"parameters\": [{\"description\": \"\",\"in\": \"body\",\"name\": \"body\",\"schema\": {\"example\": [\"{\\\"email\\\":\\\"dummy0@dummy.com\\\",\\\"password\\\":\\\"redacted\\\",\\\"test\\\":\\\"Hello, \u4E16\u754C\\\"}\",\"{\\\"email\\\":\\\"dummy1@dummy.com\\\",\\\"password\\\":\\\"redacted\\\",\\\"test\\\":\\\"Hello, \u4E16\u754C\\\"}\",\"{\\\"email\\\":\\\"dummy2@dummy.com\\\",\\\"password\\\":\\\"redacted\\\",\\\"test\\\":\\\"Hello, \u4E16\u754C\\\"}\",\"{\\\"email\\\":\\\"dummy3@dummy.com\\\",\\\"password\\\":\\\"redacted\\\",\\\"test\\\":\\\"Hello, \u4E16\u754C\\\"}\"],\"properties\": {\"email\": {\"description\": \"Email\",\"pattern\": \".+@.+\",\"type\": \"string\",\"x-pii\": {\"examples\": [\"dummy0@dummy.com\",\"dummy1@dummy.com\",\"dummy2@dummy.com\",\"dummy3@dummy.com\"]}},\"password\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"test\": {\"type\": \"string\"}},\"required\": [\"email\",\"test\",\"password\"],\"type\": \"object\"}}],\"responses\": {\"200\": {\"description\": \"\"}}}}},\"schemes\": [\"https\",\"http\"],\"swagger\": \"2.0\"}"
	// Swagger spec json encoded string for current request
	SwaggerSpec string `protobuf:"bytes,1,opt,name=swagger_spec,json=swaggerSpec,proto3" json:"swagger_spec,omitempty"`
}

func (m *SwaggerSpecRsp) Reset()                    { *m = SwaggerSpecRsp{} }
func (*SwaggerSpecRsp) ProtoMessage()               {}
func (*SwaggerSpecRsp) Descriptor() ([]byte, []int) { return fileDescriptorCustomApi, []int{2} }

func (m *SwaggerSpecRsp) GetSwaggerSpec() string {
	if m != nil {
		return m.SwaggerSpec
	}
	return ""
}

// API endpoints per service GET request
//
// x-displayName: "Service API Endpoints Request"
// Request shape for GET Service API endpoints API
type ServiceAPIEndpointsReq struct {
	// App Type
	//
	// x-displayName: "App Type"
	// x-example: "blogging-app"
	// App Type for current request
	AppTypeName string `protobuf:"bytes,1,opt,name=app_type_name,json=appTypeName,proto3" json:"app_type_name,omitempty"`
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "shared"
	// Namespace of the App type for current request
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Service
	//
	// x-displayName: "Service Name"
	// x-example: "N:public or S:productpage"
	// Identifies the destination service
	ServiceName string `protobuf:"bytes,3,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Api Endpoint Info Request
	//
	// x-displayName: "Api Endpoint Info Request"
	// List of additional things that needs to be sent as part of the request
	ApiEndpointInfoRequest []ApiEndpointInfoRequest `protobuf:"varint,4,rep,packed,name=api_endpoint_info_request,json=apiEndpointInfoRequest,enum=ves.io.schema.app_type.ApiEndpointInfoRequest" json:"api_endpoint_info_request,omitempty"`
}

func (m *ServiceAPIEndpointsReq) Reset()                    { *m = ServiceAPIEndpointsReq{} }
func (*ServiceAPIEndpointsReq) ProtoMessage()               {}
func (*ServiceAPIEndpointsReq) Descriptor() ([]byte, []int) { return fileDescriptorCustomApi, []int{3} }

func (m *ServiceAPIEndpointsReq) GetAppTypeName() string {
	if m != nil {
		return m.AppTypeName
	}
	return ""
}

func (m *ServiceAPIEndpointsReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ServiceAPIEndpointsReq) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *ServiceAPIEndpointsReq) GetApiEndpointInfoRequest() []ApiEndpointInfoRequest {
	if m != nil {
		return m.ApiEndpointInfoRequest
	}
	return nil
}

// API endpoints GET response
//
// x-displayName: "API Endpoints Response"
// Response shape for GET API endpoints API. It is list of API endpoints discovered
type APIEndpointsRsp struct {
	// API endpoints list
	//
	// x-displayName: "API Endpoints"
	// list of API endpoints discovered
	ApiepList []*APIEPInfo `protobuf:"bytes,1,rep,name=apiep_list,json=apiepList" json:"apiep_list,omitempty"`
}

func (m *APIEndpointsRsp) Reset()                    { *m = APIEndpointsRsp{} }
func (*APIEndpointsRsp) ProtoMessage()               {}
func (*APIEndpointsRsp) Descriptor() ([]byte, []int) { return fileDescriptorCustomApi, []int{4} }

func (m *APIEndpointsRsp) GetApiepList() []*APIEPInfo {
	if m != nil {
		return m.ApiepList
	}
	return nil
}

// API endpoint PDF request
//
// x-displayName: "PDF Request"
// shape of request to get PDF for a given API endpoint.
type APIEndpointPDFReq struct {
	// App Type
	//
	// x-displayName: "App Type"
	// x-example: "blogging-app"
	// App Type for current request
	AppTypeName string `protobuf:"bytes,1,opt,name=app_type_name,json=appTypeName,proto3" json:"app_type_name,omitempty"`
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "shared"
	// Namespace of the App type for current request
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Discovered API URL
	//
	// x-displayName: "API URL"
	// x-example: "value"
	// API endpoint for which PDFs are requested.
	CollapsedUrl string `protobuf:"bytes,3,opt,name=collapsed_url,json=collapsedUrl,proto3" json:"collapsed_url,omitempty"`
	// Method of current API URL
	//
	// x-displayName: "Method"
	// x-example: "value"
	// method of API endpoint for which PDFs are requested.
	Method string `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
}

func (m *APIEndpointPDFReq) Reset()                    { *m = APIEndpointPDFReq{} }
func (*APIEndpointPDFReq) ProtoMessage()               {}
func (*APIEndpointPDFReq) Descriptor() ([]byte, []int) { return fileDescriptorCustomApi, []int{5} }

func (m *APIEndpointPDFReq) GetAppTypeName() string {
	if m != nil {
		return m.AppTypeName
	}
	return ""
}

func (m *APIEndpointPDFReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *APIEndpointPDFReq) GetCollapsedUrl() string {
	if m != nil {
		return m.CollapsedUrl
	}
	return ""
}

func (m *APIEndpointPDFReq) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

// Service API endpoint PDF request
//
// x-displayName: "Per Service API Endpoint PDF Request"
// shape of request to get PDF for a given API endpoint.
type ServiceAPIEndpointPDFReq struct {
	// App Type
	//
	// x-displayName: "App Type"
	// x-example: "blogging-app"
	// App Type for current request
	AppTypeName string `protobuf:"bytes,1,opt,name=app_type_name,json=appTypeName,proto3" json:"app_type_name,omitempty"`
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "shared"
	// Namespace of the App type for current request
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Service
	//
	// x-displayName: "Service Name"
	// x-example: "N:public or S:productpage"
	// Identifies the destination service
	ServiceName string `protobuf:"bytes,3,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Discovered API URL
	//
	// x-displayName: "API URL"
	// x-example: "value"
	// API endpoint for which PDFs are requested.
	CollapsedUrl string `protobuf:"bytes,4,opt,name=collapsed_url,json=collapsedUrl,proto3" json:"collapsed_url,omitempty"`
	// Method of current API URL
	//
	// x-displayName: "Method"
	// x-example: "value"
	// method of API endpoint for which PDFs are requested.
	Method string `protobuf:"bytes,5,opt,name=method,proto3" json:"method,omitempty"`
}

func (m *ServiceAPIEndpointPDFReq) Reset()      { *m = ServiceAPIEndpointPDFReq{} }
func (*ServiceAPIEndpointPDFReq) ProtoMessage() {}
func (*ServiceAPIEndpointPDFReq) Descriptor() ([]byte, []int) {
	return fileDescriptorCustomApi, []int{6}
}

func (m *ServiceAPIEndpointPDFReq) GetAppTypeName() string {
	if m != nil {
		return m.AppTypeName
	}
	return ""
}

func (m *ServiceAPIEndpointPDFReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ServiceAPIEndpointPDFReq) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *ServiceAPIEndpointPDFReq) GetCollapsedUrl() string {
	if m != nil {
		return m.CollapsedUrl
	}
	return ""
}

func (m *ServiceAPIEndpointPDFReq) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

// API endpoint PDF response
//
// x-displayName: "PDF Response"
// shape of response to get PDF for a given API endpoint.
type APIEndpointPDFRsp struct {
	// PDF data
	//
	// x-displayName: "PDF Data"
	// PDF data for request API endpoint.
	PdfInfo *APIEPPDFInfo `protobuf:"bytes,1,opt,name=pdf_info,json=pdfInfo" json:"pdf_info,omitempty"`
}

func (m *APIEndpointPDFRsp) Reset()                    { *m = APIEndpointPDFRsp{} }
func (*APIEndpointPDFRsp) ProtoMessage()               {}
func (*APIEndpointPDFRsp) Descriptor() ([]byte, []int) { return fileDescriptorCustomApi, []int{7} }

func (m *APIEndpointPDFRsp) GetPdfInfo() *APIEPPDFInfo {
	if m != nil {
		return m.PdfInfo
	}
	return nil
}

// Get API endpoint override request.
//
// x-displayName: "Get Override Request"
// shape of request to get override for API endpoints.
type OverridesReq struct {
	// App Type
	//
	// x-displayName: "App Type"
	// x-example: "blogging-app"
	// App Type for current request
	AppTypeName string `protobuf:"bytes,1,opt,name=app_type_name,json=appTypeName,proto3" json:"app_type_name,omitempty"`
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "shared"
	// Namespace of the App type for current request
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (m *OverridesReq) Reset()                    { *m = OverridesReq{} }
func (*OverridesReq) ProtoMessage()               {}
func (*OverridesReq) Descriptor() ([]byte, []int) { return fileDescriptorCustomApi, []int{8} }

func (m *OverridesReq) GetAppTypeName() string {
	if m != nil {
		return m.AppTypeName
	}
	return ""
}

func (m *OverridesReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

// Get API endpoint override response
//
// x-displayName: "Get Override Response"
// shape of response to get override for API endpoints
type OverridesRsp struct {
	// List of override
	//
	// x-displayName: "Override"
	// List of all override applied to API endpoints of requested App Type
	OverrideList []*OverrideInfo `protobuf:"bytes,1,rep,name=override_list,json=overrideList" json:"override_list,omitempty"`
}

func (m *OverridesRsp) Reset()                    { *m = OverridesRsp{} }
func (*OverridesRsp) ProtoMessage()               {}
func (*OverridesRsp) Descriptor() ([]byte, []int) { return fileDescriptorCustomApi, []int{9} }

func (m *OverridesRsp) GetOverrideList() []*OverrideInfo {
	if m != nil {
		return m.OverrideList
	}
	return nil
}

// Add API endpoint override request
//
// x-displayName: "Add Override Request"
// Shape of request to add override for API endpoints
type OverridePushReq struct {
	// App Type
	//
	// x-displayName: "App Type"
	// x-example: "blogging-app"
	// App Type for current request
	AppTypeName string `protobuf:"bytes,1,opt,name=app_type_name,json=appTypeName,proto3" json:"app_type_name,omitempty"`
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "shared"
	// Namespace of the App type for current request
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Override Data
	//
	// x-displayName: "Override Data"
	// Override data to be added
	OverrideInfo *OverrideInfo `protobuf:"bytes,3,opt,name=override_info,json=overrideInfo" json:"override_info,omitempty"`
}

func (m *OverridePushReq) Reset()                    { *m = OverridePushReq{} }
func (*OverridePushReq) ProtoMessage()               {}
func (*OverridePushReq) Descriptor() ([]byte, []int) { return fileDescriptorCustomApi, []int{10} }

func (m *OverridePushReq) GetAppTypeName() string {
	if m != nil {
		return m.AppTypeName
	}
	return ""
}

func (m *OverridePushReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *OverridePushReq) GetOverrideInfo() *OverrideInfo {
	if m != nil {
		return m.OverrideInfo
	}
	return nil
}

// Add API endpoint override response
//
// x-displayName: "Add Override Response"
// Shape of response to add override for API endpoints
type OverridePushRsp struct {
	// Status
	//
	// x-displayName: "Status"
	// x-example: "true"
	// Status of the add operation (sucess or fail)
	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// Message
	//
	// x-displayName: "Message"
	// x-example: "Override Push Successful"
	// Message string for the status of add operation
	StatusMsg string `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3" json:"status_msg,omitempty"`
}

func (m *OverridePushRsp) Reset()                    { *m = OverridePushRsp{} }
func (*OverridePushRsp) ProtoMessage()               {}
func (*OverridePushRsp) Descriptor() ([]byte, []int) { return fileDescriptorCustomApi, []int{11} }

func (m *OverridePushRsp) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *OverridePushRsp) GetStatusMsg() string {
	if m != nil {
		return m.StatusMsg
	}
	return ""
}

// Remove API endpoint override request
//
// x-displayName: "Remove Override Request"
// Shape of remove to remove override for API endpoints
type OverridePopReq struct {
	// App Type
	//
	// x-displayName: "App Type"
	// x-example: "blogging-app"
	// App Type for current request
	AppTypeName string `protobuf:"bytes,1,opt,name=app_type_name,json=appTypeName,proto3" json:"app_type_name,omitempty"`
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "shared"
	// Namespace of the App type for current request
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (m *OverridePopReq) Reset()                    { *m = OverridePopReq{} }
func (*OverridePopReq) ProtoMessage()               {}
func (*OverridePopReq) Descriptor() ([]byte, []int) { return fileDescriptorCustomApi, []int{12} }

func (m *OverridePopReq) GetAppTypeName() string {
	if m != nil {
		return m.AppTypeName
	}
	return ""
}

func (m *OverridePopReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

// Add API endpoint override response
//
// x-displayName: "Add Override Response"
// Shape of response to add override for API endpoints
type OverridePopRsp struct {
	// Status
	//
	// x-displayName: "Status"
	// x-example: "true"
	// Status of the add operation (sucess or fail)
	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// Message
	//
	// x-displayName: "Message"
	// x-example: "Override Pop Successful"
	// Message string for the status of add operation
	StatusMsg string `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3" json:"status_msg,omitempty"`
}

func (m *OverridePopRsp) Reset()                    { *m = OverridePopRsp{} }
func (*OverridePopRsp) ProtoMessage()               {}
func (*OverridePopRsp) Descriptor() ([]byte, []int) { return fileDescriptorCustomApi, []int{13} }

func (m *OverridePopRsp) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *OverridePopRsp) GetStatusMsg() string {
	if m != nil {
		return m.StatusMsg
	}
	return ""
}

// API endpoint Learnt Schema request
//
// x-displayName: "Learnt Schema Request"
// shape of request to get learnt schema request for a given API endpoint.
type APIEndpointLearntSchemaReq struct {
	// App Type
	//
	// x-displayName: "App Type"
	// x-example: "blogging-app"
	// App Type for current request
	AppTypeName string `protobuf:"bytes,1,opt,name=app_type_name,json=appTypeName,proto3" json:"app_type_name,omitempty"`
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "shared"
	// Namespace of the App type for current request
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Discovered API URL
	//
	// x-displayName: "API URL"
	// x-example: "value"
	// API endpoint for which PDFs are requested.
	CollapsedUrl string `protobuf:"bytes,3,opt,name=collapsed_url,json=collapsedUrl,proto3" json:"collapsed_url,omitempty"`
	// Method of current API URL
	//
	// x-displayName: "Method"
	// x-example: "value"
	// method of API endpoint for which PDFs are requested.
	Method string `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
}

func (m *APIEndpointLearntSchemaReq) Reset()      { *m = APIEndpointLearntSchemaReq{} }
func (*APIEndpointLearntSchemaReq) ProtoMessage() {}
func (*APIEndpointLearntSchemaReq) Descriptor() ([]byte, []int) {
	return fileDescriptorCustomApi, []int{14}
}

func (m *APIEndpointLearntSchemaReq) GetAppTypeName() string {
	if m != nil {
		return m.AppTypeName
	}
	return ""
}

func (m *APIEndpointLearntSchemaReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *APIEndpointLearntSchemaReq) GetCollapsedUrl() string {
	if m != nil {
		return m.CollapsedUrl
	}
	return ""
}

func (m *APIEndpointLearntSchemaReq) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

// API endpoint Req Body Schema response
//
// x-displayName: "Req Body Schema Response"
// shape of response to get req body schema for a given API endpoint.
type APIEndpointLearntSchemaRsp struct {
	// Learnt Schema
	//
	// x-displayName: "Learnt Schema"
	// x-example: "{\"example\":\"{\\\"country\\\": \\\"dummy\\\", \\\"fullName\\\": \\\"dummy\\\", \\\"mobileNum\\\": 1234567890, \\\"zipCode\\\": \\\"121\\\", \\\"streetAddress\\\": \\\"dummy\\\", \\\"city\\\": \\\"dummy\\\", \\\"state\\\": \\\"dummy\\\", \\\"test\\\": \\\"Hello, \\\\u4e16\\\\u754c\\\"}\",\"properties\":{\"city\":{\"description\":\"Word\",\"pattern\":\"[a-z0-9-]+\",\"type\":\"string\"},\"country\":{\"description\":\"Word\",\"pattern\":\"[a-z0-9-]+\",\"type\":\"string\"},\"fullName\":{\"description\":\"Word\",\"pattern\":\"[a-z0-9-]+\",\"type\":\"string\"},\"mobileNum\":{\"type\":\"integer\"},\"state\":{\"description\":\"Word\",\"pattern\":\"[a-z0-9-]+\",\"type\":\"string\"},\"streetAddress\":{\"description\":\"Word\",\"pattern\":\"[a-z0-9-]+\",\"type\":\"string\"},\"test\":{\"type\":\"string\"},\"zipCode\":{\"description\":\"Integer\",\"pattern\":\"-?\\\\d+\",\"type\":\"string\"}},\"required\":[\"fullName\",\"mobileNum\",\"city\",\"test\",\"zipCode\",\"state\",\"streetAddress\",\"country\"],\"type\":\"object\"}"
	// Learnt Schema for request API endpoint.
	LearntSchema string `protobuf:"bytes,1,opt,name=learnt_schema,json=learntSchema,proto3" json:"learnt_schema,omitempty"`
	// Swagger Spec
	//
	// x-displayName: "Swagger Spec"
	// x-example: "{\"info\":{\"description\":\"\",\"title\":\"\",\"version\":\"\"},\"paths\":{\"\/api\/Addresss\":{\"get\":{\"consumes\":[\"application\/json\"],\"description\":\"Swagger auto-generated from learnt schema\",\"parameters\":[{\"description\":\"\",\"in\":\"query\",\"name\":\"test\",\"type\":\"string\"},{\"description\":\"\",\"in\":\"query\",\"name\":\"test1\",\"type\":\"string\"}],\"responses\":{\"200\":{\"description\":\"\"}}}}},\"schemes\":[\"https\",\"http\"],\"swagger\":\"2.0\"}"
	// Swagger spec for request API endpoint.
	SwaggerSpec string `protobuf:"bytes,2,opt,name=swagger_spec,json=swaggerSpec,proto3" json:"swagger_spec,omitempty"`
	// Last Updated Time
	//
	// x-displayName: "Last Updated Time"
	// x-example: "2021-01-22 15:46:23.767649"
	// Last Updated Time for request API endpoint. The time updated when the APIEP file is uploaded to Azure/AWS.
	LastUpdatedTime *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=last_updated_time,json=lastUpdatedTime" json:"last_updated_time,omitempty"`
}

func (m *APIEndpointLearntSchemaRsp) Reset()      { *m = APIEndpointLearntSchemaRsp{} }
func (*APIEndpointLearntSchemaRsp) ProtoMessage() {}
func (*APIEndpointLearntSchemaRsp) Descriptor() ([]byte, []int) {
	return fileDescriptorCustomApi, []int{15}
}

func (m *APIEndpointLearntSchemaRsp) GetLearntSchema() string {
	if m != nil {
		return m.LearntSchema
	}
	return ""
}

func (m *APIEndpointLearntSchemaRsp) GetSwaggerSpec() string {
	if m != nil {
		return m.SwaggerSpec
	}
	return ""
}

func (m *APIEndpointLearntSchemaRsp) GetLastUpdatedTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.LastUpdatedTime
	}
	return nil
}

func init() {
	proto.RegisterType((*APIEndpointsReq)(nil), "ves.io.schema.app_type.APIEndpointsReq")
	golang_proto.RegisterType((*APIEndpointsReq)(nil), "ves.io.schema.app_type.APIEndpointsReq")
	proto.RegisterType((*SwaggerSpecReq)(nil), "ves.io.schema.app_type.SwaggerSpecReq")
	golang_proto.RegisterType((*SwaggerSpecReq)(nil), "ves.io.schema.app_type.SwaggerSpecReq")
	proto.RegisterType((*SwaggerSpecRsp)(nil), "ves.io.schema.app_type.SwaggerSpecRsp")
	golang_proto.RegisterType((*SwaggerSpecRsp)(nil), "ves.io.schema.app_type.SwaggerSpecRsp")
	proto.RegisterType((*ServiceAPIEndpointsReq)(nil), "ves.io.schema.app_type.ServiceAPIEndpointsReq")
	golang_proto.RegisterType((*ServiceAPIEndpointsReq)(nil), "ves.io.schema.app_type.ServiceAPIEndpointsReq")
	proto.RegisterType((*APIEndpointsRsp)(nil), "ves.io.schema.app_type.APIEndpointsRsp")
	golang_proto.RegisterType((*APIEndpointsRsp)(nil), "ves.io.schema.app_type.APIEndpointsRsp")
	proto.RegisterType((*APIEndpointPDFReq)(nil), "ves.io.schema.app_type.APIEndpointPDFReq")
	golang_proto.RegisterType((*APIEndpointPDFReq)(nil), "ves.io.schema.app_type.APIEndpointPDFReq")
	proto.RegisterType((*ServiceAPIEndpointPDFReq)(nil), "ves.io.schema.app_type.ServiceAPIEndpointPDFReq")
	golang_proto.RegisterType((*ServiceAPIEndpointPDFReq)(nil), "ves.io.schema.app_type.ServiceAPIEndpointPDFReq")
	proto.RegisterType((*APIEndpointPDFRsp)(nil), "ves.io.schema.app_type.APIEndpointPDFRsp")
	golang_proto.RegisterType((*APIEndpointPDFRsp)(nil), "ves.io.schema.app_type.APIEndpointPDFRsp")
	proto.RegisterType((*OverridesReq)(nil), "ves.io.schema.app_type.OverridesReq")
	golang_proto.RegisterType((*OverridesReq)(nil), "ves.io.schema.app_type.OverridesReq")
	proto.RegisterType((*OverridesRsp)(nil), "ves.io.schema.app_type.OverridesRsp")
	golang_proto.RegisterType((*OverridesRsp)(nil), "ves.io.schema.app_type.OverridesRsp")
	proto.RegisterType((*OverridePushReq)(nil), "ves.io.schema.app_type.OverridePushReq")
	golang_proto.RegisterType((*OverridePushReq)(nil), "ves.io.schema.app_type.OverridePushReq")
	proto.RegisterType((*OverridePushRsp)(nil), "ves.io.schema.app_type.OverridePushRsp")
	golang_proto.RegisterType((*OverridePushRsp)(nil), "ves.io.schema.app_type.OverridePushRsp")
	proto.RegisterType((*OverridePopReq)(nil), "ves.io.schema.app_type.OverridePopReq")
	golang_proto.RegisterType((*OverridePopReq)(nil), "ves.io.schema.app_type.OverridePopReq")
	proto.RegisterType((*OverridePopRsp)(nil), "ves.io.schema.app_type.OverridePopRsp")
	golang_proto.RegisterType((*OverridePopRsp)(nil), "ves.io.schema.app_type.OverridePopRsp")
	proto.RegisterType((*APIEndpointLearntSchemaReq)(nil), "ves.io.schema.app_type.APIEndpointLearntSchemaReq")
	golang_proto.RegisterType((*APIEndpointLearntSchemaReq)(nil), "ves.io.schema.app_type.APIEndpointLearntSchemaReq")
	proto.RegisterType((*APIEndpointLearntSchemaRsp)(nil), "ves.io.schema.app_type.APIEndpointLearntSchemaRsp")
	golang_proto.RegisterType((*APIEndpointLearntSchemaRsp)(nil), "ves.io.schema.app_type.APIEndpointLearntSchemaRsp")
}
func (this *APIEndpointsReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIEndpointsReq)
	if !ok {
		that2, ok := that.(APIEndpointsReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AppTypeName != that1.AppTypeName {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if len(this.ApiEndpointInfoRequest) != len(that1.ApiEndpointInfoRequest) {
		return false
	}
	for i := range this.ApiEndpointInfoRequest {
		if this.ApiEndpointInfoRequest[i] != that1.ApiEndpointInfoRequest[i] {
			return false
		}
	}
	return true
}
func (this *SwaggerSpecReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SwaggerSpecReq)
	if !ok {
		that2, ok := that.(SwaggerSpecReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AppTypeName != that1.AppTypeName {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	return true
}
func (this *SwaggerSpecRsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SwaggerSpecRsp)
	if !ok {
		that2, ok := that.(SwaggerSpecRsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.SwaggerSpec != that1.SwaggerSpec {
		return false
	}
	return true
}
func (this *ServiceAPIEndpointsReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceAPIEndpointsReq)
	if !ok {
		that2, ok := that.(ServiceAPIEndpointsReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AppTypeName != that1.AppTypeName {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.ServiceName != that1.ServiceName {
		return false
	}
	if len(this.ApiEndpointInfoRequest) != len(that1.ApiEndpointInfoRequest) {
		return false
	}
	for i := range this.ApiEndpointInfoRequest {
		if this.ApiEndpointInfoRequest[i] != that1.ApiEndpointInfoRequest[i] {
			return false
		}
	}
	return true
}
func (this *APIEndpointsRsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIEndpointsRsp)
	if !ok {
		that2, ok := that.(APIEndpointsRsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.ApiepList) != len(that1.ApiepList) {
		return false
	}
	for i := range this.ApiepList {
		if !this.ApiepList[i].Equal(that1.ApiepList[i]) {
			return false
		}
	}
	return true
}
func (this *APIEndpointPDFReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIEndpointPDFReq)
	if !ok {
		that2, ok := that.(APIEndpointPDFReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AppTypeName != that1.AppTypeName {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.CollapsedUrl != that1.CollapsedUrl {
		return false
	}
	if this.Method != that1.Method {
		return false
	}
	return true
}
func (this *ServiceAPIEndpointPDFReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceAPIEndpointPDFReq)
	if !ok {
		that2, ok := that.(ServiceAPIEndpointPDFReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AppTypeName != that1.AppTypeName {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.ServiceName != that1.ServiceName {
		return false
	}
	if this.CollapsedUrl != that1.CollapsedUrl {
		return false
	}
	if this.Method != that1.Method {
		return false
	}
	return true
}
func (this *APIEndpointPDFRsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIEndpointPDFRsp)
	if !ok {
		that2, ok := that.(APIEndpointPDFRsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.PdfInfo.Equal(that1.PdfInfo) {
		return false
	}
	return true
}
func (this *OverridesReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*OverridesReq)
	if !ok {
		that2, ok := that.(OverridesReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AppTypeName != that1.AppTypeName {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	return true
}
func (this *OverridesRsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*OverridesRsp)
	if !ok {
		that2, ok := that.(OverridesRsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.OverrideList) != len(that1.OverrideList) {
		return false
	}
	for i := range this.OverrideList {
		if !this.OverrideList[i].Equal(that1.OverrideList[i]) {
			return false
		}
	}
	return true
}
func (this *OverridePushReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*OverridePushReq)
	if !ok {
		that2, ok := that.(OverridePushReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AppTypeName != that1.AppTypeName {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if !this.OverrideInfo.Equal(that1.OverrideInfo) {
		return false
	}
	return true
}
func (this *OverridePushRsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*OverridePushRsp)
	if !ok {
		that2, ok := that.(OverridePushRsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Status != that1.Status {
		return false
	}
	if this.StatusMsg != that1.StatusMsg {
		return false
	}
	return true
}
func (this *OverridePopReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*OverridePopReq)
	if !ok {
		that2, ok := that.(OverridePopReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AppTypeName != that1.AppTypeName {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	return true
}
func (this *OverridePopRsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*OverridePopRsp)
	if !ok {
		that2, ok := that.(OverridePopRsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Status != that1.Status {
		return false
	}
	if this.StatusMsg != that1.StatusMsg {
		return false
	}
	return true
}
func (this *APIEndpointLearntSchemaReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIEndpointLearntSchemaReq)
	if !ok {
		that2, ok := that.(APIEndpointLearntSchemaReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AppTypeName != that1.AppTypeName {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.CollapsedUrl != that1.CollapsedUrl {
		return false
	}
	if this.Method != that1.Method {
		return false
	}
	return true
}
func (this *APIEndpointLearntSchemaRsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIEndpointLearntSchemaRsp)
	if !ok {
		that2, ok := that.(APIEndpointLearntSchemaRsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.LearntSchema != that1.LearntSchema {
		return false
	}
	if this.SwaggerSpec != that1.SwaggerSpec {
		return false
	}
	if !this.LastUpdatedTime.Equal(that1.LastUpdatedTime) {
		return false
	}
	return true
}
func (this *APIEndpointsReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&app_type.APIEndpointsReq{")
	s = append(s, "AppTypeName: "+fmt.Sprintf("%#v", this.AppTypeName)+",\n")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "ApiEndpointInfoRequest: "+fmt.Sprintf("%#v", this.ApiEndpointInfoRequest)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SwaggerSpecReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&app_type.SwaggerSpecReq{")
	s = append(s, "AppTypeName: "+fmt.Sprintf("%#v", this.AppTypeName)+",\n")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SwaggerSpecRsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&app_type.SwaggerSpecRsp{")
	s = append(s, "SwaggerSpec: "+fmt.Sprintf("%#v", this.SwaggerSpec)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ServiceAPIEndpointsReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&app_type.ServiceAPIEndpointsReq{")
	s = append(s, "AppTypeName: "+fmt.Sprintf("%#v", this.AppTypeName)+",\n")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "ServiceName: "+fmt.Sprintf("%#v", this.ServiceName)+",\n")
	s = append(s, "ApiEndpointInfoRequest: "+fmt.Sprintf("%#v", this.ApiEndpointInfoRequest)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *APIEndpointsRsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&app_type.APIEndpointsRsp{")
	if this.ApiepList != nil {
		s = append(s, "ApiepList: "+fmt.Sprintf("%#v", this.ApiepList)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *APIEndpointPDFReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&app_type.APIEndpointPDFReq{")
	s = append(s, "AppTypeName: "+fmt.Sprintf("%#v", this.AppTypeName)+",\n")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "CollapsedUrl: "+fmt.Sprintf("%#v", this.CollapsedUrl)+",\n")
	s = append(s, "Method: "+fmt.Sprintf("%#v", this.Method)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ServiceAPIEndpointPDFReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&app_type.ServiceAPIEndpointPDFReq{")
	s = append(s, "AppTypeName: "+fmt.Sprintf("%#v", this.AppTypeName)+",\n")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "ServiceName: "+fmt.Sprintf("%#v", this.ServiceName)+",\n")
	s = append(s, "CollapsedUrl: "+fmt.Sprintf("%#v", this.CollapsedUrl)+",\n")
	s = append(s, "Method: "+fmt.Sprintf("%#v", this.Method)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *APIEndpointPDFRsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&app_type.APIEndpointPDFRsp{")
	if this.PdfInfo != nil {
		s = append(s, "PdfInfo: "+fmt.Sprintf("%#v", this.PdfInfo)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *OverridesReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&app_type.OverridesReq{")
	s = append(s, "AppTypeName: "+fmt.Sprintf("%#v", this.AppTypeName)+",\n")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *OverridesRsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&app_type.OverridesRsp{")
	if this.OverrideList != nil {
		s = append(s, "OverrideList: "+fmt.Sprintf("%#v", this.OverrideList)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *OverridePushReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&app_type.OverridePushReq{")
	s = append(s, "AppTypeName: "+fmt.Sprintf("%#v", this.AppTypeName)+",\n")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	if this.OverrideInfo != nil {
		s = append(s, "OverrideInfo: "+fmt.Sprintf("%#v", this.OverrideInfo)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *OverridePushRsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&app_type.OverridePushRsp{")
	s = append(s, "Status: "+fmt.Sprintf("%#v", this.Status)+",\n")
	s = append(s, "StatusMsg: "+fmt.Sprintf("%#v", this.StatusMsg)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *OverridePopReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&app_type.OverridePopReq{")
	s = append(s, "AppTypeName: "+fmt.Sprintf("%#v", this.AppTypeName)+",\n")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *OverridePopRsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&app_type.OverridePopRsp{")
	s = append(s, "Status: "+fmt.Sprintf("%#v", this.Status)+",\n")
	s = append(s, "StatusMsg: "+fmt.Sprintf("%#v", this.StatusMsg)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *APIEndpointLearntSchemaReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&app_type.APIEndpointLearntSchemaReq{")
	s = append(s, "AppTypeName: "+fmt.Sprintf("%#v", this.AppTypeName)+",\n")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "CollapsedUrl: "+fmt.Sprintf("%#v", this.CollapsedUrl)+",\n")
	s = append(s, "Method: "+fmt.Sprintf("%#v", this.Method)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *APIEndpointLearntSchemaRsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&app_type.APIEndpointLearntSchemaRsp{")
	s = append(s, "LearntSchema: "+fmt.Sprintf("%#v", this.LearntSchema)+",\n")
	s = append(s, "SwaggerSpec: "+fmt.Sprintf("%#v", this.SwaggerSpec)+",\n")
	if this.LastUpdatedTime != nil {
		s = append(s, "LastUpdatedTime: "+fmt.Sprintf("%#v", this.LastUpdatedTime)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringCustomApi(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for CustomAPI service

type CustomAPIClient interface {
	// Get API endpoints
	//
	// x-displayName: "Get API endpoints"
	// Get all auto discovered API endpoints for App type
	APIEndpoints(ctx context.Context, in *APIEndpointsReq, opts ...grpc.CallOption) (*APIEndpointsRsp, error)
	// Get PDF for API endpoint
	//
	// x-displayName: "Get PDF"
	// Get PDF of all metrics for a given auto discovered API endpoint for App type
	APIEndpointPDF(ctx context.Context, in *APIEndpointPDFReq, opts ...grpc.CallOption) (*APIEndpointPDFRsp, error)
	// Get override for all endpoints
	//
	// x-displayName: "Get Override"
	// Get all override for API endpoints configured for this App type
	Overrides(ctx context.Context, in *OverridesReq, opts ...grpc.CallOption) (*OverridesRsp, error)
	// Add override for dynamic endpoint
	//
	// x-displayName: "Add Override"
	// Add override for dynamic component for API endpoints discovered for this App type
	OverridePush(ctx context.Context, in *OverridePushReq, opts ...grpc.CallOption) (*OverridePushRsp, error)
	// remove override for dynamic endpoint
	//
	// x-displayName: "Remove Override"
	// remove override for dynamic component for API endpoints discovered for this App type
	OverridePop(ctx context.Context, in *OverridePopReq, opts ...grpc.CallOption) (*OverridePopRsp, error)
	// Get API endpoints Per Service
	//
	// x-displayName: "Get Service API Endpoints"
	// Get all autodiscovered API endpoints for Service
	GetServiceAPIEndpoints(ctx context.Context, in *ServiceAPIEndpointsReq, opts ...grpc.CallOption) (*APIEndpointsRsp, error)
	// Get PDF for API endpoint Per Service
	//
	// x-displayName: "Get Service API Endpoint PDF"
	// Get PDF of all metrics for a given auto discovered API endpoint for Service
	GetServiceAPIEndpointPDF(ctx context.Context, in *ServiceAPIEndpointPDFReq, opts ...grpc.CallOption) (*APIEndpointPDFRsp, error)
	// Get Learnt Schema per API endpoint
	//
	// x-displayName: "Get Learnt Schema per API endpoint"
	// Get Learnt Schema per API endpoint for a given auto discovered API endpoint for Service
	GetAPIEndpointLearntSchema(ctx context.Context, in *APIEndpointLearntSchemaReq, opts ...grpc.CallOption) (*APIEndpointLearntSchemaRsp, error)
	// Get Swagger Spec for App Type
	//
	// x-displayName: "Get Swagger Spec for App Type"
	// Get the corresponding Swagger spec for the given app type
	GetSwaggerSpec(ctx context.Context, in *SwaggerSpecReq, opts ...grpc.CallOption) (*SwaggerSpecRsp, error)
}

type customAPIClient struct {
	cc *grpc.ClientConn
}

func NewCustomAPIClient(cc *grpc.ClientConn) CustomAPIClient {
	return &customAPIClient{cc}
}

func (c *customAPIClient) APIEndpoints(ctx context.Context, in *APIEndpointsReq, opts ...grpc.CallOption) (*APIEndpointsRsp, error) {
	out := new(APIEndpointsRsp)
	err := grpc.Invoke(ctx, "/ves.io.schema.app_type.CustomAPI/APIEndpoints", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAPIClient) APIEndpointPDF(ctx context.Context, in *APIEndpointPDFReq, opts ...grpc.CallOption) (*APIEndpointPDFRsp, error) {
	out := new(APIEndpointPDFRsp)
	err := grpc.Invoke(ctx, "/ves.io.schema.app_type.CustomAPI/APIEndpointPDF", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAPIClient) Overrides(ctx context.Context, in *OverridesReq, opts ...grpc.CallOption) (*OverridesRsp, error) {
	out := new(OverridesRsp)
	err := grpc.Invoke(ctx, "/ves.io.schema.app_type.CustomAPI/Overrides", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAPIClient) OverridePush(ctx context.Context, in *OverridePushReq, opts ...grpc.CallOption) (*OverridePushRsp, error) {
	out := new(OverridePushRsp)
	err := grpc.Invoke(ctx, "/ves.io.schema.app_type.CustomAPI/OverridePush", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAPIClient) OverridePop(ctx context.Context, in *OverridePopReq, opts ...grpc.CallOption) (*OverridePopRsp, error) {
	out := new(OverridePopRsp)
	err := grpc.Invoke(ctx, "/ves.io.schema.app_type.CustomAPI/OverridePop", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAPIClient) GetServiceAPIEndpoints(ctx context.Context, in *ServiceAPIEndpointsReq, opts ...grpc.CallOption) (*APIEndpointsRsp, error) {
	out := new(APIEndpointsRsp)
	err := grpc.Invoke(ctx, "/ves.io.schema.app_type.CustomAPI/GetServiceAPIEndpoints", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAPIClient) GetServiceAPIEndpointPDF(ctx context.Context, in *ServiceAPIEndpointPDFReq, opts ...grpc.CallOption) (*APIEndpointPDFRsp, error) {
	out := new(APIEndpointPDFRsp)
	err := grpc.Invoke(ctx, "/ves.io.schema.app_type.CustomAPI/GetServiceAPIEndpointPDF", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAPIClient) GetAPIEndpointLearntSchema(ctx context.Context, in *APIEndpointLearntSchemaReq, opts ...grpc.CallOption) (*APIEndpointLearntSchemaRsp, error) {
	out := new(APIEndpointLearntSchemaRsp)
	err := grpc.Invoke(ctx, "/ves.io.schema.app_type.CustomAPI/GetAPIEndpointLearntSchema", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAPIClient) GetSwaggerSpec(ctx context.Context, in *SwaggerSpecReq, opts ...grpc.CallOption) (*SwaggerSpecRsp, error) {
	out := new(SwaggerSpecRsp)
	err := grpc.Invoke(ctx, "/ves.io.schema.app_type.CustomAPI/GetSwaggerSpec", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CustomAPI service

type CustomAPIServer interface {
	// Get API endpoints
	//
	// x-displayName: "Get API endpoints"
	// Get all auto discovered API endpoints for App type
	APIEndpoints(context.Context, *APIEndpointsReq) (*APIEndpointsRsp, error)
	// Get PDF for API endpoint
	//
	// x-displayName: "Get PDF"
	// Get PDF of all metrics for a given auto discovered API endpoint for App type
	APIEndpointPDF(context.Context, *APIEndpointPDFReq) (*APIEndpointPDFRsp, error)
	// Get override for all endpoints
	//
	// x-displayName: "Get Override"
	// Get all override for API endpoints configured for this App type
	Overrides(context.Context, *OverridesReq) (*OverridesRsp, error)
	// Add override for dynamic endpoint
	//
	// x-displayName: "Add Override"
	// Add override for dynamic component for API endpoints discovered for this App type
	OverridePush(context.Context, *OverridePushReq) (*OverridePushRsp, error)
	// remove override for dynamic endpoint
	//
	// x-displayName: "Remove Override"
	// remove override for dynamic component for API endpoints discovered for this App type
	OverridePop(context.Context, *OverridePopReq) (*OverridePopRsp, error)
	// Get API endpoints Per Service
	//
	// x-displayName: "Get Service API Endpoints"
	// Get all autodiscovered API endpoints for Service
	GetServiceAPIEndpoints(context.Context, *ServiceAPIEndpointsReq) (*APIEndpointsRsp, error)
	// Get PDF for API endpoint Per Service
	//
	// x-displayName: "Get Service API Endpoint PDF"
	// Get PDF of all metrics for a given auto discovered API endpoint for Service
	GetServiceAPIEndpointPDF(context.Context, *ServiceAPIEndpointPDFReq) (*APIEndpointPDFRsp, error)
	// Get Learnt Schema per API endpoint
	//
	// x-displayName: "Get Learnt Schema per API endpoint"
	// Get Learnt Schema per API endpoint for a given auto discovered API endpoint for Service
	GetAPIEndpointLearntSchema(context.Context, *APIEndpointLearntSchemaReq) (*APIEndpointLearntSchemaRsp, error)
	// Get Swagger Spec for App Type
	//
	// x-displayName: "Get Swagger Spec for App Type"
	// Get the corresponding Swagger spec for the given app type
	GetSwaggerSpec(context.Context, *SwaggerSpecReq) (*SwaggerSpecRsp, error)
}

func RegisterCustomAPIServer(s *grpc.Server, srv CustomAPIServer) {
	s.RegisterService(&_CustomAPI_serviceDesc, srv)
}

func _CustomAPI_APIEndpoints_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(APIEndpointsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).APIEndpoints(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.app_type.CustomAPI/APIEndpoints",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).APIEndpoints(ctx, req.(*APIEndpointsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAPI_APIEndpointPDF_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(APIEndpointPDFReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).APIEndpointPDF(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.app_type.CustomAPI/APIEndpointPDF",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).APIEndpointPDF(ctx, req.(*APIEndpointPDFReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAPI_Overrides_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OverridesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).Overrides(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.app_type.CustomAPI/Overrides",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).Overrides(ctx, req.(*OverridesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAPI_OverridePush_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OverridePushReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).OverridePush(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.app_type.CustomAPI/OverridePush",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).OverridePush(ctx, req.(*OverridePushReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAPI_OverridePop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OverridePopReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).OverridePop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.app_type.CustomAPI/OverridePop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).OverridePop(ctx, req.(*OverridePopReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAPI_GetServiceAPIEndpoints_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceAPIEndpointsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).GetServiceAPIEndpoints(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.app_type.CustomAPI/GetServiceAPIEndpoints",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).GetServiceAPIEndpoints(ctx, req.(*ServiceAPIEndpointsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAPI_GetServiceAPIEndpointPDF_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceAPIEndpointPDFReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).GetServiceAPIEndpointPDF(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.app_type.CustomAPI/GetServiceAPIEndpointPDF",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).GetServiceAPIEndpointPDF(ctx, req.(*ServiceAPIEndpointPDFReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAPI_GetAPIEndpointLearntSchema_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(APIEndpointLearntSchemaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).GetAPIEndpointLearntSchema(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.app_type.CustomAPI/GetAPIEndpointLearntSchema",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).GetAPIEndpointLearntSchema(ctx, req.(*APIEndpointLearntSchemaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAPI_GetSwaggerSpec_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SwaggerSpecReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).GetSwaggerSpec(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.app_type.CustomAPI/GetSwaggerSpec",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).GetSwaggerSpec(ctx, req.(*SwaggerSpecReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ves.io.schema.app_type.CustomAPI",
	HandlerType: (*CustomAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "APIEndpoints",
			Handler:    _CustomAPI_APIEndpoints_Handler,
		},
		{
			MethodName: "APIEndpointPDF",
			Handler:    _CustomAPI_APIEndpointPDF_Handler,
		},
		{
			MethodName: "Overrides",
			Handler:    _CustomAPI_Overrides_Handler,
		},
		{
			MethodName: "OverridePush",
			Handler:    _CustomAPI_OverridePush_Handler,
		},
		{
			MethodName: "OverridePop",
			Handler:    _CustomAPI_OverridePop_Handler,
		},
		{
			MethodName: "GetServiceAPIEndpoints",
			Handler:    _CustomAPI_GetServiceAPIEndpoints_Handler,
		},
		{
			MethodName: "GetServiceAPIEndpointPDF",
			Handler:    _CustomAPI_GetServiceAPIEndpointPDF_Handler,
		},
		{
			MethodName: "GetAPIEndpointLearntSchema",
			Handler:    _CustomAPI_GetAPIEndpointLearntSchema_Handler,
		},
		{
			MethodName: "GetSwaggerSpec",
			Handler:    _CustomAPI_GetSwaggerSpec_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ves.io/schema/app_type/custom_api.proto",
}

func (m *APIEndpointsReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *APIEndpointsReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.AppTypeName) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.AppTypeName)))
		i += copy(dAtA[i:], m.AppTypeName)
	}
	if len(m.Namespace) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.Namespace)))
		i += copy(dAtA[i:], m.Namespace)
	}
	if len(m.ApiEndpointInfoRequest) > 0 {
		dAtA2 := make([]byte, len(m.ApiEndpointInfoRequest)*10)
		var j1 int
		for _, num := range m.ApiEndpointInfoRequest {
			for num >= 1<<7 {
				dAtA2[j1] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j1++
			}
			dAtA2[j1] = uint8(num)
			j1++
		}
		dAtA[i] = 0x1a
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(j1))
		i += copy(dAtA[i:], dAtA2[:j1])
	}
	return i, nil
}

func (m *SwaggerSpecReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SwaggerSpecReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.AppTypeName) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.AppTypeName)))
		i += copy(dAtA[i:], m.AppTypeName)
	}
	if len(m.Namespace) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.Namespace)))
		i += copy(dAtA[i:], m.Namespace)
	}
	return i, nil
}

func (m *SwaggerSpecRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SwaggerSpecRsp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.SwaggerSpec) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.SwaggerSpec)))
		i += copy(dAtA[i:], m.SwaggerSpec)
	}
	return i, nil
}

func (m *ServiceAPIEndpointsReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ServiceAPIEndpointsReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.AppTypeName) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.AppTypeName)))
		i += copy(dAtA[i:], m.AppTypeName)
	}
	if len(m.Namespace) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.Namespace)))
		i += copy(dAtA[i:], m.Namespace)
	}
	if len(m.ServiceName) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.ServiceName)))
		i += copy(dAtA[i:], m.ServiceName)
	}
	if len(m.ApiEndpointInfoRequest) > 0 {
		dAtA4 := make([]byte, len(m.ApiEndpointInfoRequest)*10)
		var j3 int
		for _, num := range m.ApiEndpointInfoRequest {
			for num >= 1<<7 {
				dAtA4[j3] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j3++
			}
			dAtA4[j3] = uint8(num)
			j3++
		}
		dAtA[i] = 0x22
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(j3))
		i += copy(dAtA[i:], dAtA4[:j3])
	}
	return i, nil
}

func (m *APIEndpointsRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *APIEndpointsRsp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ApiepList) > 0 {
		for _, msg := range m.ApiepList {
			dAtA[i] = 0xa
			i++
			i = encodeVarintCustomApi(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *APIEndpointPDFReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *APIEndpointPDFReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.AppTypeName) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.AppTypeName)))
		i += copy(dAtA[i:], m.AppTypeName)
	}
	if len(m.Namespace) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.Namespace)))
		i += copy(dAtA[i:], m.Namespace)
	}
	if len(m.CollapsedUrl) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.CollapsedUrl)))
		i += copy(dAtA[i:], m.CollapsedUrl)
	}
	if len(m.Method) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.Method)))
		i += copy(dAtA[i:], m.Method)
	}
	return i, nil
}

func (m *ServiceAPIEndpointPDFReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ServiceAPIEndpointPDFReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.AppTypeName) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.AppTypeName)))
		i += copy(dAtA[i:], m.AppTypeName)
	}
	if len(m.Namespace) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.Namespace)))
		i += copy(dAtA[i:], m.Namespace)
	}
	if len(m.ServiceName) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.ServiceName)))
		i += copy(dAtA[i:], m.ServiceName)
	}
	if len(m.CollapsedUrl) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.CollapsedUrl)))
		i += copy(dAtA[i:], m.CollapsedUrl)
	}
	if len(m.Method) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.Method)))
		i += copy(dAtA[i:], m.Method)
	}
	return i, nil
}

func (m *APIEndpointPDFRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *APIEndpointPDFRsp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.PdfInfo != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(m.PdfInfo.Size()))
		n5, err := m.PdfInfo.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	return i, nil
}

func (m *OverridesReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OverridesReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.AppTypeName) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.AppTypeName)))
		i += copy(dAtA[i:], m.AppTypeName)
	}
	if len(m.Namespace) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.Namespace)))
		i += copy(dAtA[i:], m.Namespace)
	}
	return i, nil
}

func (m *OverridesRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OverridesRsp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.OverrideList) > 0 {
		for _, msg := range m.OverrideList {
			dAtA[i] = 0xa
			i++
			i = encodeVarintCustomApi(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *OverridePushReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OverridePushReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.AppTypeName) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.AppTypeName)))
		i += copy(dAtA[i:], m.AppTypeName)
	}
	if len(m.Namespace) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.Namespace)))
		i += copy(dAtA[i:], m.Namespace)
	}
	if m.OverrideInfo != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(m.OverrideInfo.Size()))
		n6, err := m.OverrideInfo.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n6
	}
	return i, nil
}

func (m *OverridePushRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OverridePushRsp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Status {
		dAtA[i] = 0x8
		i++
		if m.Status {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.StatusMsg) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.StatusMsg)))
		i += copy(dAtA[i:], m.StatusMsg)
	}
	return i, nil
}

func (m *OverridePopReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OverridePopReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.AppTypeName) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.AppTypeName)))
		i += copy(dAtA[i:], m.AppTypeName)
	}
	if len(m.Namespace) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.Namespace)))
		i += copy(dAtA[i:], m.Namespace)
	}
	return i, nil
}

func (m *OverridePopRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OverridePopRsp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Status {
		dAtA[i] = 0x8
		i++
		if m.Status {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.StatusMsg) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.StatusMsg)))
		i += copy(dAtA[i:], m.StatusMsg)
	}
	return i, nil
}

func (m *APIEndpointLearntSchemaReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *APIEndpointLearntSchemaReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.AppTypeName) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.AppTypeName)))
		i += copy(dAtA[i:], m.AppTypeName)
	}
	if len(m.Namespace) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.Namespace)))
		i += copy(dAtA[i:], m.Namespace)
	}
	if len(m.CollapsedUrl) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.CollapsedUrl)))
		i += copy(dAtA[i:], m.CollapsedUrl)
	}
	if len(m.Method) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.Method)))
		i += copy(dAtA[i:], m.Method)
	}
	return i, nil
}

func (m *APIEndpointLearntSchemaRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *APIEndpointLearntSchemaRsp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.LearntSchema) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.LearntSchema)))
		i += copy(dAtA[i:], m.LearntSchema)
	}
	if len(m.SwaggerSpec) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.SwaggerSpec)))
		i += copy(dAtA[i:], m.SwaggerSpec)
	}
	if m.LastUpdatedTime != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintCustomApi(dAtA, i, uint64(m.LastUpdatedTime.Size()))
		n7, err := m.LastUpdatedTime.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n7
	}
	return i, nil
}

func encodeVarintCustomApi(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *APIEndpointsReq) Size() (n int) {
	var l int
	_ = l
	l = len(m.AppTypeName)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	if len(m.ApiEndpointInfoRequest) > 0 {
		l = 0
		for _, e := range m.ApiEndpointInfoRequest {
			l += sovCustomApi(uint64(e))
		}
		n += 1 + sovCustomApi(uint64(l)) + l
	}
	return n
}

func (m *SwaggerSpecReq) Size() (n int) {
	var l int
	_ = l
	l = len(m.AppTypeName)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	return n
}

func (m *SwaggerSpecRsp) Size() (n int) {
	var l int
	_ = l
	l = len(m.SwaggerSpec)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	return n
}

func (m *ServiceAPIEndpointsReq) Size() (n int) {
	var l int
	_ = l
	l = len(m.AppTypeName)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	l = len(m.ServiceName)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	if len(m.ApiEndpointInfoRequest) > 0 {
		l = 0
		for _, e := range m.ApiEndpointInfoRequest {
			l += sovCustomApi(uint64(e))
		}
		n += 1 + sovCustomApi(uint64(l)) + l
	}
	return n
}

func (m *APIEndpointsRsp) Size() (n int) {
	var l int
	_ = l
	if len(m.ApiepList) > 0 {
		for _, e := range m.ApiepList {
			l = e.Size()
			n += 1 + l + sovCustomApi(uint64(l))
		}
	}
	return n
}

func (m *APIEndpointPDFReq) Size() (n int) {
	var l int
	_ = l
	l = len(m.AppTypeName)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	l = len(m.CollapsedUrl)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	l = len(m.Method)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	return n
}

func (m *ServiceAPIEndpointPDFReq) Size() (n int) {
	var l int
	_ = l
	l = len(m.AppTypeName)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	l = len(m.ServiceName)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	l = len(m.CollapsedUrl)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	l = len(m.Method)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	return n
}

func (m *APIEndpointPDFRsp) Size() (n int) {
	var l int
	_ = l
	if m.PdfInfo != nil {
		l = m.PdfInfo.Size()
		n += 1 + l + sovCustomApi(uint64(l))
	}
	return n
}

func (m *OverridesReq) Size() (n int) {
	var l int
	_ = l
	l = len(m.AppTypeName)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	return n
}

func (m *OverridesRsp) Size() (n int) {
	var l int
	_ = l
	if len(m.OverrideList) > 0 {
		for _, e := range m.OverrideList {
			l = e.Size()
			n += 1 + l + sovCustomApi(uint64(l))
		}
	}
	return n
}

func (m *OverridePushReq) Size() (n int) {
	var l int
	_ = l
	l = len(m.AppTypeName)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	if m.OverrideInfo != nil {
		l = m.OverrideInfo.Size()
		n += 1 + l + sovCustomApi(uint64(l))
	}
	return n
}

func (m *OverridePushRsp) Size() (n int) {
	var l int
	_ = l
	if m.Status {
		n += 2
	}
	l = len(m.StatusMsg)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	return n
}

func (m *OverridePopReq) Size() (n int) {
	var l int
	_ = l
	l = len(m.AppTypeName)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	return n
}

func (m *OverridePopRsp) Size() (n int) {
	var l int
	_ = l
	if m.Status {
		n += 2
	}
	l = len(m.StatusMsg)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	return n
}

func (m *APIEndpointLearntSchemaReq) Size() (n int) {
	var l int
	_ = l
	l = len(m.AppTypeName)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	l = len(m.CollapsedUrl)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	l = len(m.Method)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	return n
}

func (m *APIEndpointLearntSchemaRsp) Size() (n int) {
	var l int
	_ = l
	l = len(m.LearntSchema)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	l = len(m.SwaggerSpec)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	if m.LastUpdatedTime != nil {
		l = m.LastUpdatedTime.Size()
		n += 1 + l + sovCustomApi(uint64(l))
	}
	return n
}

func sovCustomApi(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozCustomApi(x uint64) (n int) {
	return sovCustomApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *APIEndpointsReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIEndpointsReq{`,
		`AppTypeName:` + fmt.Sprintf("%v", this.AppTypeName) + `,`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`ApiEndpointInfoRequest:` + fmt.Sprintf("%v", this.ApiEndpointInfoRequest) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SwaggerSpecReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SwaggerSpecReq{`,
		`AppTypeName:` + fmt.Sprintf("%v", this.AppTypeName) + `,`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SwaggerSpecRsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SwaggerSpecRsp{`,
		`SwaggerSpec:` + fmt.Sprintf("%v", this.SwaggerSpec) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceAPIEndpointsReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceAPIEndpointsReq{`,
		`AppTypeName:` + fmt.Sprintf("%v", this.AppTypeName) + `,`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`ServiceName:` + fmt.Sprintf("%v", this.ServiceName) + `,`,
		`ApiEndpointInfoRequest:` + fmt.Sprintf("%v", this.ApiEndpointInfoRequest) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIEndpointsRsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIEndpointsRsp{`,
		`ApiepList:` + strings.Replace(fmt.Sprintf("%v", this.ApiepList), "APIEPInfo", "APIEPInfo", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIEndpointPDFReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIEndpointPDFReq{`,
		`AppTypeName:` + fmt.Sprintf("%v", this.AppTypeName) + `,`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`CollapsedUrl:` + fmt.Sprintf("%v", this.CollapsedUrl) + `,`,
		`Method:` + fmt.Sprintf("%v", this.Method) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceAPIEndpointPDFReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceAPIEndpointPDFReq{`,
		`AppTypeName:` + fmt.Sprintf("%v", this.AppTypeName) + `,`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`ServiceName:` + fmt.Sprintf("%v", this.ServiceName) + `,`,
		`CollapsedUrl:` + fmt.Sprintf("%v", this.CollapsedUrl) + `,`,
		`Method:` + fmt.Sprintf("%v", this.Method) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIEndpointPDFRsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIEndpointPDFRsp{`,
		`PdfInfo:` + strings.Replace(fmt.Sprintf("%v", this.PdfInfo), "APIEPPDFInfo", "APIEPPDFInfo", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *OverridesReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&OverridesReq{`,
		`AppTypeName:` + fmt.Sprintf("%v", this.AppTypeName) + `,`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`}`,
	}, "")
	return s
}
func (this *OverridesRsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&OverridesRsp{`,
		`OverrideList:` + strings.Replace(fmt.Sprintf("%v", this.OverrideList), "OverrideInfo", "OverrideInfo", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *OverridePushReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&OverridePushReq{`,
		`AppTypeName:` + fmt.Sprintf("%v", this.AppTypeName) + `,`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`OverrideInfo:` + strings.Replace(fmt.Sprintf("%v", this.OverrideInfo), "OverrideInfo", "OverrideInfo", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *OverridePushRsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&OverridePushRsp{`,
		`Status:` + fmt.Sprintf("%v", this.Status) + `,`,
		`StatusMsg:` + fmt.Sprintf("%v", this.StatusMsg) + `,`,
		`}`,
	}, "")
	return s
}
func (this *OverridePopReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&OverridePopReq{`,
		`AppTypeName:` + fmt.Sprintf("%v", this.AppTypeName) + `,`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`}`,
	}, "")
	return s
}
func (this *OverridePopRsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&OverridePopRsp{`,
		`Status:` + fmt.Sprintf("%v", this.Status) + `,`,
		`StatusMsg:` + fmt.Sprintf("%v", this.StatusMsg) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIEndpointLearntSchemaReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIEndpointLearntSchemaReq{`,
		`AppTypeName:` + fmt.Sprintf("%v", this.AppTypeName) + `,`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`CollapsedUrl:` + fmt.Sprintf("%v", this.CollapsedUrl) + `,`,
		`Method:` + fmt.Sprintf("%v", this.Method) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIEndpointLearntSchemaRsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIEndpointLearntSchemaRsp{`,
		`LearntSchema:` + fmt.Sprintf("%v", this.LearntSchema) + `,`,
		`SwaggerSpec:` + fmt.Sprintf("%v", this.SwaggerSpec) + `,`,
		`LastUpdatedTime:` + strings.Replace(fmt.Sprintf("%v", this.LastUpdatedTime), "Timestamp", "google_protobuf1.Timestamp", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringCustomApi(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *APIEndpointsReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: APIEndpointsReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: APIEndpointsReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppTypeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppTypeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v ApiEndpointInfoRequest
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowCustomApi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (ApiEndpointInfoRequest(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ApiEndpointInfoRequest = append(m.ApiEndpointInfoRequest, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowCustomApi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthCustomApi
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v ApiEndpointInfoRequest
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowCustomApi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (ApiEndpointInfoRequest(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ApiEndpointInfoRequest = append(m.ApiEndpointInfoRequest, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiEndpointInfoRequest", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SwaggerSpecReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SwaggerSpecReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SwaggerSpecReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppTypeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppTypeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SwaggerSpecRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SwaggerSpecRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SwaggerSpecRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SwaggerSpec", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SwaggerSpec = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ServiceAPIEndpointsReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ServiceAPIEndpointsReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ServiceAPIEndpointsReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppTypeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppTypeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v ApiEndpointInfoRequest
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowCustomApi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (ApiEndpointInfoRequest(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ApiEndpointInfoRequest = append(m.ApiEndpointInfoRequest, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowCustomApi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthCustomApi
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v ApiEndpointInfoRequest
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowCustomApi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (ApiEndpointInfoRequest(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ApiEndpointInfoRequest = append(m.ApiEndpointInfoRequest, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiEndpointInfoRequest", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *APIEndpointsRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: APIEndpointsRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: APIEndpointsRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiepList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiepList = append(m.ApiepList, &APIEPInfo{})
			if err := m.ApiepList[len(m.ApiepList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *APIEndpointPDFReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: APIEndpointPDFReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: APIEndpointPDFReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppTypeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppTypeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollapsedUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollapsedUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Method", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Method = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ServiceAPIEndpointPDFReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ServiceAPIEndpointPDFReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ServiceAPIEndpointPDFReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppTypeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppTypeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollapsedUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollapsedUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Method", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Method = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *APIEndpointPDFRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: APIEndpointPDFRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: APIEndpointPDFRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PdfInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PdfInfo == nil {
				m.PdfInfo = &APIEPPDFInfo{}
			}
			if err := m.PdfInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OverridesReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OverridesReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OverridesReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppTypeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppTypeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OverridesRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OverridesRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OverridesRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OverrideList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OverrideList = append(m.OverrideList, &OverrideInfo{})
			if err := m.OverrideList[len(m.OverrideList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OverridePushReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OverridePushReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OverridePushReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppTypeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppTypeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OverrideInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OverrideInfo == nil {
				m.OverrideInfo = &OverrideInfo{}
			}
			if err := m.OverrideInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OverridePushRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OverridePushRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OverridePushRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Status = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StatusMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OverridePopReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OverridePopReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OverridePopReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppTypeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppTypeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OverridePopRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OverridePopRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OverridePopRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Status = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StatusMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *APIEndpointLearntSchemaReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: APIEndpointLearntSchemaReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: APIEndpointLearntSchemaReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppTypeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppTypeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollapsedUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollapsedUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Method", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Method = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *APIEndpointLearntSchemaRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: APIEndpointLearntSchemaRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: APIEndpointLearntSchemaRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LearntSchema", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LearntSchema = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SwaggerSpec", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SwaggerSpec = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdatedTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LastUpdatedTime == nil {
				m.LastUpdatedTime = &google_protobuf1.Timestamp{}
			}
			if err := m.LastUpdatedTime.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCustomApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCustomApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthCustomApi
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowCustomApi
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipCustomApi(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthCustomApi = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCustomApi   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("ves.io/schema/app_type/custom_api.proto", fileDescriptorCustomApi) }
func init() {
	golang_proto.RegisterFile("ves.io/schema/app_type/custom_api.proto", fileDescriptorCustomApi)
}

var fileDescriptorCustomApi = []byte{
	// 1205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0xcf, 0x6f, 0x1b, 0xc5,
	0x17, 0xcf, 0xd8, 0x6d, 0xbf, 0xcd, 0xc4, 0x4d, 0xda, 0x39, 0x44, 0xee, 0x7e, 0xd3, 0x25, 0x5d,
	0x10, 0x0d, 0x20, 0xef, 0xa2, 0xf4, 0xc6, 0x05, 0x12, 0xf2, 0xa3, 0xa6, 0x01, 0x2c, 0x3b, 0x91,
	0x80, 0x03, 0xab, 0xb1, 0x3d, 0xde, 0x2c, 0xac, 0x77, 0xa6, 0x3b, 0xb3, 0x6e, 0xa3, 0xf0, 0x4b,
	0x95, 0x10, 0x12, 0x12, 0x12, 0x2a, 0x47, 0x24, 0xce, 0x1c, 0xf8, 0x03, 0x10, 0xe5, 0x90, 0x0b,
	0xa2, 0x20, 0x81, 0x0a, 0x5c, 0x10, 0x07, 0x44, 0x5c, 0x0e, 0x70, 0xeb, 0x81, 0x33, 0x42, 0x3b,
	0xbb, 0xeb, 0xac, 0x1d, 0xdb, 0xdd, 0x86, 0xad, 0xc4, 0x25, 0x9a, 0x99, 0xf7, 0xe6, 0xed, 0xe7,
	0x7d, 0xde, 0x9b, 0xf7, 0x5e, 0x0c, 0x2f, 0x74, 0x08, 0xd7, 0x6d, 0x6a, 0xf0, 0xc6, 0x36, 0x69,
	0x63, 0x03, 0x33, 0x66, 0x8a, 0x1d, 0x46, 0x8c, 0x86, 0xcf, 0x05, 0x6d, 0x9b, 0x98, 0xd9, 0x3a,
	0xf3, 0xa8, 0xa0, 0x68, 0x36, 0x54, 0xd4, 0x43, 0x45, 0x3d, 0x56, 0x54, 0x4a, 0x96, 0x2d, 0xb6,
	0xfd, 0xba, 0xde, 0xa0, 0x6d, 0xc3, 0xa2, 0x16, 0x35, 0xa4, 0x7a, 0xdd, 0x6f, 0xc9, 0x9d, 0xdc,
	0xc8, 0x55, 0x68, 0x46, 0x99, 0xb3, 0x28, 0xb5, 0x1c, 0x62, 0x60, 0x66, 0x1b, 0xd8, 0x75, 0xa9,
	0xc0, 0xc2, 0xa6, 0x2e, 0x8f, 0xa4, 0x0f, 0x45, 0xd2, 0x9e, 0x0d, 0x61, 0xb7, 0x09, 0x17, 0xb8,
	0xcd, 0x22, 0x05, 0x6d, 0x04, 0xdc, 0xe0, 0x4f, 0x6c, 0xe4, 0xff, 0xfd, 0x3a, 0x94, 0x25, 0xbf,
	0x30, 0xd7, 0x2f, 0xec, 0x60, 0xc7, 0x6e, 0x62, 0x41, 0x86, 0x9b, 0xef, 0x10, 0x4e, 0xdc, 0x4e,
	0xbf, 0x05, 0xed, 0x5b, 0x00, 0x67, 0x96, 0x2a, 0xe5, 0x55, 0xb7, 0xc9, 0xa8, 0xed, 0x0a, 0x5e,
	0x25, 0x57, 0x90, 0x06, 0x4f, 0xc5, 0x50, 0x4c, 0x17, 0xb7, 0x49, 0x11, 0xcc, 0x83, 0x85, 0xc9,
	0xea, 0x14, 0x66, 0x6c, 0x73, 0x87, 0x91, 0x17, 0x70, 0x9b, 0xa0, 0x39, 0x38, 0x19, 0x88, 0x38,
	0xc3, 0x0d, 0x52, 0xcc, 0x49, 0xf9, 0xc1, 0x01, 0xf2, 0xe1, 0x59, 0xcc, 0x6c, 0x93, 0x44, 0x56,
	0x4d, 0xdb, 0x6d, 0x51, 0xd3, 0x23, 0x57, 0x7c, 0xc2, 0x45, 0x31, 0x3f, 0x9f, 0x5f, 0x98, 0x5e,
	0xd4, 0xf5, 0xe1, 0x21, 0xd0, 0x97, 0x98, 0x1d, 0xa3, 0x29, 0xbb, 0x2d, 0x5a, 0x0d, 0x6f, 0x2d,
	0xc3, 0x2f, 0xfe, 0xdc, 0xcb, 0x1f, 0xbf, 0x01, 0x72, 0x45, 0x50, 0x9d, 0xc5, 0x43, 0x75, 0xb4,
	0x2a, 0x9c, 0xae, 0x5d, 0xc5, 0x96, 0x45, 0xbc, 0x1a, 0x23, 0x8d, 0x4c, 0x5c, 0xd1, 0x2e, 0xf6,
	0xdb, 0xe4, 0x0c, 0x9d, 0x87, 0x05, 0x1e, 0x9e, 0x98, 0x9c, 0x91, 0x46, 0x6c, 0x92, 0x1f, 0x68,
	0x69, 0x7f, 0x01, 0x38, 0x5b, 0x23, 0x5e, 0xc7, 0x6e, 0x90, 0xec, 0xc9, 0x0d, 0xbe, 0x1f, 0xda,
	0x0e, 0x0d, 0xe4, 0xa3, 0xef, 0x87, 0x67, 0xd2, 0xc0, 0x58, 0xfe, 0x8f, 0x3d, 0x30, 0xfe, 0x6b,
	0x03, 0xb9, 0xc4, 0x19, 0x7a, 0x06, 0x42, 0xcc, 0x6c, 0xc2, 0x4c, 0xc7, 0xe6, 0xa2, 0x08, 0xe6,
	0xf3, 0x0b, 0x53, 0x8b, 0xe7, 0x47, 0x7e, 0xba, 0x52, 0x5e, 0xad, 0x48, 0x83, 0x93, 0xf2, 0xd2,
	0x86, 0xcd, 0x85, 0x76, 0x03, 0xc0, 0x33, 0x09, 0xab, 0x95, 0x95, 0xb5, 0x6c, 0x68, 0x7c, 0x18,
	0x9e, 0x6a, 0x50, 0xc7, 0xc1, 0x8c, 0x93, 0xa6, 0xe9, 0x7b, 0x4e, 0xc4, 0x63, 0xa1, 0x77, 0xb8,
	0xe5, 0x39, 0x68, 0x16, 0x9e, 0x68, 0x13, 0xb1, 0x4d, 0x9b, 0xc5, 0x63, 0x52, 0x1a, 0xed, 0xb4,
	0x2f, 0x01, 0x2c, 0x1e, 0x0e, 0x70, 0x66, 0xd8, 0x52, 0x84, 0xf8, 0x10, 0xfc, 0x63, 0x63, 0xe1,
	0x1f, 0xef, 0x83, 0xbf, 0x79, 0x88, 0x52, 0xce, 0xd0, 0xd3, 0xf0, 0x24, 0x6b, 0xb6, 0x64, 0xae,
	0x48, 0xc4, 0x53, 0x8b, 0x8f, 0x8c, 0x0d, 0x54, 0x65, 0x65, 0x4d, 0xc6, 0xea, 0x7f, 0xac, 0xd9,
	0x0a, 0x16, 0x5a, 0x05, 0x16, 0x5e, 0xec, 0x10, 0xcf, 0xb3, 0x9b, 0x24, 0x9b, 0x54, 0xd7, 0x5e,
	0x4e, 0x5a, 0xe4, 0x0c, 0x95, 0xe1, 0x29, 0x1a, 0xed, 0x93, 0x09, 0x35, 0x12, 0x67, 0x7c, 0x59,
	0xe2, 0x2c, 0xc4, 0x57, 0x65, 0x5a, 0x7d, 0x02, 0xe0, 0x4c, 0x2c, 0xae, 0xf8, 0x7c, 0x3b, 0x9b,
	0xc0, 0x25, 0x01, 0x4a, 0x22, 0xf3, 0xe3, 0x89, 0x1c, 0x0e, 0x50, 0xb2, 0x79, 0x69, 0x00, 0x1f,
	0x67, 0x41, 0x38, 0xb9, 0xc0, 0xc2, 0xe7, 0x12, 0xd8, 0xc9, 0x6a, 0xb4, 0x43, 0xe7, 0x20, 0x0c,
	0x57, 0x66, 0x9b, 0x5b, 0x31, 0xa8, 0xf0, 0xe4, 0x79, 0x6e, 0x05, 0x65, 0xb1, 0x67, 0x89, 0xb2,
	0x6c, 0x22, 0xb3, 0xde, 0x6f, 0xf3, 0xe8, 0xe0, 0x3e, 0x06, 0x50, 0x49, 0xe4, 0xe2, 0x06, 0xc1,
	0x9e, 0x2b, 0x6a, 0x92, 0xa6, 0xff, 0xc0, 0x3b, 0xff, 0x6c, 0x0c, 0x3a, 0xce, 0x02, 0xdb, 0x8e,
	0x3c, 0x32, 0xc3, 0xc0, 0x46, 0xe8, 0x0a, 0x4e, 0x42, 0xef, 0x50, 0xbf, 0xc8, 0x1d, 0xea, 0x17,
	0x68, 0x0d, 0x9e, 0x71, 0x30, 0x17, 0xa6, 0xcf, 0x82, 0xf6, 0xdd, 0x34, 0x83, 0x41, 0x21, 0x4a,
	0x1d, 0x45, 0x0f, 0xa7, 0x08, 0x3d, 0x9e, 0x22, 0xf4, 0xcd, 0x78, 0x8a, 0xa8, 0xce, 0x04, 0x97,
	0xb6, 0xc2, 0x3b, 0xc1, 0xe9, 0xe2, 0x37, 0xa7, 0xe1, 0xe4, 0xb3, 0x72, 0xd6, 0x59, 0xaa, 0x94,
	0xd1, 0x0f, 0x00, 0x16, 0x92, 0xf5, 0x18, 0x5d, 0x18, 0xf7, 0x9e, 0x13, 0x4d, 0x4a, 0x49, 0xa7,
	0xc8, 0x99, 0x46, 0x6f, 0x7d, 0x9e, 0x03, 0xdd, 0xaf, 0x8b, 0x67, 0x3b, 0x84, 0x97, 0x6c, 0x5a,
	0x62, 0x1e, 0xbd, 0xb6, 0x53, 0x6a, 0x53, 0xd7, 0x16, 0xd4, 0x2b, 0x79, 0x04, 0x37, 0xaf, 0xff,
	0xf4, 0xfb, 0x47, 0xb9, 0x4b, 0x68, 0xcd, 0x60, 0x7e, 0xdd, 0xb1, 0x1b, 0x46, 0x2f, 0x30, 0xdc,
	0xd8, 0xed, 0xad, 0xdf, 0xec, 0xcd, 0x3e, 0xdc, 0xd8, 0xed, 0x8b, 0x77, 0x20, 0x39, 0x68, 0x64,
	0x1c, 0xfd, 0x02, 0xe0, 0x74, 0x7f, 0xe9, 0x42, 0x8f, 0xa5, 0x00, 0x1b, 0x56, 0x66, 0x25, 0xad,
	0x2a, 0x67, 0x9a, 0x97, 0xce, 0xb3, 0xcb, 0xa8, 0x9c, 0x89, 0x67, 0x06, 0x6b, 0xb6, 0xd0, 0x57,
	0x00, 0x4e, 0xf6, 0xea, 0x1d, 0xba, 0x67, 0xd1, 0x90, 0xa1, 0x4a, 0xa1, 0xc5, 0x99, 0xe6, 0x44,
	0xde, 0x28, 0x43, 0xbd, 0xb9, 0xea, 0xd9, 0x82, 0x48, 0x77, 0x56, 0xd0, 0xf2, 0x91, 0xdd, 0xa1,
	0x3d, 0xe4, 0x41, 0xe2, 0x25, 0x6b, 0xd7, 0xe8, 0xc4, 0x1b, 0xa8, 0xc0, 0x4a, 0x3a, 0xc5, 0x20,
	0xf1, 0x52, 0x38, 0x73, 0x59, 0x5b, 0xfb, 0xd7, 0xce, 0x18, 0xcc, 0xe7, 0xdb, 0x4f, 0x81, 0xc7,
	0xd1, 0x77, 0x00, 0x4e, 0x25, 0x2a, 0x1e, 0x7a, 0xf4, 0x9e, 0x48, 0x65, 0xa9, 0x55, 0x52, 0xe9,
	0x71, 0xa6, 0xb9, 0x29, 0x1c, 0x7a, 0x4e, 0x5b, 0xcd, 0xc0, 0x21, 0xca, 0x02, 0x7f, 0xfe, 0x06,
	0x70, 0x76, 0x9d, 0x88, 0x21, 0x53, 0x2a, 0x1a, 0x39, 0x1a, 0x0e, 0x1f, 0x69, 0xd3, 0x57, 0x8b,
	0xf7, 0x41, 0xba, 0x47, 0xd5, 0xd0, 0x5e, 0x3d, 0xb2, 0x9f, 0xd1, 0x8c, 0xc4, 0x8d, 0xdd, 0xe4,
	0x04, 0x35, 0x50, 0x46, 0x02, 0x02, 0xde, 0xcb, 0xc1, 0xe2, 0x50, 0x02, 0x82, 0x9a, 0xf2, 0x64,
	0x7a, 0x0a, 0xee, 0xbf, 0xb4, 0x7c, 0x90, 0x92, 0x86, 0x96, 0x86, 0x1f, 0x28, 0x0d, 0x41, 0xcd,
	0x09, 0x98, 0x78, 0x37, 0x07, 0x95, 0x75, 0x22, 0x46, 0xf4, 0x39, 0xb4, 0x98, 0xc2, 0xb3, 0x81,
	0xb6, 0xad, 0xdc, 0xf7, 0x1d, 0xce, 0xb4, 0xb7, 0xd3, 0xb1, 0xf2, 0x92, 0x56, 0xcb, 0xa6, 0xe2,
	0xf6, 0x75, 0xee, 0x80, 0x87, 0x5f, 0x01, 0x9c, 0x0e, 0x32, 0x22, 0xd1, 0x98, 0x47, 0xbe, 0xde,
	0xfe, 0xff, 0x33, 0x95, 0x54, 0x7a, 0x9c, 0x69, 0x6f, 0xa4, 0xf3, 0x71, 0x0b, 0x65, 0xe3, 0x23,
	0x37, 0x92, 0x93, 0x87, 0xf2, 0xc4, 0xde, 0x4d, 0x90, 0xff, 0xf1, 0x26, 0x38, 0x37, 0xaa, 0x24,
	0xd5, 0x5f, 0x23, 0x0d, 0x71, 0xfd, 0xfb, 0x62, 0xee, 0x34, 0x58, 0x7e, 0xeb, 0xf6, 0xbe, 0x3a,
	0xf1, 0xf3, 0xbe, 0x3a, 0x71, 0x77, 0x5f, 0x05, 0xef, 0x74, 0x55, 0xf0, 0x69, 0x57, 0x05, 0xb7,
	0xba, 0x2a, 0xb8, 0xdd, 0x55, 0xc1, 0x6f, 0x5d, 0x15, 0xfc, 0xd1, 0x55, 0x27, 0xee, 0x76, 0x55,
	0xf0, 0xe1, 0x1d, 0x75, 0x62, 0xef, 0x8e, 0x0a, 0x5e, 0xd9, 0xb0, 0x28, 0x7b, 0xdd, 0xd2, 0x3b,
	0xd4, 0x11, 0xc4, 0xf3, 0xb0, 0xee, 0x73, 0x43, 0x2e, 0x5a, 0xd4, 0x6b, 0x07, 0x9e, 0x76, 0xec,
	0x26, 0xf1, 0x4a, 0xb1, 0xd8, 0x60, 0x75, 0x8b, 0x1a, 0xe4, 0x9a, 0x88, 0x7e, 0x9e, 0x18, 0xf8,
	0x11, 0xa4, 0x7e, 0x42, 0x0e, 0x3c, 0x17, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0xc4, 0x5d, 0x12,
	0xf2, 0xd4, 0x11, 0x00, 0x00,
}
