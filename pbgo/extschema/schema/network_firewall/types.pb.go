// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/network_firewall/types.proto

package network_firewall

import (
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"

	fmt "fmt"

	math "math"

	_ "github.com/gogo/protobuf/gogoproto"

	_ "github.com/gogo/protobuf/types"

	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"

	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"

	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"

	ves_io_schema4 "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"

	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"

	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"

	ves_io_schema_views "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/views"

	strings "strings"

	reflect "reflect"

	io "io"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Active Network Policies Type
//
// x-displayName: "Active Network Policies Type"
// List of network policy views.
type ActiveNetworkPoliciesType struct {
	// Network Policy
	//
	// x-displayName: "Network Policy"
	// x-required
	// Ordered List of Network Policies active for this network firewall
	NetworkPolicies []*ves_io_schema_views.ObjectRefType `protobuf:"bytes,1,rep,name=network_policies,json=networkPolicies" json:"network_policies,omitempty"`
}

func (m *ActiveNetworkPoliciesType) Reset()                    { *m = ActiveNetworkPoliciesType{} }
func (*ActiveNetworkPoliciesType) ProtoMessage()               {}
func (*ActiveNetworkPoliciesType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{0} }

func (m *ActiveNetworkPoliciesType) GetNetworkPolicies() []*ves_io_schema_views.ObjectRefType {
	if m != nil {
		return m.NetworkPolicies
	}
	return nil
}

// Active Forward Proxy Policies Type
//
// x-displayName: "Active Forward Proxy Policies Type"
// List of forward proxy policy views.
type ActiveForwardProxyPoliciesType struct {
	// Forward Proxy Policies
	//
	// x-displayName: "Forward Proxy Policies"
	// x-required
	// Ordered List of Network Policies active for this network firewall
	ForwardProxyPolicies []*ves_io_schema_views.ObjectRefType `protobuf:"bytes,1,rep,name=forward_proxy_policies,json=forwardProxyPolicies" json:"forward_proxy_policies,omitempty"`
}

func (m *ActiveForwardProxyPoliciesType) Reset()      { *m = ActiveForwardProxyPoliciesType{} }
func (*ActiveForwardProxyPoliciesType) ProtoMessage() {}
func (*ActiveForwardProxyPoliciesType) Descriptor() ([]byte, []int) {
	return fileDescriptorTypes, []int{1}
}

func (m *ActiveForwardProxyPoliciesType) GetForwardProxyPolicies() []*ves_io_schema_views.ObjectRefType {
	if m != nil {
		return m.ForwardProxyPolicies
	}
	return nil
}

// Active Fast ACL Type
//
// x-displayName: "Active Fast ACL(s)"
// List of network policy views.
type ActiveFastACLsType struct {
	// Fast ACL
	//
	// x-displayName: "Fast ACL(s)"
	// x-required
	// Ordered List of Fast ACL(s) active for this network firewall
	FastAcls []*ves_io_schema_views.ObjectRefType `protobuf:"bytes,1,rep,name=fast_acls,json=fastAcls" json:"fast_acls,omitempty"`
}

func (m *ActiveFastACLsType) Reset()                    { *m = ActiveFastACLsType{} }
func (*ActiveFastACLsType) ProtoMessage()               {}
func (*ActiveFastACLsType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{2} }

func (m *ActiveFastACLsType) GetFastAcls() []*ves_io_schema_views.ObjectRefType {
	if m != nil {
		return m.FastAcls
	}
	return nil
}

// Network Firewall Specification
//
// x-displayName: "Specification"
// Global spec, desired state of the network firewall
type GlobalSpecType struct {
	// Network Policy Set
	//
	// x-displayName: "Network Policy Set (Legacy)"
	// L3/L4 firewall (Legacy Mode)
	// Network Policy set to be used as firewall for the fleet where this firewall is attached
	// Currently, Network Policy is applied for following Virtual Networks in a site,
	//    - Site Local Inside
	//    - Site Local
	NetworkPolicySet []*ves_io_schema4.ObjectRefType `protobuf:"bytes,1,rep,name=network_policy_set,json=networkPolicySet" json:"network_policy_set,omitempty"`
	// Forward proxy policy set
	//
	// x-displayName: "Forward Proxy (Service) Policy Set (Legacy)"
	// L7 firewall for forward proxy. Assign service_policy_set to be used for forward proxies in this firewall.
	ForwardProxyPolicySet []*ves_io_schema4.ObjectRefType `protobuf:"bytes,2,rep,name=forward_proxy_policy_set,json=forwardProxyPolicySet" json:"forward_proxy_policy_set,omitempty"`
	// Fast ACL Set
	//
	// x-displayName: "Fast ACL Set (Legacy)"
	// Fast ACL set defined for the fleet. Fast ACL set is applied for all sites that are member of the fleet.
	// The list of Virtual Networks / Interfaces is selected by the Fast ACL set object
	FastAclSet []*ves_io_schema4.ObjectRefType `protobuf:"bytes,4,rep,name=fast_acl_set,json=fastAclSet" json:"fast_acl_set,omitempty"`
	// Internal Network Policy Config Mode
	//
	// x-displayName: "Internal Network Policy Config Mode"
	// Internal
	//
	// Types that are valid to be assigned to NetworkPolicyConfigMode:
	//	*GlobalSpecType_DisableNetworkPolicy
	//	*GlobalSpecType_ActiveNetworkPolicies
	//	*GlobalSpecType_NetworkPolicyLegacyMode
	NetworkPolicyConfigMode isGlobalSpecType_NetworkPolicyConfigMode `protobuf_oneof:"network_policy_config_mode"`
	// Internal Forward Proxy Policy Config Mode
	//
	// x-displayName: "Internal Forward Proxy PolicyConfig Mode"
	//
	// Types that are valid to be assigned to ForwardProxyPolicyConfigMode:
	//	*GlobalSpecType_DisableForwardProxyPolicy
	//	*GlobalSpecType_ActiveForwardProxyPolicies
	//	*GlobalSpecType_ForwardProxyPolicyLegacyMode
	ForwardProxyPolicyConfigMode isGlobalSpecType_ForwardProxyPolicyConfigMode `protobuf_oneof:"forward_proxy_policy_config_mode"`
	// Internal Fast ACL config Mode
	//
	// x-displayName: "Internal Fast ACL config Mode"
	// Internal
	//
	// Types that are valid to be assigned to FastAclConfigMode:
	//	*GlobalSpecType_DisableFastAcl
	//	*GlobalSpecType_ActiveFastAcls
	//	*GlobalSpecType_FastAclLegacyMode
	FastAclConfigMode isGlobalSpecType_FastAclConfigMode `protobuf_oneof:"fast_acl_config_mode"`
	// view_internal
	//
	// x-displayName: "View Internal"
	// Reference to view internal object
	ViewInternal *ves_io_schema_views.ObjectRefType `protobuf:"bytes,1000,opt,name=view_internal,json=viewInternal" json:"view_internal,omitempty"`
}

func (m *GlobalSpecType) Reset()                    { *m = GlobalSpecType{} }
func (*GlobalSpecType) ProtoMessage()               {}
func (*GlobalSpecType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{3} }

type isGlobalSpecType_NetworkPolicyConfigMode interface {
	isGlobalSpecType_NetworkPolicyConfigMode()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGlobalSpecType_ForwardProxyPolicyConfigMode interface {
	isGlobalSpecType_ForwardProxyPolicyConfigMode()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGlobalSpecType_FastAclConfigMode interface {
	isGlobalSpecType_FastAclConfigMode()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type GlobalSpecType_DisableNetworkPolicy struct {
	DisableNetworkPolicy *ves_io_schema4.Empty `protobuf:"bytes,6,opt,name=disable_network_policy,json=disableNetworkPolicy,oneof"`
}
type GlobalSpecType_ActiveNetworkPolicies struct {
	ActiveNetworkPolicies *ActiveNetworkPoliciesType `protobuf:"bytes,7,opt,name=active_network_policies,json=activeNetworkPolicies,oneof"`
}
type GlobalSpecType_NetworkPolicyLegacyMode struct {
	NetworkPolicyLegacyMode *ves_io_schema4.Empty `protobuf:"bytes,12,opt,name=network_policy_legacy_mode,json=networkPolicyLegacyMode,oneof"`
}
type GlobalSpecType_DisableForwardProxyPolicy struct {
	DisableForwardProxyPolicy *ves_io_schema4.Empty `protobuf:"bytes,9,opt,name=disable_forward_proxy_policy,json=disableForwardProxyPolicy,oneof"`
}
type GlobalSpecType_ActiveForwardProxyPolicies struct {
	ActiveForwardProxyPolicies *ActiveForwardProxyPoliciesType `protobuf:"bytes,10,opt,name=active_forward_proxy_policies,json=activeForwardProxyPolicies,oneof"`
}
type GlobalSpecType_ForwardProxyPolicyLegacyMode struct {
	ForwardProxyPolicyLegacyMode *ves_io_schema4.Empty `protobuf:"bytes,14,opt,name=forward_proxy_policy_legacy_mode,json=forwardProxyPolicyLegacyMode,oneof"`
}
type GlobalSpecType_DisableFastAcl struct {
	DisableFastAcl *ves_io_schema4.Empty `protobuf:"bytes,16,opt,name=disable_fast_acl,json=disableFastAcl,oneof"`
}
type GlobalSpecType_ActiveFastAcls struct {
	ActiveFastAcls *ActiveFastACLsType `protobuf:"bytes,17,opt,name=active_fast_acls,json=activeFastAcls,oneof"`
}
type GlobalSpecType_FastAclLegacyMode struct {
	FastAclLegacyMode *ves_io_schema4.Empty `protobuf:"bytes,18,opt,name=fast_acl_legacy_mode,json=fastAclLegacyMode,oneof"`
}

func (*GlobalSpecType_DisableNetworkPolicy) isGlobalSpecType_NetworkPolicyConfigMode()              {}
func (*GlobalSpecType_ActiveNetworkPolicies) isGlobalSpecType_NetworkPolicyConfigMode()             {}
func (*GlobalSpecType_NetworkPolicyLegacyMode) isGlobalSpecType_NetworkPolicyConfigMode()           {}
func (*GlobalSpecType_DisableForwardProxyPolicy) isGlobalSpecType_ForwardProxyPolicyConfigMode()    {}
func (*GlobalSpecType_ActiveForwardProxyPolicies) isGlobalSpecType_ForwardProxyPolicyConfigMode()   {}
func (*GlobalSpecType_ForwardProxyPolicyLegacyMode) isGlobalSpecType_ForwardProxyPolicyConfigMode() {}
func (*GlobalSpecType_DisableFastAcl) isGlobalSpecType_FastAclConfigMode()                          {}
func (*GlobalSpecType_ActiveFastAcls) isGlobalSpecType_FastAclConfigMode()                          {}
func (*GlobalSpecType_FastAclLegacyMode) isGlobalSpecType_FastAclConfigMode()                       {}

func (m *GlobalSpecType) GetNetworkPolicyConfigMode() isGlobalSpecType_NetworkPolicyConfigMode {
	if m != nil {
		return m.NetworkPolicyConfigMode
	}
	return nil
}
func (m *GlobalSpecType) GetForwardProxyPolicyConfigMode() isGlobalSpecType_ForwardProxyPolicyConfigMode {
	if m != nil {
		return m.ForwardProxyPolicyConfigMode
	}
	return nil
}
func (m *GlobalSpecType) GetFastAclConfigMode() isGlobalSpecType_FastAclConfigMode {
	if m != nil {
		return m.FastAclConfigMode
	}
	return nil
}

func (m *GlobalSpecType) GetNetworkPolicySet() []*ves_io_schema4.ObjectRefType {
	if m != nil {
		return m.NetworkPolicySet
	}
	return nil
}

func (m *GlobalSpecType) GetForwardProxyPolicySet() []*ves_io_schema4.ObjectRefType {
	if m != nil {
		return m.ForwardProxyPolicySet
	}
	return nil
}

func (m *GlobalSpecType) GetFastAclSet() []*ves_io_schema4.ObjectRefType {
	if m != nil {
		return m.FastAclSet
	}
	return nil
}

func (m *GlobalSpecType) GetDisableNetworkPolicy() *ves_io_schema4.Empty {
	if x, ok := m.GetNetworkPolicyConfigMode().(*GlobalSpecType_DisableNetworkPolicy); ok {
		return x.DisableNetworkPolicy
	}
	return nil
}

func (m *GlobalSpecType) GetActiveNetworkPolicies() *ActiveNetworkPoliciesType {
	if x, ok := m.GetNetworkPolicyConfigMode().(*GlobalSpecType_ActiveNetworkPolicies); ok {
		return x.ActiveNetworkPolicies
	}
	return nil
}

func (m *GlobalSpecType) GetNetworkPolicyLegacyMode() *ves_io_schema4.Empty {
	if x, ok := m.GetNetworkPolicyConfigMode().(*GlobalSpecType_NetworkPolicyLegacyMode); ok {
		return x.NetworkPolicyLegacyMode
	}
	return nil
}

func (m *GlobalSpecType) GetDisableForwardProxyPolicy() *ves_io_schema4.Empty {
	if x, ok := m.GetForwardProxyPolicyConfigMode().(*GlobalSpecType_DisableForwardProxyPolicy); ok {
		return x.DisableForwardProxyPolicy
	}
	return nil
}

func (m *GlobalSpecType) GetActiveForwardProxyPolicies() *ActiveForwardProxyPoliciesType {
	if x, ok := m.GetForwardProxyPolicyConfigMode().(*GlobalSpecType_ActiveForwardProxyPolicies); ok {
		return x.ActiveForwardProxyPolicies
	}
	return nil
}

func (m *GlobalSpecType) GetForwardProxyPolicyLegacyMode() *ves_io_schema4.Empty {
	if x, ok := m.GetForwardProxyPolicyConfigMode().(*GlobalSpecType_ForwardProxyPolicyLegacyMode); ok {
		return x.ForwardProxyPolicyLegacyMode
	}
	return nil
}

func (m *GlobalSpecType) GetDisableFastAcl() *ves_io_schema4.Empty {
	if x, ok := m.GetFastAclConfigMode().(*GlobalSpecType_DisableFastAcl); ok {
		return x.DisableFastAcl
	}
	return nil
}

func (m *GlobalSpecType) GetActiveFastAcls() *ActiveFastACLsType {
	if x, ok := m.GetFastAclConfigMode().(*GlobalSpecType_ActiveFastAcls); ok {
		return x.ActiveFastAcls
	}
	return nil
}

func (m *GlobalSpecType) GetFastAclLegacyMode() *ves_io_schema4.Empty {
	if x, ok := m.GetFastAclConfigMode().(*GlobalSpecType_FastAclLegacyMode); ok {
		return x.FastAclLegacyMode
	}
	return nil
}

func (m *GlobalSpecType) GetViewInternal() *ves_io_schema_views.ObjectRefType {
	if m != nil {
		return m.ViewInternal
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GlobalSpecType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GlobalSpecType_OneofMarshaler, _GlobalSpecType_OneofUnmarshaler, _GlobalSpecType_OneofSizer, []interface{}{
		(*GlobalSpecType_DisableNetworkPolicy)(nil),
		(*GlobalSpecType_ActiveNetworkPolicies)(nil),
		(*GlobalSpecType_NetworkPolicyLegacyMode)(nil),
		(*GlobalSpecType_DisableForwardProxyPolicy)(nil),
		(*GlobalSpecType_ActiveForwardProxyPolicies)(nil),
		(*GlobalSpecType_ForwardProxyPolicyLegacyMode)(nil),
		(*GlobalSpecType_DisableFastAcl)(nil),
		(*GlobalSpecType_ActiveFastAcls)(nil),
		(*GlobalSpecType_FastAclLegacyMode)(nil),
	}
}

func _GlobalSpecType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GlobalSpecType)
	// network_policy_config_mode
	switch x := m.NetworkPolicyConfigMode.(type) {
	case *GlobalSpecType_DisableNetworkPolicy:
		_ = b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DisableNetworkPolicy); err != nil {
			return err
		}
	case *GlobalSpecType_ActiveNetworkPolicies:
		_ = b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActiveNetworkPolicies); err != nil {
			return err
		}
	case *GlobalSpecType_NetworkPolicyLegacyMode:
		_ = b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NetworkPolicyLegacyMode); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GlobalSpecType.NetworkPolicyConfigMode has unexpected type %T", x)
	}
	// forward_proxy_policy_config_mode
	switch x := m.ForwardProxyPolicyConfigMode.(type) {
	case *GlobalSpecType_DisableForwardProxyPolicy:
		_ = b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DisableForwardProxyPolicy); err != nil {
			return err
		}
	case *GlobalSpecType_ActiveForwardProxyPolicies:
		_ = b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActiveForwardProxyPolicies); err != nil {
			return err
		}
	case *GlobalSpecType_ForwardProxyPolicyLegacyMode:
		_ = b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ForwardProxyPolicyLegacyMode); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GlobalSpecType.ForwardProxyPolicyConfigMode has unexpected type %T", x)
	}
	// fast_acl_config_mode
	switch x := m.FastAclConfigMode.(type) {
	case *GlobalSpecType_DisableFastAcl:
		_ = b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DisableFastAcl); err != nil {
			return err
		}
	case *GlobalSpecType_ActiveFastAcls:
		_ = b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActiveFastAcls); err != nil {
			return err
		}
	case *GlobalSpecType_FastAclLegacyMode:
		_ = b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FastAclLegacyMode); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GlobalSpecType.FastAclConfigMode has unexpected type %T", x)
	}
	return nil
}

func _GlobalSpecType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GlobalSpecType)
	switch tag {
	case 6: // network_policy_config_mode.disable_network_policy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.NetworkPolicyConfigMode = &GlobalSpecType_DisableNetworkPolicy{msg}
		return true, err
	case 7: // network_policy_config_mode.active_network_policies
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ActiveNetworkPoliciesType)
		err := b.DecodeMessage(msg)
		m.NetworkPolicyConfigMode = &GlobalSpecType_ActiveNetworkPolicies{msg}
		return true, err
	case 12: // network_policy_config_mode.network_policy_legacy_mode
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.NetworkPolicyConfigMode = &GlobalSpecType_NetworkPolicyLegacyMode{msg}
		return true, err
	case 9: // forward_proxy_policy_config_mode.disable_forward_proxy_policy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.ForwardProxyPolicyConfigMode = &GlobalSpecType_DisableForwardProxyPolicy{msg}
		return true, err
	case 10: // forward_proxy_policy_config_mode.active_forward_proxy_policies
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ActiveForwardProxyPoliciesType)
		err := b.DecodeMessage(msg)
		m.ForwardProxyPolicyConfigMode = &GlobalSpecType_ActiveForwardProxyPolicies{msg}
		return true, err
	case 14: // forward_proxy_policy_config_mode.forward_proxy_policy_legacy_mode
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.ForwardProxyPolicyConfigMode = &GlobalSpecType_ForwardProxyPolicyLegacyMode{msg}
		return true, err
	case 16: // fast_acl_config_mode.disable_fast_acl
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.FastAclConfigMode = &GlobalSpecType_DisableFastAcl{msg}
		return true, err
	case 17: // fast_acl_config_mode.active_fast_acls
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ActiveFastACLsType)
		err := b.DecodeMessage(msg)
		m.FastAclConfigMode = &GlobalSpecType_ActiveFastAcls{msg}
		return true, err
	case 18: // fast_acl_config_mode.fast_acl_legacy_mode
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.FastAclConfigMode = &GlobalSpecType_FastAclLegacyMode{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GlobalSpecType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GlobalSpecType)
	// network_policy_config_mode
	switch x := m.NetworkPolicyConfigMode.(type) {
	case *GlobalSpecType_DisableNetworkPolicy:
		s := proto.Size(x.DisableNetworkPolicy)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GlobalSpecType_ActiveNetworkPolicies:
		s := proto.Size(x.ActiveNetworkPolicies)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GlobalSpecType_NetworkPolicyLegacyMode:
		s := proto.Size(x.NetworkPolicyLegacyMode)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// forward_proxy_policy_config_mode
	switch x := m.ForwardProxyPolicyConfigMode.(type) {
	case *GlobalSpecType_DisableForwardProxyPolicy:
		s := proto.Size(x.DisableForwardProxyPolicy)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GlobalSpecType_ActiveForwardProxyPolicies:
		s := proto.Size(x.ActiveForwardProxyPolicies)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GlobalSpecType_ForwardProxyPolicyLegacyMode:
		s := proto.Size(x.ForwardProxyPolicyLegacyMode)
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// fast_acl_config_mode
	switch x := m.FastAclConfigMode.(type) {
	case *GlobalSpecType_DisableFastAcl:
		s := proto.Size(x.DisableFastAcl)
		n += proto.SizeVarint(16<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GlobalSpecType_ActiveFastAcls:
		s := proto.Size(x.ActiveFastAcls)
		n += proto.SizeVarint(17<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GlobalSpecType_FastAclLegacyMode:
		s := proto.Size(x.FastAclLegacyMode)
		n += proto.SizeVarint(18<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Create network firewall
//
// x-displayName: "Create Network Firewall"
// network firewall is created by users in system namespace
type CreateSpecType struct {
	// Network Policy List Configuration
	//
	// x-displayName: "Select Network Policy Configuration"
	// x-required
	// Active Network Policies can be configured via network policy set or inline.
	//
	// Types that are valid to be assigned to NetworkPolicyChoice:
	//	*CreateSpecType_DisableNetworkPolicy
	//	*CreateSpecType_ActiveNetworkPolicies
	//	*CreateSpecType_NetworkPolicySet
	NetworkPolicyChoice isCreateSpecType_NetworkPolicyChoice `protobuf_oneof:"network_policy_choice"`
	// Forward Proxy Policy List Configuration
	//
	// x-displayName: "Select Forward Policy Configuration"
	// x-required
	// Active Forward Proxy Policies can be configured via service policy set or inline.
	//
	// Types that are valid to be assigned to ForwardProxyPolicyChoice:
	//	*CreateSpecType_DisableForwardProxyPolicy
	//	*CreateSpecType_ActiveForwardProxyPolicies
	//	*CreateSpecType_ForwardProxyPolicySet
	ForwardProxyPolicyChoice isCreateSpecType_ForwardProxyPolicyChoice `protobuf_oneof:"forward_proxy_policy_choice"`
	// Active Fast ACL(s) Configuration
	//
	// x-displayName: "Select Fast ACL Configuration"
	// x-required
	// Active fast acls can be configured via fast acl set or inline.
	//
	// Types that are valid to be assigned to FastAclChoice:
	//	*CreateSpecType_DisableFastAcl
	//	*CreateSpecType_ActiveFastAcls
	//	*CreateSpecType_FastAclSet
	FastAclChoice isCreateSpecType_FastAclChoice `protobuf_oneof:"fast_acl_choice"`
}

func (m *CreateSpecType) Reset()                    { *m = CreateSpecType{} }
func (*CreateSpecType) ProtoMessage()               {}
func (*CreateSpecType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{4} }

type isCreateSpecType_NetworkPolicyChoice interface {
	isCreateSpecType_NetworkPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isCreateSpecType_ForwardProxyPolicyChoice interface {
	isCreateSpecType_ForwardProxyPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isCreateSpecType_FastAclChoice interface {
	isCreateSpecType_FastAclChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type CreateSpecType_DisableNetworkPolicy struct {
	DisableNetworkPolicy *ves_io_schema4.Empty `protobuf:"bytes,21,opt,name=disable_network_policy,json=disableNetworkPolicy,oneof"`
}
type CreateSpecType_ActiveNetworkPolicies struct {
	ActiveNetworkPolicies *ActiveNetworkPoliciesType `protobuf:"bytes,22,opt,name=active_network_policies,json=activeNetworkPolicies,oneof"`
}
type CreateSpecType_NetworkPolicySet struct {
	NetworkPolicySet *ves_io_schema_views.ObjectRefType `protobuf:"bytes,23,opt,name=network_policy_set,json=networkPolicySet,oneof"`
}
type CreateSpecType_DisableForwardProxyPolicy struct {
	DisableForwardProxyPolicy *ves_io_schema4.Empty `protobuf:"bytes,25,opt,name=disable_forward_proxy_policy,json=disableForwardProxyPolicy,oneof"`
}
type CreateSpecType_ActiveForwardProxyPolicies struct {
	ActiveForwardProxyPolicies *ActiveForwardProxyPoliciesType `protobuf:"bytes,26,opt,name=active_forward_proxy_policies,json=activeForwardProxyPolicies,oneof"`
}
type CreateSpecType_ForwardProxyPolicySet struct {
	ForwardProxyPolicySet *ves_io_schema_views.ObjectRefType `protobuf:"bytes,27,opt,name=forward_proxy_policy_set,json=forwardProxyPolicySet,oneof"`
}
type CreateSpecType_DisableFastAcl struct {
	DisableFastAcl *ves_io_schema4.Empty `protobuf:"bytes,29,opt,name=disable_fast_acl,json=disableFastAcl,oneof"`
}
type CreateSpecType_ActiveFastAcls struct {
	ActiveFastAcls *ActiveFastACLsType `protobuf:"bytes,30,opt,name=active_fast_acls,json=activeFastAcls,oneof"`
}
type CreateSpecType_FastAclSet struct {
	FastAclSet *ves_io_schema_views.ObjectRefType `protobuf:"bytes,31,opt,name=fast_acl_set,json=fastAclSet,oneof"`
}

func (*CreateSpecType_DisableNetworkPolicy) isCreateSpecType_NetworkPolicyChoice()            {}
func (*CreateSpecType_ActiveNetworkPolicies) isCreateSpecType_NetworkPolicyChoice()           {}
func (*CreateSpecType_NetworkPolicySet) isCreateSpecType_NetworkPolicyChoice()                {}
func (*CreateSpecType_DisableForwardProxyPolicy) isCreateSpecType_ForwardProxyPolicyChoice()  {}
func (*CreateSpecType_ActiveForwardProxyPolicies) isCreateSpecType_ForwardProxyPolicyChoice() {}
func (*CreateSpecType_ForwardProxyPolicySet) isCreateSpecType_ForwardProxyPolicyChoice()      {}
func (*CreateSpecType_DisableFastAcl) isCreateSpecType_FastAclChoice()                        {}
func (*CreateSpecType_ActiveFastAcls) isCreateSpecType_FastAclChoice()                        {}
func (*CreateSpecType_FastAclSet) isCreateSpecType_FastAclChoice()                            {}

func (m *CreateSpecType) GetNetworkPolicyChoice() isCreateSpecType_NetworkPolicyChoice {
	if m != nil {
		return m.NetworkPolicyChoice
	}
	return nil
}
func (m *CreateSpecType) GetForwardProxyPolicyChoice() isCreateSpecType_ForwardProxyPolicyChoice {
	if m != nil {
		return m.ForwardProxyPolicyChoice
	}
	return nil
}
func (m *CreateSpecType) GetFastAclChoice() isCreateSpecType_FastAclChoice {
	if m != nil {
		return m.FastAclChoice
	}
	return nil
}

func (m *CreateSpecType) GetDisableNetworkPolicy() *ves_io_schema4.Empty {
	if x, ok := m.GetNetworkPolicyChoice().(*CreateSpecType_DisableNetworkPolicy); ok {
		return x.DisableNetworkPolicy
	}
	return nil
}

func (m *CreateSpecType) GetActiveNetworkPolicies() *ActiveNetworkPoliciesType {
	if x, ok := m.GetNetworkPolicyChoice().(*CreateSpecType_ActiveNetworkPolicies); ok {
		return x.ActiveNetworkPolicies
	}
	return nil
}

func (m *CreateSpecType) GetNetworkPolicySet() *ves_io_schema_views.ObjectRefType {
	if x, ok := m.GetNetworkPolicyChoice().(*CreateSpecType_NetworkPolicySet); ok {
		return x.NetworkPolicySet
	}
	return nil
}

func (m *CreateSpecType) GetDisableForwardProxyPolicy() *ves_io_schema4.Empty {
	if x, ok := m.GetForwardProxyPolicyChoice().(*CreateSpecType_DisableForwardProxyPolicy); ok {
		return x.DisableForwardProxyPolicy
	}
	return nil
}

func (m *CreateSpecType) GetActiveForwardProxyPolicies() *ActiveForwardProxyPoliciesType {
	if x, ok := m.GetForwardProxyPolicyChoice().(*CreateSpecType_ActiveForwardProxyPolicies); ok {
		return x.ActiveForwardProxyPolicies
	}
	return nil
}

func (m *CreateSpecType) GetForwardProxyPolicySet() *ves_io_schema_views.ObjectRefType {
	if x, ok := m.GetForwardProxyPolicyChoice().(*CreateSpecType_ForwardProxyPolicySet); ok {
		return x.ForwardProxyPolicySet
	}
	return nil
}

func (m *CreateSpecType) GetDisableFastAcl() *ves_io_schema4.Empty {
	if x, ok := m.GetFastAclChoice().(*CreateSpecType_DisableFastAcl); ok {
		return x.DisableFastAcl
	}
	return nil
}

func (m *CreateSpecType) GetActiveFastAcls() *ActiveFastACLsType {
	if x, ok := m.GetFastAclChoice().(*CreateSpecType_ActiveFastAcls); ok {
		return x.ActiveFastAcls
	}
	return nil
}

func (m *CreateSpecType) GetFastAclSet() *ves_io_schema_views.ObjectRefType {
	if x, ok := m.GetFastAclChoice().(*CreateSpecType_FastAclSet); ok {
		return x.FastAclSet
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CreateSpecType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CreateSpecType_OneofMarshaler, _CreateSpecType_OneofUnmarshaler, _CreateSpecType_OneofSizer, []interface{}{
		(*CreateSpecType_DisableNetworkPolicy)(nil),
		(*CreateSpecType_ActiveNetworkPolicies)(nil),
		(*CreateSpecType_NetworkPolicySet)(nil),
		(*CreateSpecType_DisableForwardProxyPolicy)(nil),
		(*CreateSpecType_ActiveForwardProxyPolicies)(nil),
		(*CreateSpecType_ForwardProxyPolicySet)(nil),
		(*CreateSpecType_DisableFastAcl)(nil),
		(*CreateSpecType_ActiveFastAcls)(nil),
		(*CreateSpecType_FastAclSet)(nil),
	}
}

func _CreateSpecType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CreateSpecType)
	// network_policy_choice
	switch x := m.NetworkPolicyChoice.(type) {
	case *CreateSpecType_DisableNetworkPolicy:
		_ = b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DisableNetworkPolicy); err != nil {
			return err
		}
	case *CreateSpecType_ActiveNetworkPolicies:
		_ = b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActiveNetworkPolicies); err != nil {
			return err
		}
	case *CreateSpecType_NetworkPolicySet:
		_ = b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NetworkPolicySet); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CreateSpecType.NetworkPolicyChoice has unexpected type %T", x)
	}
	// forward_proxy_policy_choice
	switch x := m.ForwardProxyPolicyChoice.(type) {
	case *CreateSpecType_DisableForwardProxyPolicy:
		_ = b.EncodeVarint(25<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DisableForwardProxyPolicy); err != nil {
			return err
		}
	case *CreateSpecType_ActiveForwardProxyPolicies:
		_ = b.EncodeVarint(26<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActiveForwardProxyPolicies); err != nil {
			return err
		}
	case *CreateSpecType_ForwardProxyPolicySet:
		_ = b.EncodeVarint(27<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ForwardProxyPolicySet); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CreateSpecType.ForwardProxyPolicyChoice has unexpected type %T", x)
	}
	// fast_acl_choice
	switch x := m.FastAclChoice.(type) {
	case *CreateSpecType_DisableFastAcl:
		_ = b.EncodeVarint(29<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DisableFastAcl); err != nil {
			return err
		}
	case *CreateSpecType_ActiveFastAcls:
		_ = b.EncodeVarint(30<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActiveFastAcls); err != nil {
			return err
		}
	case *CreateSpecType_FastAclSet:
		_ = b.EncodeVarint(31<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FastAclSet); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CreateSpecType.FastAclChoice has unexpected type %T", x)
	}
	return nil
}

func _CreateSpecType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CreateSpecType)
	switch tag {
	case 21: // network_policy_choice.disable_network_policy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.NetworkPolicyChoice = &CreateSpecType_DisableNetworkPolicy{msg}
		return true, err
	case 22: // network_policy_choice.active_network_policies
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ActiveNetworkPoliciesType)
		err := b.DecodeMessage(msg)
		m.NetworkPolicyChoice = &CreateSpecType_ActiveNetworkPolicies{msg}
		return true, err
	case 23: // network_policy_choice.network_policy_set
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views.ObjectRefType)
		err := b.DecodeMessage(msg)
		m.NetworkPolicyChoice = &CreateSpecType_NetworkPolicySet{msg}
		return true, err
	case 25: // forward_proxy_policy_choice.disable_forward_proxy_policy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.ForwardProxyPolicyChoice = &CreateSpecType_DisableForwardProxyPolicy{msg}
		return true, err
	case 26: // forward_proxy_policy_choice.active_forward_proxy_policies
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ActiveForwardProxyPoliciesType)
		err := b.DecodeMessage(msg)
		m.ForwardProxyPolicyChoice = &CreateSpecType_ActiveForwardProxyPolicies{msg}
		return true, err
	case 27: // forward_proxy_policy_choice.forward_proxy_policy_set
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views.ObjectRefType)
		err := b.DecodeMessage(msg)
		m.ForwardProxyPolicyChoice = &CreateSpecType_ForwardProxyPolicySet{msg}
		return true, err
	case 29: // fast_acl_choice.disable_fast_acl
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.FastAclChoice = &CreateSpecType_DisableFastAcl{msg}
		return true, err
	case 30: // fast_acl_choice.active_fast_acls
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ActiveFastACLsType)
		err := b.DecodeMessage(msg)
		m.FastAclChoice = &CreateSpecType_ActiveFastAcls{msg}
		return true, err
	case 31: // fast_acl_choice.fast_acl_set
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views.ObjectRefType)
		err := b.DecodeMessage(msg)
		m.FastAclChoice = &CreateSpecType_FastAclSet{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CreateSpecType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CreateSpecType)
	// network_policy_choice
	switch x := m.NetworkPolicyChoice.(type) {
	case *CreateSpecType_DisableNetworkPolicy:
		s := proto.Size(x.DisableNetworkPolicy)
		n += proto.SizeVarint(21<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CreateSpecType_ActiveNetworkPolicies:
		s := proto.Size(x.ActiveNetworkPolicies)
		n += proto.SizeVarint(22<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CreateSpecType_NetworkPolicySet:
		s := proto.Size(x.NetworkPolicySet)
		n += proto.SizeVarint(23<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// forward_proxy_policy_choice
	switch x := m.ForwardProxyPolicyChoice.(type) {
	case *CreateSpecType_DisableForwardProxyPolicy:
		s := proto.Size(x.DisableForwardProxyPolicy)
		n += proto.SizeVarint(25<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CreateSpecType_ActiveForwardProxyPolicies:
		s := proto.Size(x.ActiveForwardProxyPolicies)
		n += proto.SizeVarint(26<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CreateSpecType_ForwardProxyPolicySet:
		s := proto.Size(x.ForwardProxyPolicySet)
		n += proto.SizeVarint(27<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// fast_acl_choice
	switch x := m.FastAclChoice.(type) {
	case *CreateSpecType_DisableFastAcl:
		s := proto.Size(x.DisableFastAcl)
		n += proto.SizeVarint(29<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CreateSpecType_ActiveFastAcls:
		s := proto.Size(x.ActiveFastAcls)
		n += proto.SizeVarint(30<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CreateSpecType_FastAclSet:
		s := proto.Size(x.FastAclSet)
		n += proto.SizeVarint(31<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Replace network firewall
//
// x-displayName: "Replace Network Firewall"
// Replace network firewall  will replace the contains of given object
type ReplaceSpecType struct {
	// Network Policy List Configuration
	//
	// x-displayName: "Select Network Policy Configuration"
	// x-required
	// Active Network Policies can be configured via network policy set or inline.
	//
	// Types that are valid to be assigned to NetworkPolicyChoice:
	//	*ReplaceSpecType_DisableNetworkPolicy
	//	*ReplaceSpecType_ActiveNetworkPolicies
	//	*ReplaceSpecType_NetworkPolicySet
	NetworkPolicyChoice isReplaceSpecType_NetworkPolicyChoice `protobuf_oneof:"network_policy_choice"`
	// Forward Proxy Policy List Configuration
	//
	// x-displayName: "Select Forward Policy Configuration"
	// x-required
	// Active Forward Proxy Policies can be configured via service policy set or inline.
	//
	// Types that are valid to be assigned to ForwardProxyPolicyChoice:
	//	*ReplaceSpecType_DisableForwardProxyPolicy
	//	*ReplaceSpecType_ActiveForwardProxyPolicies
	//	*ReplaceSpecType_ForwardProxyPolicySet
	ForwardProxyPolicyChoice isReplaceSpecType_ForwardProxyPolicyChoice `protobuf_oneof:"forward_proxy_policy_choice"`
	// Active Fast ACL(s) Configuration
	//
	// x-displayName: "Select Fast ACL Configuration"
	// x-required
	// Active fast acls can be configured via fast acl set or inline.
	//
	// Types that are valid to be assigned to FastAclChoice:
	//	*ReplaceSpecType_DisableFastAcl
	//	*ReplaceSpecType_ActiveFastAcls
	//	*ReplaceSpecType_FastAclSet
	FastAclChoice isReplaceSpecType_FastAclChoice `protobuf_oneof:"fast_acl_choice"`
}

func (m *ReplaceSpecType) Reset()                    { *m = ReplaceSpecType{} }
func (*ReplaceSpecType) ProtoMessage()               {}
func (*ReplaceSpecType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{5} }

type isReplaceSpecType_NetworkPolicyChoice interface {
	isReplaceSpecType_NetworkPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isReplaceSpecType_ForwardProxyPolicyChoice interface {
	isReplaceSpecType_ForwardProxyPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isReplaceSpecType_FastAclChoice interface {
	isReplaceSpecType_FastAclChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type ReplaceSpecType_DisableNetworkPolicy struct {
	DisableNetworkPolicy *ves_io_schema4.Empty `protobuf:"bytes,21,opt,name=disable_network_policy,json=disableNetworkPolicy,oneof"`
}
type ReplaceSpecType_ActiveNetworkPolicies struct {
	ActiveNetworkPolicies *ActiveNetworkPoliciesType `protobuf:"bytes,22,opt,name=active_network_policies,json=activeNetworkPolicies,oneof"`
}
type ReplaceSpecType_NetworkPolicySet struct {
	NetworkPolicySet *ves_io_schema_views.ObjectRefType `protobuf:"bytes,23,opt,name=network_policy_set,json=networkPolicySet,oneof"`
}
type ReplaceSpecType_DisableForwardProxyPolicy struct {
	DisableForwardProxyPolicy *ves_io_schema4.Empty `protobuf:"bytes,25,opt,name=disable_forward_proxy_policy,json=disableForwardProxyPolicy,oneof"`
}
type ReplaceSpecType_ActiveForwardProxyPolicies struct {
	ActiveForwardProxyPolicies *ActiveForwardProxyPoliciesType `protobuf:"bytes,26,opt,name=active_forward_proxy_policies,json=activeForwardProxyPolicies,oneof"`
}
type ReplaceSpecType_ForwardProxyPolicySet struct {
	ForwardProxyPolicySet *ves_io_schema_views.ObjectRefType `protobuf:"bytes,27,opt,name=forward_proxy_policy_set,json=forwardProxyPolicySet,oneof"`
}
type ReplaceSpecType_DisableFastAcl struct {
	DisableFastAcl *ves_io_schema4.Empty `protobuf:"bytes,29,opt,name=disable_fast_acl,json=disableFastAcl,oneof"`
}
type ReplaceSpecType_ActiveFastAcls struct {
	ActiveFastAcls *ActiveFastACLsType `protobuf:"bytes,30,opt,name=active_fast_acls,json=activeFastAcls,oneof"`
}
type ReplaceSpecType_FastAclSet struct {
	FastAclSet *ves_io_schema_views.ObjectRefType `protobuf:"bytes,31,opt,name=fast_acl_set,json=fastAclSet,oneof"`
}

func (*ReplaceSpecType_DisableNetworkPolicy) isReplaceSpecType_NetworkPolicyChoice()            {}
func (*ReplaceSpecType_ActiveNetworkPolicies) isReplaceSpecType_NetworkPolicyChoice()           {}
func (*ReplaceSpecType_NetworkPolicySet) isReplaceSpecType_NetworkPolicyChoice()                {}
func (*ReplaceSpecType_DisableForwardProxyPolicy) isReplaceSpecType_ForwardProxyPolicyChoice()  {}
func (*ReplaceSpecType_ActiveForwardProxyPolicies) isReplaceSpecType_ForwardProxyPolicyChoice() {}
func (*ReplaceSpecType_ForwardProxyPolicySet) isReplaceSpecType_ForwardProxyPolicyChoice()      {}
func (*ReplaceSpecType_DisableFastAcl) isReplaceSpecType_FastAclChoice()                        {}
func (*ReplaceSpecType_ActiveFastAcls) isReplaceSpecType_FastAclChoice()                        {}
func (*ReplaceSpecType_FastAclSet) isReplaceSpecType_FastAclChoice()                            {}

func (m *ReplaceSpecType) GetNetworkPolicyChoice() isReplaceSpecType_NetworkPolicyChoice {
	if m != nil {
		return m.NetworkPolicyChoice
	}
	return nil
}
func (m *ReplaceSpecType) GetForwardProxyPolicyChoice() isReplaceSpecType_ForwardProxyPolicyChoice {
	if m != nil {
		return m.ForwardProxyPolicyChoice
	}
	return nil
}
func (m *ReplaceSpecType) GetFastAclChoice() isReplaceSpecType_FastAclChoice {
	if m != nil {
		return m.FastAclChoice
	}
	return nil
}

func (m *ReplaceSpecType) GetDisableNetworkPolicy() *ves_io_schema4.Empty {
	if x, ok := m.GetNetworkPolicyChoice().(*ReplaceSpecType_DisableNetworkPolicy); ok {
		return x.DisableNetworkPolicy
	}
	return nil
}

func (m *ReplaceSpecType) GetActiveNetworkPolicies() *ActiveNetworkPoliciesType {
	if x, ok := m.GetNetworkPolicyChoice().(*ReplaceSpecType_ActiveNetworkPolicies); ok {
		return x.ActiveNetworkPolicies
	}
	return nil
}

func (m *ReplaceSpecType) GetNetworkPolicySet() *ves_io_schema_views.ObjectRefType {
	if x, ok := m.GetNetworkPolicyChoice().(*ReplaceSpecType_NetworkPolicySet); ok {
		return x.NetworkPolicySet
	}
	return nil
}

func (m *ReplaceSpecType) GetDisableForwardProxyPolicy() *ves_io_schema4.Empty {
	if x, ok := m.GetForwardProxyPolicyChoice().(*ReplaceSpecType_DisableForwardProxyPolicy); ok {
		return x.DisableForwardProxyPolicy
	}
	return nil
}

func (m *ReplaceSpecType) GetActiveForwardProxyPolicies() *ActiveForwardProxyPoliciesType {
	if x, ok := m.GetForwardProxyPolicyChoice().(*ReplaceSpecType_ActiveForwardProxyPolicies); ok {
		return x.ActiveForwardProxyPolicies
	}
	return nil
}

func (m *ReplaceSpecType) GetForwardProxyPolicySet() *ves_io_schema_views.ObjectRefType {
	if x, ok := m.GetForwardProxyPolicyChoice().(*ReplaceSpecType_ForwardProxyPolicySet); ok {
		return x.ForwardProxyPolicySet
	}
	return nil
}

func (m *ReplaceSpecType) GetDisableFastAcl() *ves_io_schema4.Empty {
	if x, ok := m.GetFastAclChoice().(*ReplaceSpecType_DisableFastAcl); ok {
		return x.DisableFastAcl
	}
	return nil
}

func (m *ReplaceSpecType) GetActiveFastAcls() *ActiveFastACLsType {
	if x, ok := m.GetFastAclChoice().(*ReplaceSpecType_ActiveFastAcls); ok {
		return x.ActiveFastAcls
	}
	return nil
}

func (m *ReplaceSpecType) GetFastAclSet() *ves_io_schema_views.ObjectRefType {
	if x, ok := m.GetFastAclChoice().(*ReplaceSpecType_FastAclSet); ok {
		return x.FastAclSet
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ReplaceSpecType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ReplaceSpecType_OneofMarshaler, _ReplaceSpecType_OneofUnmarshaler, _ReplaceSpecType_OneofSizer, []interface{}{
		(*ReplaceSpecType_DisableNetworkPolicy)(nil),
		(*ReplaceSpecType_ActiveNetworkPolicies)(nil),
		(*ReplaceSpecType_NetworkPolicySet)(nil),
		(*ReplaceSpecType_DisableForwardProxyPolicy)(nil),
		(*ReplaceSpecType_ActiveForwardProxyPolicies)(nil),
		(*ReplaceSpecType_ForwardProxyPolicySet)(nil),
		(*ReplaceSpecType_DisableFastAcl)(nil),
		(*ReplaceSpecType_ActiveFastAcls)(nil),
		(*ReplaceSpecType_FastAclSet)(nil),
	}
}

func _ReplaceSpecType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ReplaceSpecType)
	// network_policy_choice
	switch x := m.NetworkPolicyChoice.(type) {
	case *ReplaceSpecType_DisableNetworkPolicy:
		_ = b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DisableNetworkPolicy); err != nil {
			return err
		}
	case *ReplaceSpecType_ActiveNetworkPolicies:
		_ = b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActiveNetworkPolicies); err != nil {
			return err
		}
	case *ReplaceSpecType_NetworkPolicySet:
		_ = b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NetworkPolicySet); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ReplaceSpecType.NetworkPolicyChoice has unexpected type %T", x)
	}
	// forward_proxy_policy_choice
	switch x := m.ForwardProxyPolicyChoice.(type) {
	case *ReplaceSpecType_DisableForwardProxyPolicy:
		_ = b.EncodeVarint(25<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DisableForwardProxyPolicy); err != nil {
			return err
		}
	case *ReplaceSpecType_ActiveForwardProxyPolicies:
		_ = b.EncodeVarint(26<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActiveForwardProxyPolicies); err != nil {
			return err
		}
	case *ReplaceSpecType_ForwardProxyPolicySet:
		_ = b.EncodeVarint(27<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ForwardProxyPolicySet); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ReplaceSpecType.ForwardProxyPolicyChoice has unexpected type %T", x)
	}
	// fast_acl_choice
	switch x := m.FastAclChoice.(type) {
	case *ReplaceSpecType_DisableFastAcl:
		_ = b.EncodeVarint(29<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DisableFastAcl); err != nil {
			return err
		}
	case *ReplaceSpecType_ActiveFastAcls:
		_ = b.EncodeVarint(30<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActiveFastAcls); err != nil {
			return err
		}
	case *ReplaceSpecType_FastAclSet:
		_ = b.EncodeVarint(31<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FastAclSet); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ReplaceSpecType.FastAclChoice has unexpected type %T", x)
	}
	return nil
}

func _ReplaceSpecType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ReplaceSpecType)
	switch tag {
	case 21: // network_policy_choice.disable_network_policy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.NetworkPolicyChoice = &ReplaceSpecType_DisableNetworkPolicy{msg}
		return true, err
	case 22: // network_policy_choice.active_network_policies
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ActiveNetworkPoliciesType)
		err := b.DecodeMessage(msg)
		m.NetworkPolicyChoice = &ReplaceSpecType_ActiveNetworkPolicies{msg}
		return true, err
	case 23: // network_policy_choice.network_policy_set
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views.ObjectRefType)
		err := b.DecodeMessage(msg)
		m.NetworkPolicyChoice = &ReplaceSpecType_NetworkPolicySet{msg}
		return true, err
	case 25: // forward_proxy_policy_choice.disable_forward_proxy_policy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.ForwardProxyPolicyChoice = &ReplaceSpecType_DisableForwardProxyPolicy{msg}
		return true, err
	case 26: // forward_proxy_policy_choice.active_forward_proxy_policies
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ActiveForwardProxyPoliciesType)
		err := b.DecodeMessage(msg)
		m.ForwardProxyPolicyChoice = &ReplaceSpecType_ActiveForwardProxyPolicies{msg}
		return true, err
	case 27: // forward_proxy_policy_choice.forward_proxy_policy_set
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views.ObjectRefType)
		err := b.DecodeMessage(msg)
		m.ForwardProxyPolicyChoice = &ReplaceSpecType_ForwardProxyPolicySet{msg}
		return true, err
	case 29: // fast_acl_choice.disable_fast_acl
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.FastAclChoice = &ReplaceSpecType_DisableFastAcl{msg}
		return true, err
	case 30: // fast_acl_choice.active_fast_acls
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ActiveFastACLsType)
		err := b.DecodeMessage(msg)
		m.FastAclChoice = &ReplaceSpecType_ActiveFastAcls{msg}
		return true, err
	case 31: // fast_acl_choice.fast_acl_set
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views.ObjectRefType)
		err := b.DecodeMessage(msg)
		m.FastAclChoice = &ReplaceSpecType_FastAclSet{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ReplaceSpecType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ReplaceSpecType)
	// network_policy_choice
	switch x := m.NetworkPolicyChoice.(type) {
	case *ReplaceSpecType_DisableNetworkPolicy:
		s := proto.Size(x.DisableNetworkPolicy)
		n += proto.SizeVarint(21<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplaceSpecType_ActiveNetworkPolicies:
		s := proto.Size(x.ActiveNetworkPolicies)
		n += proto.SizeVarint(22<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplaceSpecType_NetworkPolicySet:
		s := proto.Size(x.NetworkPolicySet)
		n += proto.SizeVarint(23<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// forward_proxy_policy_choice
	switch x := m.ForwardProxyPolicyChoice.(type) {
	case *ReplaceSpecType_DisableForwardProxyPolicy:
		s := proto.Size(x.DisableForwardProxyPolicy)
		n += proto.SizeVarint(25<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplaceSpecType_ActiveForwardProxyPolicies:
		s := proto.Size(x.ActiveForwardProxyPolicies)
		n += proto.SizeVarint(26<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplaceSpecType_ForwardProxyPolicySet:
		s := proto.Size(x.ForwardProxyPolicySet)
		n += proto.SizeVarint(27<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// fast_acl_choice
	switch x := m.FastAclChoice.(type) {
	case *ReplaceSpecType_DisableFastAcl:
		s := proto.Size(x.DisableFastAcl)
		n += proto.SizeVarint(29<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplaceSpecType_ActiveFastAcls:
		s := proto.Size(x.ActiveFastAcls)
		n += proto.SizeVarint(30<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplaceSpecType_FastAclSet:
		s := proto.Size(x.FastAclSet)
		n += proto.SizeVarint(31<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Get network firewall
//
// x-displayName: "Get Network Firewall"
// Get network firewall in system namespace
type GetSpecType struct {
	// Network Policy List Configuration
	//
	// x-displayName: "Select Network Policy Configuration"
	// x-required
	// Active Network Policies can be configured via network policy set or inline.
	//
	// Types that are valid to be assigned to NetworkPolicyChoice:
	//	*GetSpecType_DisableNetworkPolicy
	//	*GetSpecType_ActiveNetworkPolicies
	//	*GetSpecType_NetworkPolicySet
	NetworkPolicyChoice isGetSpecType_NetworkPolicyChoice `protobuf_oneof:"network_policy_choice"`
	// Forward Proxy Policy List Configuration
	//
	// x-displayName: "Select Forward Policy Configuration"
	// x-required
	// Active Forward Proxy Policies can be configured via service policy set or inline.
	//
	// Types that are valid to be assigned to ForwardProxyPolicyChoice:
	//	*GetSpecType_DisableForwardProxyPolicy
	//	*GetSpecType_ActiveForwardProxyPolicies
	//	*GetSpecType_ForwardProxyPolicySet
	ForwardProxyPolicyChoice isGetSpecType_ForwardProxyPolicyChoice `protobuf_oneof:"forward_proxy_policy_choice"`
	// Active Fast ACL(s) Configuration
	//
	// x-displayName: "Select Fast ACL Configuration"
	// x-required
	// Active fast acls can be configured via fast acl set or inline.
	//
	// Types that are valid to be assigned to FastAclChoice:
	//	*GetSpecType_DisableFastAcl
	//	*GetSpecType_ActiveFastAcls
	//	*GetSpecType_FastAclSet
	FastAclChoice isGetSpecType_FastAclChoice `protobuf_oneof:"fast_acl_choice"`
}

func (m *GetSpecType) Reset()                    { *m = GetSpecType{} }
func (*GetSpecType) ProtoMessage()               {}
func (*GetSpecType) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{6} }

type isGetSpecType_NetworkPolicyChoice interface {
	isGetSpecType_NetworkPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGetSpecType_ForwardProxyPolicyChoice interface {
	isGetSpecType_ForwardProxyPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGetSpecType_FastAclChoice interface {
	isGetSpecType_FastAclChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type GetSpecType_DisableNetworkPolicy struct {
	DisableNetworkPolicy *ves_io_schema4.Empty `protobuf:"bytes,21,opt,name=disable_network_policy,json=disableNetworkPolicy,oneof"`
}
type GetSpecType_ActiveNetworkPolicies struct {
	ActiveNetworkPolicies *ActiveNetworkPoliciesType `protobuf:"bytes,22,opt,name=active_network_policies,json=activeNetworkPolicies,oneof"`
}
type GetSpecType_NetworkPolicySet struct {
	NetworkPolicySet *ves_io_schema_views.ObjectRefType `protobuf:"bytes,23,opt,name=network_policy_set,json=networkPolicySet,oneof"`
}
type GetSpecType_DisableForwardProxyPolicy struct {
	DisableForwardProxyPolicy *ves_io_schema4.Empty `protobuf:"bytes,25,opt,name=disable_forward_proxy_policy,json=disableForwardProxyPolicy,oneof"`
}
type GetSpecType_ActiveForwardProxyPolicies struct {
	ActiveForwardProxyPolicies *ActiveForwardProxyPoliciesType `protobuf:"bytes,26,opt,name=active_forward_proxy_policies,json=activeForwardProxyPolicies,oneof"`
}
type GetSpecType_ForwardProxyPolicySet struct {
	ForwardProxyPolicySet *ves_io_schema_views.ObjectRefType `protobuf:"bytes,27,opt,name=forward_proxy_policy_set,json=forwardProxyPolicySet,oneof"`
}
type GetSpecType_DisableFastAcl struct {
	DisableFastAcl *ves_io_schema4.Empty `protobuf:"bytes,29,opt,name=disable_fast_acl,json=disableFastAcl,oneof"`
}
type GetSpecType_ActiveFastAcls struct {
	ActiveFastAcls *ActiveFastACLsType `protobuf:"bytes,30,opt,name=active_fast_acls,json=activeFastAcls,oneof"`
}
type GetSpecType_FastAclSet struct {
	FastAclSet *ves_io_schema_views.ObjectRefType `protobuf:"bytes,31,opt,name=fast_acl_set,json=fastAclSet,oneof"`
}

func (*GetSpecType_DisableNetworkPolicy) isGetSpecType_NetworkPolicyChoice()            {}
func (*GetSpecType_ActiveNetworkPolicies) isGetSpecType_NetworkPolicyChoice()           {}
func (*GetSpecType_NetworkPolicySet) isGetSpecType_NetworkPolicyChoice()                {}
func (*GetSpecType_DisableForwardProxyPolicy) isGetSpecType_ForwardProxyPolicyChoice()  {}
func (*GetSpecType_ActiveForwardProxyPolicies) isGetSpecType_ForwardProxyPolicyChoice() {}
func (*GetSpecType_ForwardProxyPolicySet) isGetSpecType_ForwardProxyPolicyChoice()      {}
func (*GetSpecType_DisableFastAcl) isGetSpecType_FastAclChoice()                        {}
func (*GetSpecType_ActiveFastAcls) isGetSpecType_FastAclChoice()                        {}
func (*GetSpecType_FastAclSet) isGetSpecType_FastAclChoice()                            {}

func (m *GetSpecType) GetNetworkPolicyChoice() isGetSpecType_NetworkPolicyChoice {
	if m != nil {
		return m.NetworkPolicyChoice
	}
	return nil
}
func (m *GetSpecType) GetForwardProxyPolicyChoice() isGetSpecType_ForwardProxyPolicyChoice {
	if m != nil {
		return m.ForwardProxyPolicyChoice
	}
	return nil
}
func (m *GetSpecType) GetFastAclChoice() isGetSpecType_FastAclChoice {
	if m != nil {
		return m.FastAclChoice
	}
	return nil
}

func (m *GetSpecType) GetDisableNetworkPolicy() *ves_io_schema4.Empty {
	if x, ok := m.GetNetworkPolicyChoice().(*GetSpecType_DisableNetworkPolicy); ok {
		return x.DisableNetworkPolicy
	}
	return nil
}

func (m *GetSpecType) GetActiveNetworkPolicies() *ActiveNetworkPoliciesType {
	if x, ok := m.GetNetworkPolicyChoice().(*GetSpecType_ActiveNetworkPolicies); ok {
		return x.ActiveNetworkPolicies
	}
	return nil
}

func (m *GetSpecType) GetNetworkPolicySet() *ves_io_schema_views.ObjectRefType {
	if x, ok := m.GetNetworkPolicyChoice().(*GetSpecType_NetworkPolicySet); ok {
		return x.NetworkPolicySet
	}
	return nil
}

func (m *GetSpecType) GetDisableForwardProxyPolicy() *ves_io_schema4.Empty {
	if x, ok := m.GetForwardProxyPolicyChoice().(*GetSpecType_DisableForwardProxyPolicy); ok {
		return x.DisableForwardProxyPolicy
	}
	return nil
}

func (m *GetSpecType) GetActiveForwardProxyPolicies() *ActiveForwardProxyPoliciesType {
	if x, ok := m.GetForwardProxyPolicyChoice().(*GetSpecType_ActiveForwardProxyPolicies); ok {
		return x.ActiveForwardProxyPolicies
	}
	return nil
}

func (m *GetSpecType) GetForwardProxyPolicySet() *ves_io_schema_views.ObjectRefType {
	if x, ok := m.GetForwardProxyPolicyChoice().(*GetSpecType_ForwardProxyPolicySet); ok {
		return x.ForwardProxyPolicySet
	}
	return nil
}

func (m *GetSpecType) GetDisableFastAcl() *ves_io_schema4.Empty {
	if x, ok := m.GetFastAclChoice().(*GetSpecType_DisableFastAcl); ok {
		return x.DisableFastAcl
	}
	return nil
}

func (m *GetSpecType) GetActiveFastAcls() *ActiveFastACLsType {
	if x, ok := m.GetFastAclChoice().(*GetSpecType_ActiveFastAcls); ok {
		return x.ActiveFastAcls
	}
	return nil
}

func (m *GetSpecType) GetFastAclSet() *ves_io_schema_views.ObjectRefType {
	if x, ok := m.GetFastAclChoice().(*GetSpecType_FastAclSet); ok {
		return x.FastAclSet
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GetSpecType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GetSpecType_OneofMarshaler, _GetSpecType_OneofUnmarshaler, _GetSpecType_OneofSizer, []interface{}{
		(*GetSpecType_DisableNetworkPolicy)(nil),
		(*GetSpecType_ActiveNetworkPolicies)(nil),
		(*GetSpecType_NetworkPolicySet)(nil),
		(*GetSpecType_DisableForwardProxyPolicy)(nil),
		(*GetSpecType_ActiveForwardProxyPolicies)(nil),
		(*GetSpecType_ForwardProxyPolicySet)(nil),
		(*GetSpecType_DisableFastAcl)(nil),
		(*GetSpecType_ActiveFastAcls)(nil),
		(*GetSpecType_FastAclSet)(nil),
	}
}

func _GetSpecType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GetSpecType)
	// network_policy_choice
	switch x := m.NetworkPolicyChoice.(type) {
	case *GetSpecType_DisableNetworkPolicy:
		_ = b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DisableNetworkPolicy); err != nil {
			return err
		}
	case *GetSpecType_ActiveNetworkPolicies:
		_ = b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActiveNetworkPolicies); err != nil {
			return err
		}
	case *GetSpecType_NetworkPolicySet:
		_ = b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NetworkPolicySet); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GetSpecType.NetworkPolicyChoice has unexpected type %T", x)
	}
	// forward_proxy_policy_choice
	switch x := m.ForwardProxyPolicyChoice.(type) {
	case *GetSpecType_DisableForwardProxyPolicy:
		_ = b.EncodeVarint(25<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DisableForwardProxyPolicy); err != nil {
			return err
		}
	case *GetSpecType_ActiveForwardProxyPolicies:
		_ = b.EncodeVarint(26<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActiveForwardProxyPolicies); err != nil {
			return err
		}
	case *GetSpecType_ForwardProxyPolicySet:
		_ = b.EncodeVarint(27<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ForwardProxyPolicySet); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GetSpecType.ForwardProxyPolicyChoice has unexpected type %T", x)
	}
	// fast_acl_choice
	switch x := m.FastAclChoice.(type) {
	case *GetSpecType_DisableFastAcl:
		_ = b.EncodeVarint(29<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DisableFastAcl); err != nil {
			return err
		}
	case *GetSpecType_ActiveFastAcls:
		_ = b.EncodeVarint(30<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActiveFastAcls); err != nil {
			return err
		}
	case *GetSpecType_FastAclSet:
		_ = b.EncodeVarint(31<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FastAclSet); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GetSpecType.FastAclChoice has unexpected type %T", x)
	}
	return nil
}

func _GetSpecType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GetSpecType)
	switch tag {
	case 21: // network_policy_choice.disable_network_policy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.NetworkPolicyChoice = &GetSpecType_DisableNetworkPolicy{msg}
		return true, err
	case 22: // network_policy_choice.active_network_policies
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ActiveNetworkPoliciesType)
		err := b.DecodeMessage(msg)
		m.NetworkPolicyChoice = &GetSpecType_ActiveNetworkPolicies{msg}
		return true, err
	case 23: // network_policy_choice.network_policy_set
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views.ObjectRefType)
		err := b.DecodeMessage(msg)
		m.NetworkPolicyChoice = &GetSpecType_NetworkPolicySet{msg}
		return true, err
	case 25: // forward_proxy_policy_choice.disable_forward_proxy_policy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.ForwardProxyPolicyChoice = &GetSpecType_DisableForwardProxyPolicy{msg}
		return true, err
	case 26: // forward_proxy_policy_choice.active_forward_proxy_policies
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ActiveForwardProxyPoliciesType)
		err := b.DecodeMessage(msg)
		m.ForwardProxyPolicyChoice = &GetSpecType_ActiveForwardProxyPolicies{msg}
		return true, err
	case 27: // forward_proxy_policy_choice.forward_proxy_policy_set
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views.ObjectRefType)
		err := b.DecodeMessage(msg)
		m.ForwardProxyPolicyChoice = &GetSpecType_ForwardProxyPolicySet{msg}
		return true, err
	case 29: // fast_acl_choice.disable_fast_acl
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema4.Empty)
		err := b.DecodeMessage(msg)
		m.FastAclChoice = &GetSpecType_DisableFastAcl{msg}
		return true, err
	case 30: // fast_acl_choice.active_fast_acls
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ActiveFastACLsType)
		err := b.DecodeMessage(msg)
		m.FastAclChoice = &GetSpecType_ActiveFastAcls{msg}
		return true, err
	case 31: // fast_acl_choice.fast_acl_set
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ves_io_schema_views.ObjectRefType)
		err := b.DecodeMessage(msg)
		m.FastAclChoice = &GetSpecType_FastAclSet{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GetSpecType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GetSpecType)
	// network_policy_choice
	switch x := m.NetworkPolicyChoice.(type) {
	case *GetSpecType_DisableNetworkPolicy:
		s := proto.Size(x.DisableNetworkPolicy)
		n += proto.SizeVarint(21<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetSpecType_ActiveNetworkPolicies:
		s := proto.Size(x.ActiveNetworkPolicies)
		n += proto.SizeVarint(22<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetSpecType_NetworkPolicySet:
		s := proto.Size(x.NetworkPolicySet)
		n += proto.SizeVarint(23<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// forward_proxy_policy_choice
	switch x := m.ForwardProxyPolicyChoice.(type) {
	case *GetSpecType_DisableForwardProxyPolicy:
		s := proto.Size(x.DisableForwardProxyPolicy)
		n += proto.SizeVarint(25<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetSpecType_ActiveForwardProxyPolicies:
		s := proto.Size(x.ActiveForwardProxyPolicies)
		n += proto.SizeVarint(26<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetSpecType_ForwardProxyPolicySet:
		s := proto.Size(x.ForwardProxyPolicySet)
		n += proto.SizeVarint(27<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// fast_acl_choice
	switch x := m.FastAclChoice.(type) {
	case *GetSpecType_DisableFastAcl:
		s := proto.Size(x.DisableFastAcl)
		n += proto.SizeVarint(29<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetSpecType_ActiveFastAcls:
		s := proto.Size(x.ActiveFastAcls)
		n += proto.SizeVarint(30<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetSpecType_FastAclSet:
		s := proto.Size(x.FastAclSet)
		n += proto.SizeVarint(31<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Network firewall status
//
// x-displayName: "Network Firewall Status"
// Network Firewall status provides the installed status of network firewall
type NetworkFirewallStatus struct {
	// installed
	//
	// x-displayName: "Installed"
	// Installed status of network firewall
	Installed bool `protobuf:"varint,1,opt,name=installed,proto3" json:"installed,omitempty"`
}

func (m *NetworkFirewallStatus) Reset()                    { *m = NetworkFirewallStatus{} }
func (*NetworkFirewallStatus) ProtoMessage()               {}
func (*NetworkFirewallStatus) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{7} }

func (m *NetworkFirewallStatus) GetInstalled() bool {
	if m != nil {
		return m.Installed
	}
	return false
}

func init() {
	proto.RegisterType((*ActiveNetworkPoliciesType)(nil), "ves.io.schema.network_firewall.ActiveNetworkPoliciesType")
	golang_proto.RegisterType((*ActiveNetworkPoliciesType)(nil), "ves.io.schema.network_firewall.ActiveNetworkPoliciesType")
	proto.RegisterType((*ActiveForwardProxyPoliciesType)(nil), "ves.io.schema.network_firewall.ActiveForwardProxyPoliciesType")
	golang_proto.RegisterType((*ActiveForwardProxyPoliciesType)(nil), "ves.io.schema.network_firewall.ActiveForwardProxyPoliciesType")
	proto.RegisterType((*ActiveFastACLsType)(nil), "ves.io.schema.network_firewall.ActiveFastACLsType")
	golang_proto.RegisterType((*ActiveFastACLsType)(nil), "ves.io.schema.network_firewall.ActiveFastACLsType")
	proto.RegisterType((*GlobalSpecType)(nil), "ves.io.schema.network_firewall.GlobalSpecType")
	golang_proto.RegisterType((*GlobalSpecType)(nil), "ves.io.schema.network_firewall.GlobalSpecType")
	proto.RegisterType((*CreateSpecType)(nil), "ves.io.schema.network_firewall.CreateSpecType")
	golang_proto.RegisterType((*CreateSpecType)(nil), "ves.io.schema.network_firewall.CreateSpecType")
	proto.RegisterType((*ReplaceSpecType)(nil), "ves.io.schema.network_firewall.ReplaceSpecType")
	golang_proto.RegisterType((*ReplaceSpecType)(nil), "ves.io.schema.network_firewall.ReplaceSpecType")
	proto.RegisterType((*GetSpecType)(nil), "ves.io.schema.network_firewall.GetSpecType")
	golang_proto.RegisterType((*GetSpecType)(nil), "ves.io.schema.network_firewall.GetSpecType")
	proto.RegisterType((*NetworkFirewallStatus)(nil), "ves.io.schema.network_firewall.NetworkFirewallStatus")
	golang_proto.RegisterType((*NetworkFirewallStatus)(nil), "ves.io.schema.network_firewall.NetworkFirewallStatus")
}
func (this *ActiveNetworkPoliciesType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActiveNetworkPoliciesType)
	if !ok {
		that2, ok := that.(ActiveNetworkPoliciesType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.NetworkPolicies) != len(that1.NetworkPolicies) {
		return false
	}
	for i := range this.NetworkPolicies {
		if !this.NetworkPolicies[i].Equal(that1.NetworkPolicies[i]) {
			return false
		}
	}
	return true
}
func (this *ActiveForwardProxyPoliciesType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActiveForwardProxyPoliciesType)
	if !ok {
		that2, ok := that.(ActiveForwardProxyPoliciesType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.ForwardProxyPolicies) != len(that1.ForwardProxyPolicies) {
		return false
	}
	for i := range this.ForwardProxyPolicies {
		if !this.ForwardProxyPolicies[i].Equal(that1.ForwardProxyPolicies[i]) {
			return false
		}
	}
	return true
}
func (this *ActiveFastACLsType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActiveFastACLsType)
	if !ok {
		that2, ok := that.(ActiveFastACLsType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.FastAcls) != len(that1.FastAcls) {
		return false
	}
	for i := range this.FastAcls {
		if !this.FastAcls[i].Equal(that1.FastAcls[i]) {
			return false
		}
	}
	return true
}
func (this *GlobalSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType)
	if !ok {
		that2, ok := that.(GlobalSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.NetworkPolicySet) != len(that1.NetworkPolicySet) {
		return false
	}
	for i := range this.NetworkPolicySet {
		if !this.NetworkPolicySet[i].Equal(that1.NetworkPolicySet[i]) {
			return false
		}
	}
	if len(this.ForwardProxyPolicySet) != len(that1.ForwardProxyPolicySet) {
		return false
	}
	for i := range this.ForwardProxyPolicySet {
		if !this.ForwardProxyPolicySet[i].Equal(that1.ForwardProxyPolicySet[i]) {
			return false
		}
	}
	if len(this.FastAclSet) != len(that1.FastAclSet) {
		return false
	}
	for i := range this.FastAclSet {
		if !this.FastAclSet[i].Equal(that1.FastAclSet[i]) {
			return false
		}
	}
	if that1.NetworkPolicyConfigMode == nil {
		if this.NetworkPolicyConfigMode != nil {
			return false
		}
	} else if this.NetworkPolicyConfigMode == nil {
		return false
	} else if !this.NetworkPolicyConfigMode.Equal(that1.NetworkPolicyConfigMode) {
		return false
	}
	if that1.ForwardProxyPolicyConfigMode == nil {
		if this.ForwardProxyPolicyConfigMode != nil {
			return false
		}
	} else if this.ForwardProxyPolicyConfigMode == nil {
		return false
	} else if !this.ForwardProxyPolicyConfigMode.Equal(that1.ForwardProxyPolicyConfigMode) {
		return false
	}
	if that1.FastAclConfigMode == nil {
		if this.FastAclConfigMode != nil {
			return false
		}
	} else if this.FastAclConfigMode == nil {
		return false
	} else if !this.FastAclConfigMode.Equal(that1.FastAclConfigMode) {
		return false
	}
	if !this.ViewInternal.Equal(that1.ViewInternal) {
		return false
	}
	return true
}
func (this *GlobalSpecType_DisableNetworkPolicy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_DisableNetworkPolicy)
	if !ok {
		that2, ok := that.(GlobalSpecType_DisableNetworkPolicy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableNetworkPolicy.Equal(that1.DisableNetworkPolicy) {
		return false
	}
	return true
}
func (this *GlobalSpecType_ActiveNetworkPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_ActiveNetworkPolicies)
	if !ok {
		that2, ok := that.(GlobalSpecType_ActiveNetworkPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveNetworkPolicies.Equal(that1.ActiveNetworkPolicies) {
		return false
	}
	return true
}
func (this *GlobalSpecType_NetworkPolicyLegacyMode) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_NetworkPolicyLegacyMode)
	if !ok {
		that2, ok := that.(GlobalSpecType_NetworkPolicyLegacyMode)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NetworkPolicyLegacyMode.Equal(that1.NetworkPolicyLegacyMode) {
		return false
	}
	return true
}
func (this *GlobalSpecType_DisableForwardProxyPolicy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_DisableForwardProxyPolicy)
	if !ok {
		that2, ok := that.(GlobalSpecType_DisableForwardProxyPolicy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableForwardProxyPolicy.Equal(that1.DisableForwardProxyPolicy) {
		return false
	}
	return true
}
func (this *GlobalSpecType_ActiveForwardProxyPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_ActiveForwardProxyPolicies)
	if !ok {
		that2, ok := that.(GlobalSpecType_ActiveForwardProxyPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveForwardProxyPolicies.Equal(that1.ActiveForwardProxyPolicies) {
		return false
	}
	return true
}
func (this *GlobalSpecType_ForwardProxyPolicyLegacyMode) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_ForwardProxyPolicyLegacyMode)
	if !ok {
		that2, ok := that.(GlobalSpecType_ForwardProxyPolicyLegacyMode)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ForwardProxyPolicyLegacyMode.Equal(that1.ForwardProxyPolicyLegacyMode) {
		return false
	}
	return true
}
func (this *GlobalSpecType_DisableFastAcl) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_DisableFastAcl)
	if !ok {
		that2, ok := that.(GlobalSpecType_DisableFastAcl)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableFastAcl.Equal(that1.DisableFastAcl) {
		return false
	}
	return true
}
func (this *GlobalSpecType_ActiveFastAcls) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_ActiveFastAcls)
	if !ok {
		that2, ok := that.(GlobalSpecType_ActiveFastAcls)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveFastAcls.Equal(that1.ActiveFastAcls) {
		return false
	}
	return true
}
func (this *GlobalSpecType_FastAclLegacyMode) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_FastAclLegacyMode)
	if !ok {
		that2, ok := that.(GlobalSpecType_FastAclLegacyMode)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.FastAclLegacyMode.Equal(that1.FastAclLegacyMode) {
		return false
	}
	return true
}
func (this *CreateSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType)
	if !ok {
		that2, ok := that.(CreateSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.NetworkPolicyChoice == nil {
		if this.NetworkPolicyChoice != nil {
			return false
		}
	} else if this.NetworkPolicyChoice == nil {
		return false
	} else if !this.NetworkPolicyChoice.Equal(that1.NetworkPolicyChoice) {
		return false
	}
	if that1.ForwardProxyPolicyChoice == nil {
		if this.ForwardProxyPolicyChoice != nil {
			return false
		}
	} else if this.ForwardProxyPolicyChoice == nil {
		return false
	} else if !this.ForwardProxyPolicyChoice.Equal(that1.ForwardProxyPolicyChoice) {
		return false
	}
	if that1.FastAclChoice == nil {
		if this.FastAclChoice != nil {
			return false
		}
	} else if this.FastAclChoice == nil {
		return false
	} else if !this.FastAclChoice.Equal(that1.FastAclChoice) {
		return false
	}
	return true
}
func (this *CreateSpecType_DisableNetworkPolicy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_DisableNetworkPolicy)
	if !ok {
		that2, ok := that.(CreateSpecType_DisableNetworkPolicy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableNetworkPolicy.Equal(that1.DisableNetworkPolicy) {
		return false
	}
	return true
}
func (this *CreateSpecType_ActiveNetworkPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_ActiveNetworkPolicies)
	if !ok {
		that2, ok := that.(CreateSpecType_ActiveNetworkPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveNetworkPolicies.Equal(that1.ActiveNetworkPolicies) {
		return false
	}
	return true
}
func (this *CreateSpecType_NetworkPolicySet) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_NetworkPolicySet)
	if !ok {
		that2, ok := that.(CreateSpecType_NetworkPolicySet)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NetworkPolicySet.Equal(that1.NetworkPolicySet) {
		return false
	}
	return true
}
func (this *CreateSpecType_DisableForwardProxyPolicy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_DisableForwardProxyPolicy)
	if !ok {
		that2, ok := that.(CreateSpecType_DisableForwardProxyPolicy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableForwardProxyPolicy.Equal(that1.DisableForwardProxyPolicy) {
		return false
	}
	return true
}
func (this *CreateSpecType_ActiveForwardProxyPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_ActiveForwardProxyPolicies)
	if !ok {
		that2, ok := that.(CreateSpecType_ActiveForwardProxyPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveForwardProxyPolicies.Equal(that1.ActiveForwardProxyPolicies) {
		return false
	}
	return true
}
func (this *CreateSpecType_ForwardProxyPolicySet) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_ForwardProxyPolicySet)
	if !ok {
		that2, ok := that.(CreateSpecType_ForwardProxyPolicySet)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ForwardProxyPolicySet.Equal(that1.ForwardProxyPolicySet) {
		return false
	}
	return true
}
func (this *CreateSpecType_DisableFastAcl) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_DisableFastAcl)
	if !ok {
		that2, ok := that.(CreateSpecType_DisableFastAcl)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableFastAcl.Equal(that1.DisableFastAcl) {
		return false
	}
	return true
}
func (this *CreateSpecType_ActiveFastAcls) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_ActiveFastAcls)
	if !ok {
		that2, ok := that.(CreateSpecType_ActiveFastAcls)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveFastAcls.Equal(that1.ActiveFastAcls) {
		return false
	}
	return true
}
func (this *CreateSpecType_FastAclSet) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_FastAclSet)
	if !ok {
		that2, ok := that.(CreateSpecType_FastAclSet)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.FastAclSet.Equal(that1.FastAclSet) {
		return false
	}
	return true
}
func (this *ReplaceSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType)
	if !ok {
		that2, ok := that.(ReplaceSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.NetworkPolicyChoice == nil {
		if this.NetworkPolicyChoice != nil {
			return false
		}
	} else if this.NetworkPolicyChoice == nil {
		return false
	} else if !this.NetworkPolicyChoice.Equal(that1.NetworkPolicyChoice) {
		return false
	}
	if that1.ForwardProxyPolicyChoice == nil {
		if this.ForwardProxyPolicyChoice != nil {
			return false
		}
	} else if this.ForwardProxyPolicyChoice == nil {
		return false
	} else if !this.ForwardProxyPolicyChoice.Equal(that1.ForwardProxyPolicyChoice) {
		return false
	}
	if that1.FastAclChoice == nil {
		if this.FastAclChoice != nil {
			return false
		}
	} else if this.FastAclChoice == nil {
		return false
	} else if !this.FastAclChoice.Equal(that1.FastAclChoice) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_DisableNetworkPolicy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_DisableNetworkPolicy)
	if !ok {
		that2, ok := that.(ReplaceSpecType_DisableNetworkPolicy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableNetworkPolicy.Equal(that1.DisableNetworkPolicy) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_ActiveNetworkPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_ActiveNetworkPolicies)
	if !ok {
		that2, ok := that.(ReplaceSpecType_ActiveNetworkPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveNetworkPolicies.Equal(that1.ActiveNetworkPolicies) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_NetworkPolicySet) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_NetworkPolicySet)
	if !ok {
		that2, ok := that.(ReplaceSpecType_NetworkPolicySet)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NetworkPolicySet.Equal(that1.NetworkPolicySet) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_DisableForwardProxyPolicy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_DisableForwardProxyPolicy)
	if !ok {
		that2, ok := that.(ReplaceSpecType_DisableForwardProxyPolicy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableForwardProxyPolicy.Equal(that1.DisableForwardProxyPolicy) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_ActiveForwardProxyPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_ActiveForwardProxyPolicies)
	if !ok {
		that2, ok := that.(ReplaceSpecType_ActiveForwardProxyPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveForwardProxyPolicies.Equal(that1.ActiveForwardProxyPolicies) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_ForwardProxyPolicySet) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_ForwardProxyPolicySet)
	if !ok {
		that2, ok := that.(ReplaceSpecType_ForwardProxyPolicySet)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ForwardProxyPolicySet.Equal(that1.ForwardProxyPolicySet) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_DisableFastAcl) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_DisableFastAcl)
	if !ok {
		that2, ok := that.(ReplaceSpecType_DisableFastAcl)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableFastAcl.Equal(that1.DisableFastAcl) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_ActiveFastAcls) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_ActiveFastAcls)
	if !ok {
		that2, ok := that.(ReplaceSpecType_ActiveFastAcls)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveFastAcls.Equal(that1.ActiveFastAcls) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_FastAclSet) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_FastAclSet)
	if !ok {
		that2, ok := that.(ReplaceSpecType_FastAclSet)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.FastAclSet.Equal(that1.FastAclSet) {
		return false
	}
	return true
}
func (this *GetSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType)
	if !ok {
		that2, ok := that.(GetSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.NetworkPolicyChoice == nil {
		if this.NetworkPolicyChoice != nil {
			return false
		}
	} else if this.NetworkPolicyChoice == nil {
		return false
	} else if !this.NetworkPolicyChoice.Equal(that1.NetworkPolicyChoice) {
		return false
	}
	if that1.ForwardProxyPolicyChoice == nil {
		if this.ForwardProxyPolicyChoice != nil {
			return false
		}
	} else if this.ForwardProxyPolicyChoice == nil {
		return false
	} else if !this.ForwardProxyPolicyChoice.Equal(that1.ForwardProxyPolicyChoice) {
		return false
	}
	if that1.FastAclChoice == nil {
		if this.FastAclChoice != nil {
			return false
		}
	} else if this.FastAclChoice == nil {
		return false
	} else if !this.FastAclChoice.Equal(that1.FastAclChoice) {
		return false
	}
	return true
}
func (this *GetSpecType_DisableNetworkPolicy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_DisableNetworkPolicy)
	if !ok {
		that2, ok := that.(GetSpecType_DisableNetworkPolicy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableNetworkPolicy.Equal(that1.DisableNetworkPolicy) {
		return false
	}
	return true
}
func (this *GetSpecType_ActiveNetworkPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_ActiveNetworkPolicies)
	if !ok {
		that2, ok := that.(GetSpecType_ActiveNetworkPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveNetworkPolicies.Equal(that1.ActiveNetworkPolicies) {
		return false
	}
	return true
}
func (this *GetSpecType_NetworkPolicySet) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_NetworkPolicySet)
	if !ok {
		that2, ok := that.(GetSpecType_NetworkPolicySet)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NetworkPolicySet.Equal(that1.NetworkPolicySet) {
		return false
	}
	return true
}
func (this *GetSpecType_DisableForwardProxyPolicy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_DisableForwardProxyPolicy)
	if !ok {
		that2, ok := that.(GetSpecType_DisableForwardProxyPolicy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableForwardProxyPolicy.Equal(that1.DisableForwardProxyPolicy) {
		return false
	}
	return true
}
func (this *GetSpecType_ActiveForwardProxyPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_ActiveForwardProxyPolicies)
	if !ok {
		that2, ok := that.(GetSpecType_ActiveForwardProxyPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveForwardProxyPolicies.Equal(that1.ActiveForwardProxyPolicies) {
		return false
	}
	return true
}
func (this *GetSpecType_ForwardProxyPolicySet) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_ForwardProxyPolicySet)
	if !ok {
		that2, ok := that.(GetSpecType_ForwardProxyPolicySet)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ForwardProxyPolicySet.Equal(that1.ForwardProxyPolicySet) {
		return false
	}
	return true
}
func (this *GetSpecType_DisableFastAcl) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_DisableFastAcl)
	if !ok {
		that2, ok := that.(GetSpecType_DisableFastAcl)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableFastAcl.Equal(that1.DisableFastAcl) {
		return false
	}
	return true
}
func (this *GetSpecType_ActiveFastAcls) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_ActiveFastAcls)
	if !ok {
		that2, ok := that.(GetSpecType_ActiveFastAcls)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveFastAcls.Equal(that1.ActiveFastAcls) {
		return false
	}
	return true
}
func (this *GetSpecType_FastAclSet) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_FastAclSet)
	if !ok {
		that2, ok := that.(GetSpecType_FastAclSet)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.FastAclSet.Equal(that1.FastAclSet) {
		return false
	}
	return true
}
func (this *NetworkFirewallStatus) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*NetworkFirewallStatus)
	if !ok {
		that2, ok := that.(NetworkFirewallStatus)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Installed != that1.Installed {
		return false
	}
	return true
}
func (this *ActiveNetworkPoliciesType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&network_firewall.ActiveNetworkPoliciesType{")
	if this.NetworkPolicies != nil {
		s = append(s, "NetworkPolicies: "+fmt.Sprintf("%#v", this.NetworkPolicies)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ActiveForwardProxyPoliciesType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&network_firewall.ActiveForwardProxyPoliciesType{")
	if this.ForwardProxyPolicies != nil {
		s = append(s, "ForwardProxyPolicies: "+fmt.Sprintf("%#v", this.ForwardProxyPolicies)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ActiveFastACLsType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&network_firewall.ActiveFastACLsType{")
	if this.FastAcls != nil {
		s = append(s, "FastAcls: "+fmt.Sprintf("%#v", this.FastAcls)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GlobalSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 17)
	s = append(s, "&network_firewall.GlobalSpecType{")
	if this.NetworkPolicySet != nil {
		s = append(s, "NetworkPolicySet: "+fmt.Sprintf("%#v", this.NetworkPolicySet)+",\n")
	}
	if this.ForwardProxyPolicySet != nil {
		s = append(s, "ForwardProxyPolicySet: "+fmt.Sprintf("%#v", this.ForwardProxyPolicySet)+",\n")
	}
	if this.FastAclSet != nil {
		s = append(s, "FastAclSet: "+fmt.Sprintf("%#v", this.FastAclSet)+",\n")
	}
	if this.NetworkPolicyConfigMode != nil {
		s = append(s, "NetworkPolicyConfigMode: "+fmt.Sprintf("%#v", this.NetworkPolicyConfigMode)+",\n")
	}
	if this.ForwardProxyPolicyConfigMode != nil {
		s = append(s, "ForwardProxyPolicyConfigMode: "+fmt.Sprintf("%#v", this.ForwardProxyPolicyConfigMode)+",\n")
	}
	if this.FastAclConfigMode != nil {
		s = append(s, "FastAclConfigMode: "+fmt.Sprintf("%#v", this.FastAclConfigMode)+",\n")
	}
	if this.ViewInternal != nil {
		s = append(s, "ViewInternal: "+fmt.Sprintf("%#v", this.ViewInternal)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GlobalSpecType_DisableNetworkPolicy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GlobalSpecType_DisableNetworkPolicy{` +
		`DisableNetworkPolicy:` + fmt.Sprintf("%#v", this.DisableNetworkPolicy) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_ActiveNetworkPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GlobalSpecType_ActiveNetworkPolicies{` +
		`ActiveNetworkPolicies:` + fmt.Sprintf("%#v", this.ActiveNetworkPolicies) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_NetworkPolicyLegacyMode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GlobalSpecType_NetworkPolicyLegacyMode{` +
		`NetworkPolicyLegacyMode:` + fmt.Sprintf("%#v", this.NetworkPolicyLegacyMode) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_DisableForwardProxyPolicy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GlobalSpecType_DisableForwardProxyPolicy{` +
		`DisableForwardProxyPolicy:` + fmt.Sprintf("%#v", this.DisableForwardProxyPolicy) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_ActiveForwardProxyPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GlobalSpecType_ActiveForwardProxyPolicies{` +
		`ActiveForwardProxyPolicies:` + fmt.Sprintf("%#v", this.ActiveForwardProxyPolicies) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_ForwardProxyPolicyLegacyMode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GlobalSpecType_ForwardProxyPolicyLegacyMode{` +
		`ForwardProxyPolicyLegacyMode:` + fmt.Sprintf("%#v", this.ForwardProxyPolicyLegacyMode) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_DisableFastAcl) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GlobalSpecType_DisableFastAcl{` +
		`DisableFastAcl:` + fmt.Sprintf("%#v", this.DisableFastAcl) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_ActiveFastAcls) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GlobalSpecType_ActiveFastAcls{` +
		`ActiveFastAcls:` + fmt.Sprintf("%#v", this.ActiveFastAcls) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_FastAclLegacyMode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GlobalSpecType_FastAclLegacyMode{` +
		`FastAclLegacyMode:` + fmt.Sprintf("%#v", this.FastAclLegacyMode) + `}`}, ", ")
	return s
}
func (this *CreateSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 13)
	s = append(s, "&network_firewall.CreateSpecType{")
	if this.NetworkPolicyChoice != nil {
		s = append(s, "NetworkPolicyChoice: "+fmt.Sprintf("%#v", this.NetworkPolicyChoice)+",\n")
	}
	if this.ForwardProxyPolicyChoice != nil {
		s = append(s, "ForwardProxyPolicyChoice: "+fmt.Sprintf("%#v", this.ForwardProxyPolicyChoice)+",\n")
	}
	if this.FastAclChoice != nil {
		s = append(s, "FastAclChoice: "+fmt.Sprintf("%#v", this.FastAclChoice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateSpecType_DisableNetworkPolicy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.CreateSpecType_DisableNetworkPolicy{` +
		`DisableNetworkPolicy:` + fmt.Sprintf("%#v", this.DisableNetworkPolicy) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_ActiveNetworkPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.CreateSpecType_ActiveNetworkPolicies{` +
		`ActiveNetworkPolicies:` + fmt.Sprintf("%#v", this.ActiveNetworkPolicies) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_NetworkPolicySet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.CreateSpecType_NetworkPolicySet{` +
		`NetworkPolicySet:` + fmt.Sprintf("%#v", this.NetworkPolicySet) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_DisableForwardProxyPolicy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.CreateSpecType_DisableForwardProxyPolicy{` +
		`DisableForwardProxyPolicy:` + fmt.Sprintf("%#v", this.DisableForwardProxyPolicy) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_ActiveForwardProxyPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.CreateSpecType_ActiveForwardProxyPolicies{` +
		`ActiveForwardProxyPolicies:` + fmt.Sprintf("%#v", this.ActiveForwardProxyPolicies) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_ForwardProxyPolicySet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.CreateSpecType_ForwardProxyPolicySet{` +
		`ForwardProxyPolicySet:` + fmt.Sprintf("%#v", this.ForwardProxyPolicySet) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_DisableFastAcl) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.CreateSpecType_DisableFastAcl{` +
		`DisableFastAcl:` + fmt.Sprintf("%#v", this.DisableFastAcl) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_ActiveFastAcls) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.CreateSpecType_ActiveFastAcls{` +
		`ActiveFastAcls:` + fmt.Sprintf("%#v", this.ActiveFastAcls) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_FastAclSet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.CreateSpecType_FastAclSet{` +
		`FastAclSet:` + fmt.Sprintf("%#v", this.FastAclSet) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 13)
	s = append(s, "&network_firewall.ReplaceSpecType{")
	if this.NetworkPolicyChoice != nil {
		s = append(s, "NetworkPolicyChoice: "+fmt.Sprintf("%#v", this.NetworkPolicyChoice)+",\n")
	}
	if this.ForwardProxyPolicyChoice != nil {
		s = append(s, "ForwardProxyPolicyChoice: "+fmt.Sprintf("%#v", this.ForwardProxyPolicyChoice)+",\n")
	}
	if this.FastAclChoice != nil {
		s = append(s, "FastAclChoice: "+fmt.Sprintf("%#v", this.FastAclChoice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ReplaceSpecType_DisableNetworkPolicy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.ReplaceSpecType_DisableNetworkPolicy{` +
		`DisableNetworkPolicy:` + fmt.Sprintf("%#v", this.DisableNetworkPolicy) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_ActiveNetworkPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.ReplaceSpecType_ActiveNetworkPolicies{` +
		`ActiveNetworkPolicies:` + fmt.Sprintf("%#v", this.ActiveNetworkPolicies) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_NetworkPolicySet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.ReplaceSpecType_NetworkPolicySet{` +
		`NetworkPolicySet:` + fmt.Sprintf("%#v", this.NetworkPolicySet) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_DisableForwardProxyPolicy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.ReplaceSpecType_DisableForwardProxyPolicy{` +
		`DisableForwardProxyPolicy:` + fmt.Sprintf("%#v", this.DisableForwardProxyPolicy) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_ActiveForwardProxyPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.ReplaceSpecType_ActiveForwardProxyPolicies{` +
		`ActiveForwardProxyPolicies:` + fmt.Sprintf("%#v", this.ActiveForwardProxyPolicies) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_ForwardProxyPolicySet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.ReplaceSpecType_ForwardProxyPolicySet{` +
		`ForwardProxyPolicySet:` + fmt.Sprintf("%#v", this.ForwardProxyPolicySet) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_DisableFastAcl) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.ReplaceSpecType_DisableFastAcl{` +
		`DisableFastAcl:` + fmt.Sprintf("%#v", this.DisableFastAcl) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_ActiveFastAcls) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.ReplaceSpecType_ActiveFastAcls{` +
		`ActiveFastAcls:` + fmt.Sprintf("%#v", this.ActiveFastAcls) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_FastAclSet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.ReplaceSpecType_FastAclSet{` +
		`FastAclSet:` + fmt.Sprintf("%#v", this.FastAclSet) + `}`}, ", ")
	return s
}
func (this *GetSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 13)
	s = append(s, "&network_firewall.GetSpecType{")
	if this.NetworkPolicyChoice != nil {
		s = append(s, "NetworkPolicyChoice: "+fmt.Sprintf("%#v", this.NetworkPolicyChoice)+",\n")
	}
	if this.ForwardProxyPolicyChoice != nil {
		s = append(s, "ForwardProxyPolicyChoice: "+fmt.Sprintf("%#v", this.ForwardProxyPolicyChoice)+",\n")
	}
	if this.FastAclChoice != nil {
		s = append(s, "FastAclChoice: "+fmt.Sprintf("%#v", this.FastAclChoice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetSpecType_DisableNetworkPolicy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GetSpecType_DisableNetworkPolicy{` +
		`DisableNetworkPolicy:` + fmt.Sprintf("%#v", this.DisableNetworkPolicy) + `}`}, ", ")
	return s
}
func (this *GetSpecType_ActiveNetworkPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GetSpecType_ActiveNetworkPolicies{` +
		`ActiveNetworkPolicies:` + fmt.Sprintf("%#v", this.ActiveNetworkPolicies) + `}`}, ", ")
	return s
}
func (this *GetSpecType_NetworkPolicySet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GetSpecType_NetworkPolicySet{` +
		`NetworkPolicySet:` + fmt.Sprintf("%#v", this.NetworkPolicySet) + `}`}, ", ")
	return s
}
func (this *GetSpecType_DisableForwardProxyPolicy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GetSpecType_DisableForwardProxyPolicy{` +
		`DisableForwardProxyPolicy:` + fmt.Sprintf("%#v", this.DisableForwardProxyPolicy) + `}`}, ", ")
	return s
}
func (this *GetSpecType_ActiveForwardProxyPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GetSpecType_ActiveForwardProxyPolicies{` +
		`ActiveForwardProxyPolicies:` + fmt.Sprintf("%#v", this.ActiveForwardProxyPolicies) + `}`}, ", ")
	return s
}
func (this *GetSpecType_ForwardProxyPolicySet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GetSpecType_ForwardProxyPolicySet{` +
		`ForwardProxyPolicySet:` + fmt.Sprintf("%#v", this.ForwardProxyPolicySet) + `}`}, ", ")
	return s
}
func (this *GetSpecType_DisableFastAcl) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GetSpecType_DisableFastAcl{` +
		`DisableFastAcl:` + fmt.Sprintf("%#v", this.DisableFastAcl) + `}`}, ", ")
	return s
}
func (this *GetSpecType_ActiveFastAcls) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GetSpecType_ActiveFastAcls{` +
		`ActiveFastAcls:` + fmt.Sprintf("%#v", this.ActiveFastAcls) + `}`}, ", ")
	return s
}
func (this *GetSpecType_FastAclSet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GetSpecType_FastAclSet{` +
		`FastAclSet:` + fmt.Sprintf("%#v", this.FastAclSet) + `}`}, ", ")
	return s
}
func (this *NetworkFirewallStatus) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&network_firewall.NetworkFirewallStatus{")
	s = append(s, "Installed: "+fmt.Sprintf("%#v", this.Installed)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringTypes(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *ActiveNetworkPoliciesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActiveNetworkPoliciesType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.NetworkPolicies) > 0 {
		for _, msg := range m.NetworkPolicies {
			dAtA[i] = 0xa
			i++
			i = encodeVarintTypes(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *ActiveForwardProxyPoliciesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActiveForwardProxyPoliciesType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ForwardProxyPolicies) > 0 {
		for _, msg := range m.ForwardProxyPolicies {
			dAtA[i] = 0xa
			i++
			i = encodeVarintTypes(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *ActiveFastACLsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActiveFastACLsType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.FastAcls) > 0 {
		for _, msg := range m.FastAcls {
			dAtA[i] = 0xa
			i++
			i = encodeVarintTypes(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *GlobalSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GlobalSpecType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.NetworkPolicySet) > 0 {
		for _, msg := range m.NetworkPolicySet {
			dAtA[i] = 0xa
			i++
			i = encodeVarintTypes(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.ForwardProxyPolicySet) > 0 {
		for _, msg := range m.ForwardProxyPolicySet {
			dAtA[i] = 0x12
			i++
			i = encodeVarintTypes(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.FastAclSet) > 0 {
		for _, msg := range m.FastAclSet {
			dAtA[i] = 0x22
			i++
			i = encodeVarintTypes(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.NetworkPolicyConfigMode != nil {
		nn1, err := m.NetworkPolicyConfigMode.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn1
	}
	if m.ForwardProxyPolicyConfigMode != nil {
		nn2, err := m.ForwardProxyPolicyConfigMode.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn2
	}
	if m.FastAclConfigMode != nil {
		nn3, err := m.FastAclConfigMode.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn3
	}
	if m.ViewInternal != nil {
		dAtA[i] = 0xc2
		i++
		dAtA[i] = 0x3e
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ViewInternal.Size()))
		n4, err := m.ViewInternal.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	return i, nil
}

func (m *GlobalSpecType_DisableNetworkPolicy) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.DisableNetworkPolicy != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.DisableNetworkPolicy.Size()))
		n5, err := m.DisableNetworkPolicy.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	return i, nil
}
func (m *GlobalSpecType_ActiveNetworkPolicies) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ActiveNetworkPolicies != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ActiveNetworkPolicies.Size()))
		n6, err := m.ActiveNetworkPolicies.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n6
	}
	return i, nil
}
func (m *GlobalSpecType_DisableForwardProxyPolicy) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.DisableForwardProxyPolicy != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.DisableForwardProxyPolicy.Size()))
		n7, err := m.DisableForwardProxyPolicy.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n7
	}
	return i, nil
}
func (m *GlobalSpecType_ActiveForwardProxyPolicies) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ActiveForwardProxyPolicies != nil {
		dAtA[i] = 0x52
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ActiveForwardProxyPolicies.Size()))
		n8, err := m.ActiveForwardProxyPolicies.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n8
	}
	return i, nil
}
func (m *GlobalSpecType_NetworkPolicyLegacyMode) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NetworkPolicyLegacyMode != nil {
		dAtA[i] = 0x62
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NetworkPolicyLegacyMode.Size()))
		n9, err := m.NetworkPolicyLegacyMode.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n9
	}
	return i, nil
}
func (m *GlobalSpecType_ForwardProxyPolicyLegacyMode) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ForwardProxyPolicyLegacyMode != nil {
		dAtA[i] = 0x72
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ForwardProxyPolicyLegacyMode.Size()))
		n10, err := m.ForwardProxyPolicyLegacyMode.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n10
	}
	return i, nil
}
func (m *GlobalSpecType_DisableFastAcl) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.DisableFastAcl != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.DisableFastAcl.Size()))
		n11, err := m.DisableFastAcl.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n11
	}
	return i, nil
}
func (m *GlobalSpecType_ActiveFastAcls) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ActiveFastAcls != nil {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ActiveFastAcls.Size()))
		n12, err := m.ActiveFastAcls.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n12
	}
	return i, nil
}
func (m *GlobalSpecType_FastAclLegacyMode) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.FastAclLegacyMode != nil {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.FastAclLegacyMode.Size()))
		n13, err := m.FastAclLegacyMode.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n13
	}
	return i, nil
}
func (m *CreateSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateSpecType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.NetworkPolicyChoice != nil {
		nn14, err := m.NetworkPolicyChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn14
	}
	if m.ForwardProxyPolicyChoice != nil {
		nn15, err := m.ForwardProxyPolicyChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn15
	}
	if m.FastAclChoice != nil {
		nn16, err := m.FastAclChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn16
	}
	return i, nil
}

func (m *CreateSpecType_DisableNetworkPolicy) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.DisableNetworkPolicy != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.DisableNetworkPolicy.Size()))
		n17, err := m.DisableNetworkPolicy.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n17
	}
	return i, nil
}
func (m *CreateSpecType_ActiveNetworkPolicies) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ActiveNetworkPolicies != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ActiveNetworkPolicies.Size()))
		n18, err := m.ActiveNetworkPolicies.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n18
	}
	return i, nil
}
func (m *CreateSpecType_NetworkPolicySet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NetworkPolicySet != nil {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NetworkPolicySet.Size()))
		n19, err := m.NetworkPolicySet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n19
	}
	return i, nil
}
func (m *CreateSpecType_DisableForwardProxyPolicy) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.DisableForwardProxyPolicy != nil {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.DisableForwardProxyPolicy.Size()))
		n20, err := m.DisableForwardProxyPolicy.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n20
	}
	return i, nil
}
func (m *CreateSpecType_ActiveForwardProxyPolicies) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ActiveForwardProxyPolicies != nil {
		dAtA[i] = 0xd2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ActiveForwardProxyPolicies.Size()))
		n21, err := m.ActiveForwardProxyPolicies.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n21
	}
	return i, nil
}
func (m *CreateSpecType_ForwardProxyPolicySet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ForwardProxyPolicySet != nil {
		dAtA[i] = 0xda
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ForwardProxyPolicySet.Size()))
		n22, err := m.ForwardProxyPolicySet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n22
	}
	return i, nil
}
func (m *CreateSpecType_DisableFastAcl) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.DisableFastAcl != nil {
		dAtA[i] = 0xea
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.DisableFastAcl.Size()))
		n23, err := m.DisableFastAcl.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n23
	}
	return i, nil
}
func (m *CreateSpecType_ActiveFastAcls) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ActiveFastAcls != nil {
		dAtA[i] = 0xf2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ActiveFastAcls.Size()))
		n24, err := m.ActiveFastAcls.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n24
	}
	return i, nil
}
func (m *CreateSpecType_FastAclSet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.FastAclSet != nil {
		dAtA[i] = 0xfa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.FastAclSet.Size()))
		n25, err := m.FastAclSet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n25
	}
	return i, nil
}
func (m *ReplaceSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReplaceSpecType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.NetworkPolicyChoice != nil {
		nn26, err := m.NetworkPolicyChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn26
	}
	if m.ForwardProxyPolicyChoice != nil {
		nn27, err := m.ForwardProxyPolicyChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn27
	}
	if m.FastAclChoice != nil {
		nn28, err := m.FastAclChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn28
	}
	return i, nil
}

func (m *ReplaceSpecType_DisableNetworkPolicy) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.DisableNetworkPolicy != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.DisableNetworkPolicy.Size()))
		n29, err := m.DisableNetworkPolicy.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n29
	}
	return i, nil
}
func (m *ReplaceSpecType_ActiveNetworkPolicies) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ActiveNetworkPolicies != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ActiveNetworkPolicies.Size()))
		n30, err := m.ActiveNetworkPolicies.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n30
	}
	return i, nil
}
func (m *ReplaceSpecType_NetworkPolicySet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NetworkPolicySet != nil {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NetworkPolicySet.Size()))
		n31, err := m.NetworkPolicySet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n31
	}
	return i, nil
}
func (m *ReplaceSpecType_DisableForwardProxyPolicy) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.DisableForwardProxyPolicy != nil {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.DisableForwardProxyPolicy.Size()))
		n32, err := m.DisableForwardProxyPolicy.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n32
	}
	return i, nil
}
func (m *ReplaceSpecType_ActiveForwardProxyPolicies) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ActiveForwardProxyPolicies != nil {
		dAtA[i] = 0xd2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ActiveForwardProxyPolicies.Size()))
		n33, err := m.ActiveForwardProxyPolicies.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n33
	}
	return i, nil
}
func (m *ReplaceSpecType_ForwardProxyPolicySet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ForwardProxyPolicySet != nil {
		dAtA[i] = 0xda
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ForwardProxyPolicySet.Size()))
		n34, err := m.ForwardProxyPolicySet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n34
	}
	return i, nil
}
func (m *ReplaceSpecType_DisableFastAcl) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.DisableFastAcl != nil {
		dAtA[i] = 0xea
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.DisableFastAcl.Size()))
		n35, err := m.DisableFastAcl.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n35
	}
	return i, nil
}
func (m *ReplaceSpecType_ActiveFastAcls) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ActiveFastAcls != nil {
		dAtA[i] = 0xf2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ActiveFastAcls.Size()))
		n36, err := m.ActiveFastAcls.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n36
	}
	return i, nil
}
func (m *ReplaceSpecType_FastAclSet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.FastAclSet != nil {
		dAtA[i] = 0xfa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.FastAclSet.Size()))
		n37, err := m.FastAclSet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n37
	}
	return i, nil
}
func (m *GetSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetSpecType) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.NetworkPolicyChoice != nil {
		nn38, err := m.NetworkPolicyChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn38
	}
	if m.ForwardProxyPolicyChoice != nil {
		nn39, err := m.ForwardProxyPolicyChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn39
	}
	if m.FastAclChoice != nil {
		nn40, err := m.FastAclChoice.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn40
	}
	return i, nil
}

func (m *GetSpecType_DisableNetworkPolicy) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.DisableNetworkPolicy != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.DisableNetworkPolicy.Size()))
		n41, err := m.DisableNetworkPolicy.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n41
	}
	return i, nil
}
func (m *GetSpecType_ActiveNetworkPolicies) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ActiveNetworkPolicies != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ActiveNetworkPolicies.Size()))
		n42, err := m.ActiveNetworkPolicies.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n42
	}
	return i, nil
}
func (m *GetSpecType_NetworkPolicySet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NetworkPolicySet != nil {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.NetworkPolicySet.Size()))
		n43, err := m.NetworkPolicySet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n43
	}
	return i, nil
}
func (m *GetSpecType_DisableForwardProxyPolicy) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.DisableForwardProxyPolicy != nil {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.DisableForwardProxyPolicy.Size()))
		n44, err := m.DisableForwardProxyPolicy.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n44
	}
	return i, nil
}
func (m *GetSpecType_ActiveForwardProxyPolicies) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ActiveForwardProxyPolicies != nil {
		dAtA[i] = 0xd2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ActiveForwardProxyPolicies.Size()))
		n45, err := m.ActiveForwardProxyPolicies.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n45
	}
	return i, nil
}
func (m *GetSpecType_ForwardProxyPolicySet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ForwardProxyPolicySet != nil {
		dAtA[i] = 0xda
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ForwardProxyPolicySet.Size()))
		n46, err := m.ForwardProxyPolicySet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n46
	}
	return i, nil
}
func (m *GetSpecType_DisableFastAcl) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.DisableFastAcl != nil {
		dAtA[i] = 0xea
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.DisableFastAcl.Size()))
		n47, err := m.DisableFastAcl.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n47
	}
	return i, nil
}
func (m *GetSpecType_ActiveFastAcls) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ActiveFastAcls != nil {
		dAtA[i] = 0xf2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.ActiveFastAcls.Size()))
		n48, err := m.ActiveFastAcls.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n48
	}
	return i, nil
}
func (m *GetSpecType_FastAclSet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.FastAclSet != nil {
		dAtA[i] = 0xfa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintTypes(dAtA, i, uint64(m.FastAclSet.Size()))
		n49, err := m.FastAclSet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n49
	}
	return i, nil
}
func (m *NetworkFirewallStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkFirewallStatus) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Installed {
		dAtA[i] = 0x8
		i++
		if m.Installed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	return i, nil
}

func encodeVarintTypes(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func NewPopulatedActiveNetworkPoliciesType(r randyTypes, easy bool) *ActiveNetworkPoliciesType {
	this := &ActiveNetworkPoliciesType{}
	if r.Intn(10) != 0 {
		v1 := r.Intn(5)
		this.NetworkPolicies = make([]*ves_io_schema_views.ObjectRefType, v1)
		for i := 0; i < v1; i++ {
			this.NetworkPolicies[i] = ves_io_schema_views.NewPopulatedObjectRefType(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedActiveForwardProxyPoliciesType(r randyTypes, easy bool) *ActiveForwardProxyPoliciesType {
	this := &ActiveForwardProxyPoliciesType{}
	if r.Intn(10) != 0 {
		v2 := r.Intn(5)
		this.ForwardProxyPolicies = make([]*ves_io_schema_views.ObjectRefType, v2)
		for i := 0; i < v2; i++ {
			this.ForwardProxyPolicies[i] = ves_io_schema_views.NewPopulatedObjectRefType(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedActiveFastACLsType(r randyTypes, easy bool) *ActiveFastACLsType {
	this := &ActiveFastACLsType{}
	if r.Intn(10) != 0 {
		v3 := r.Intn(5)
		this.FastAcls = make([]*ves_io_schema_views.ObjectRefType, v3)
		for i := 0; i < v3; i++ {
			this.FastAcls[i] = ves_io_schema_views.NewPopulatedObjectRefType(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedGlobalSpecType(r randyTypes, easy bool) *GlobalSpecType {
	this := &GlobalSpecType{}
	if r.Intn(10) != 0 {
		v4 := r.Intn(5)
		this.NetworkPolicySet = make([]*ves_io_schema4.ObjectRefType, v4)
		for i := 0; i < v4; i++ {
			this.NetworkPolicySet[i] = ves_io_schema4.NewPopulatedObjectRefType(r, easy)
		}
	}
	if r.Intn(10) != 0 {
		v5 := r.Intn(5)
		this.ForwardProxyPolicySet = make([]*ves_io_schema4.ObjectRefType, v5)
		for i := 0; i < v5; i++ {
			this.ForwardProxyPolicySet[i] = ves_io_schema4.NewPopulatedObjectRefType(r, easy)
		}
	}
	if r.Intn(10) != 0 {
		v6 := r.Intn(5)
		this.FastAclSet = make([]*ves_io_schema4.ObjectRefType, v6)
		for i := 0; i < v6; i++ {
			this.FastAclSet[i] = ves_io_schema4.NewPopulatedObjectRefType(r, easy)
		}
	}
	oneofNumber_NetworkPolicyConfigMode := []int32{6, 7, 12}[r.Intn(3)]
	switch oneofNumber_NetworkPolicyConfigMode {
	case 6:
		this.NetworkPolicyConfigMode = NewPopulatedGlobalSpecType_DisableNetworkPolicy(r, easy)
	case 7:
		this.NetworkPolicyConfigMode = NewPopulatedGlobalSpecType_ActiveNetworkPolicies(r, easy)
	case 12:
		this.NetworkPolicyConfigMode = NewPopulatedGlobalSpecType_NetworkPolicyLegacyMode(r, easy)
	}
	oneofNumber_ForwardProxyPolicyConfigMode := []int32{9, 10, 14}[r.Intn(3)]
	switch oneofNumber_ForwardProxyPolicyConfigMode {
	case 9:
		this.ForwardProxyPolicyConfigMode = NewPopulatedGlobalSpecType_DisableForwardProxyPolicy(r, easy)
	case 10:
		this.ForwardProxyPolicyConfigMode = NewPopulatedGlobalSpecType_ActiveForwardProxyPolicies(r, easy)
	case 14:
		this.ForwardProxyPolicyConfigMode = NewPopulatedGlobalSpecType_ForwardProxyPolicyLegacyMode(r, easy)
	}
	oneofNumber_FastAclConfigMode := []int32{16, 17, 18}[r.Intn(3)]
	switch oneofNumber_FastAclConfigMode {
	case 16:
		this.FastAclConfigMode = NewPopulatedGlobalSpecType_DisableFastAcl(r, easy)
	case 17:
		this.FastAclConfigMode = NewPopulatedGlobalSpecType_ActiveFastAcls(r, easy)
	case 18:
		this.FastAclConfigMode = NewPopulatedGlobalSpecType_FastAclLegacyMode(r, easy)
	}
	if r.Intn(10) != 0 {
		this.ViewInternal = ves_io_schema_views.NewPopulatedObjectRefType(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedGlobalSpecType_DisableNetworkPolicy(r randyTypes, easy bool) *GlobalSpecType_DisableNetworkPolicy {
	this := &GlobalSpecType_DisableNetworkPolicy{}
	this.DisableNetworkPolicy = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedGlobalSpecType_ActiveNetworkPolicies(r randyTypes, easy bool) *GlobalSpecType_ActiveNetworkPolicies {
	this := &GlobalSpecType_ActiveNetworkPolicies{}
	this.ActiveNetworkPolicies = NewPopulatedActiveNetworkPoliciesType(r, easy)
	return this
}
func NewPopulatedGlobalSpecType_DisableForwardProxyPolicy(r randyTypes, easy bool) *GlobalSpecType_DisableForwardProxyPolicy {
	this := &GlobalSpecType_DisableForwardProxyPolicy{}
	this.DisableForwardProxyPolicy = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedGlobalSpecType_ActiveForwardProxyPolicies(r randyTypes, easy bool) *GlobalSpecType_ActiveForwardProxyPolicies {
	this := &GlobalSpecType_ActiveForwardProxyPolicies{}
	this.ActiveForwardProxyPolicies = NewPopulatedActiveForwardProxyPoliciesType(r, easy)
	return this
}
func NewPopulatedGlobalSpecType_NetworkPolicyLegacyMode(r randyTypes, easy bool) *GlobalSpecType_NetworkPolicyLegacyMode {
	this := &GlobalSpecType_NetworkPolicyLegacyMode{}
	this.NetworkPolicyLegacyMode = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedGlobalSpecType_ForwardProxyPolicyLegacyMode(r randyTypes, easy bool) *GlobalSpecType_ForwardProxyPolicyLegacyMode {
	this := &GlobalSpecType_ForwardProxyPolicyLegacyMode{}
	this.ForwardProxyPolicyLegacyMode = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedGlobalSpecType_DisableFastAcl(r randyTypes, easy bool) *GlobalSpecType_DisableFastAcl {
	this := &GlobalSpecType_DisableFastAcl{}
	this.DisableFastAcl = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedGlobalSpecType_ActiveFastAcls(r randyTypes, easy bool) *GlobalSpecType_ActiveFastAcls {
	this := &GlobalSpecType_ActiveFastAcls{}
	this.ActiveFastAcls = NewPopulatedActiveFastACLsType(r, easy)
	return this
}
func NewPopulatedGlobalSpecType_FastAclLegacyMode(r randyTypes, easy bool) *GlobalSpecType_FastAclLegacyMode {
	this := &GlobalSpecType_FastAclLegacyMode{}
	this.FastAclLegacyMode = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedCreateSpecType(r randyTypes, easy bool) *CreateSpecType {
	this := &CreateSpecType{}
	oneofNumber_NetworkPolicyChoice := []int32{21, 22, 23}[r.Intn(3)]
	switch oneofNumber_NetworkPolicyChoice {
	case 21:
		this.NetworkPolicyChoice = NewPopulatedCreateSpecType_DisableNetworkPolicy(r, easy)
	case 22:
		this.NetworkPolicyChoice = NewPopulatedCreateSpecType_ActiveNetworkPolicies(r, easy)
	case 23:
		this.NetworkPolicyChoice = NewPopulatedCreateSpecType_NetworkPolicySet(r, easy)
	}
	oneofNumber_ForwardProxyPolicyChoice := []int32{25, 26, 27}[r.Intn(3)]
	switch oneofNumber_ForwardProxyPolicyChoice {
	case 25:
		this.ForwardProxyPolicyChoice = NewPopulatedCreateSpecType_DisableForwardProxyPolicy(r, easy)
	case 26:
		this.ForwardProxyPolicyChoice = NewPopulatedCreateSpecType_ActiveForwardProxyPolicies(r, easy)
	case 27:
		this.ForwardProxyPolicyChoice = NewPopulatedCreateSpecType_ForwardProxyPolicySet(r, easy)
	}
	oneofNumber_FastAclChoice := []int32{29, 30, 31}[r.Intn(3)]
	switch oneofNumber_FastAclChoice {
	case 29:
		this.FastAclChoice = NewPopulatedCreateSpecType_DisableFastAcl(r, easy)
	case 30:
		this.FastAclChoice = NewPopulatedCreateSpecType_ActiveFastAcls(r, easy)
	case 31:
		this.FastAclChoice = NewPopulatedCreateSpecType_FastAclSet(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedCreateSpecType_DisableNetworkPolicy(r randyTypes, easy bool) *CreateSpecType_DisableNetworkPolicy {
	this := &CreateSpecType_DisableNetworkPolicy{}
	this.DisableNetworkPolicy = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedCreateSpecType_ActiveNetworkPolicies(r randyTypes, easy bool) *CreateSpecType_ActiveNetworkPolicies {
	this := &CreateSpecType_ActiveNetworkPolicies{}
	this.ActiveNetworkPolicies = NewPopulatedActiveNetworkPoliciesType(r, easy)
	return this
}
func NewPopulatedCreateSpecType_NetworkPolicySet(r randyTypes, easy bool) *CreateSpecType_NetworkPolicySet {
	this := &CreateSpecType_NetworkPolicySet{}
	this.NetworkPolicySet = ves_io_schema_views.NewPopulatedObjectRefType(r, easy)
	return this
}
func NewPopulatedCreateSpecType_DisableForwardProxyPolicy(r randyTypes, easy bool) *CreateSpecType_DisableForwardProxyPolicy {
	this := &CreateSpecType_DisableForwardProxyPolicy{}
	this.DisableForwardProxyPolicy = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedCreateSpecType_ActiveForwardProxyPolicies(r randyTypes, easy bool) *CreateSpecType_ActiveForwardProxyPolicies {
	this := &CreateSpecType_ActiveForwardProxyPolicies{}
	this.ActiveForwardProxyPolicies = NewPopulatedActiveForwardProxyPoliciesType(r, easy)
	return this
}
func NewPopulatedCreateSpecType_ForwardProxyPolicySet(r randyTypes, easy bool) *CreateSpecType_ForwardProxyPolicySet {
	this := &CreateSpecType_ForwardProxyPolicySet{}
	this.ForwardProxyPolicySet = ves_io_schema_views.NewPopulatedObjectRefType(r, easy)
	return this
}
func NewPopulatedCreateSpecType_DisableFastAcl(r randyTypes, easy bool) *CreateSpecType_DisableFastAcl {
	this := &CreateSpecType_DisableFastAcl{}
	this.DisableFastAcl = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedCreateSpecType_ActiveFastAcls(r randyTypes, easy bool) *CreateSpecType_ActiveFastAcls {
	this := &CreateSpecType_ActiveFastAcls{}
	this.ActiveFastAcls = NewPopulatedActiveFastACLsType(r, easy)
	return this
}
func NewPopulatedCreateSpecType_FastAclSet(r randyTypes, easy bool) *CreateSpecType_FastAclSet {
	this := &CreateSpecType_FastAclSet{}
	this.FastAclSet = ves_io_schema_views.NewPopulatedObjectRefType(r, easy)
	return this
}
func NewPopulatedReplaceSpecType(r randyTypes, easy bool) *ReplaceSpecType {
	this := &ReplaceSpecType{}
	oneofNumber_NetworkPolicyChoice := []int32{21, 22, 23}[r.Intn(3)]
	switch oneofNumber_NetworkPolicyChoice {
	case 21:
		this.NetworkPolicyChoice = NewPopulatedReplaceSpecType_DisableNetworkPolicy(r, easy)
	case 22:
		this.NetworkPolicyChoice = NewPopulatedReplaceSpecType_ActiveNetworkPolicies(r, easy)
	case 23:
		this.NetworkPolicyChoice = NewPopulatedReplaceSpecType_NetworkPolicySet(r, easy)
	}
	oneofNumber_ForwardProxyPolicyChoice := []int32{25, 26, 27}[r.Intn(3)]
	switch oneofNumber_ForwardProxyPolicyChoice {
	case 25:
		this.ForwardProxyPolicyChoice = NewPopulatedReplaceSpecType_DisableForwardProxyPolicy(r, easy)
	case 26:
		this.ForwardProxyPolicyChoice = NewPopulatedReplaceSpecType_ActiveForwardProxyPolicies(r, easy)
	case 27:
		this.ForwardProxyPolicyChoice = NewPopulatedReplaceSpecType_ForwardProxyPolicySet(r, easy)
	}
	oneofNumber_FastAclChoice := []int32{29, 30, 31}[r.Intn(3)]
	switch oneofNumber_FastAclChoice {
	case 29:
		this.FastAclChoice = NewPopulatedReplaceSpecType_DisableFastAcl(r, easy)
	case 30:
		this.FastAclChoice = NewPopulatedReplaceSpecType_ActiveFastAcls(r, easy)
	case 31:
		this.FastAclChoice = NewPopulatedReplaceSpecType_FastAclSet(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedReplaceSpecType_DisableNetworkPolicy(r randyTypes, easy bool) *ReplaceSpecType_DisableNetworkPolicy {
	this := &ReplaceSpecType_DisableNetworkPolicy{}
	this.DisableNetworkPolicy = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedReplaceSpecType_ActiveNetworkPolicies(r randyTypes, easy bool) *ReplaceSpecType_ActiveNetworkPolicies {
	this := &ReplaceSpecType_ActiveNetworkPolicies{}
	this.ActiveNetworkPolicies = NewPopulatedActiveNetworkPoliciesType(r, easy)
	return this
}
func NewPopulatedReplaceSpecType_NetworkPolicySet(r randyTypes, easy bool) *ReplaceSpecType_NetworkPolicySet {
	this := &ReplaceSpecType_NetworkPolicySet{}
	this.NetworkPolicySet = ves_io_schema_views.NewPopulatedObjectRefType(r, easy)
	return this
}
func NewPopulatedReplaceSpecType_DisableForwardProxyPolicy(r randyTypes, easy bool) *ReplaceSpecType_DisableForwardProxyPolicy {
	this := &ReplaceSpecType_DisableForwardProxyPolicy{}
	this.DisableForwardProxyPolicy = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedReplaceSpecType_ActiveForwardProxyPolicies(r randyTypes, easy bool) *ReplaceSpecType_ActiveForwardProxyPolicies {
	this := &ReplaceSpecType_ActiveForwardProxyPolicies{}
	this.ActiveForwardProxyPolicies = NewPopulatedActiveForwardProxyPoliciesType(r, easy)
	return this
}
func NewPopulatedReplaceSpecType_ForwardProxyPolicySet(r randyTypes, easy bool) *ReplaceSpecType_ForwardProxyPolicySet {
	this := &ReplaceSpecType_ForwardProxyPolicySet{}
	this.ForwardProxyPolicySet = ves_io_schema_views.NewPopulatedObjectRefType(r, easy)
	return this
}
func NewPopulatedReplaceSpecType_DisableFastAcl(r randyTypes, easy bool) *ReplaceSpecType_DisableFastAcl {
	this := &ReplaceSpecType_DisableFastAcl{}
	this.DisableFastAcl = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedReplaceSpecType_ActiveFastAcls(r randyTypes, easy bool) *ReplaceSpecType_ActiveFastAcls {
	this := &ReplaceSpecType_ActiveFastAcls{}
	this.ActiveFastAcls = NewPopulatedActiveFastACLsType(r, easy)
	return this
}
func NewPopulatedReplaceSpecType_FastAclSet(r randyTypes, easy bool) *ReplaceSpecType_FastAclSet {
	this := &ReplaceSpecType_FastAclSet{}
	this.FastAclSet = ves_io_schema_views.NewPopulatedObjectRefType(r, easy)
	return this
}
func NewPopulatedGetSpecType(r randyTypes, easy bool) *GetSpecType {
	this := &GetSpecType{}
	oneofNumber_NetworkPolicyChoice := []int32{21, 22, 23}[r.Intn(3)]
	switch oneofNumber_NetworkPolicyChoice {
	case 21:
		this.NetworkPolicyChoice = NewPopulatedGetSpecType_DisableNetworkPolicy(r, easy)
	case 22:
		this.NetworkPolicyChoice = NewPopulatedGetSpecType_ActiveNetworkPolicies(r, easy)
	case 23:
		this.NetworkPolicyChoice = NewPopulatedGetSpecType_NetworkPolicySet(r, easy)
	}
	oneofNumber_ForwardProxyPolicyChoice := []int32{25, 26, 27}[r.Intn(3)]
	switch oneofNumber_ForwardProxyPolicyChoice {
	case 25:
		this.ForwardProxyPolicyChoice = NewPopulatedGetSpecType_DisableForwardProxyPolicy(r, easy)
	case 26:
		this.ForwardProxyPolicyChoice = NewPopulatedGetSpecType_ActiveForwardProxyPolicies(r, easy)
	case 27:
		this.ForwardProxyPolicyChoice = NewPopulatedGetSpecType_ForwardProxyPolicySet(r, easy)
	}
	oneofNumber_FastAclChoice := []int32{29, 30, 31}[r.Intn(3)]
	switch oneofNumber_FastAclChoice {
	case 29:
		this.FastAclChoice = NewPopulatedGetSpecType_DisableFastAcl(r, easy)
	case 30:
		this.FastAclChoice = NewPopulatedGetSpecType_ActiveFastAcls(r, easy)
	case 31:
		this.FastAclChoice = NewPopulatedGetSpecType_FastAclSet(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedGetSpecType_DisableNetworkPolicy(r randyTypes, easy bool) *GetSpecType_DisableNetworkPolicy {
	this := &GetSpecType_DisableNetworkPolicy{}
	this.DisableNetworkPolicy = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedGetSpecType_ActiveNetworkPolicies(r randyTypes, easy bool) *GetSpecType_ActiveNetworkPolicies {
	this := &GetSpecType_ActiveNetworkPolicies{}
	this.ActiveNetworkPolicies = NewPopulatedActiveNetworkPoliciesType(r, easy)
	return this
}
func NewPopulatedGetSpecType_NetworkPolicySet(r randyTypes, easy bool) *GetSpecType_NetworkPolicySet {
	this := &GetSpecType_NetworkPolicySet{}
	this.NetworkPolicySet = ves_io_schema_views.NewPopulatedObjectRefType(r, easy)
	return this
}
func NewPopulatedGetSpecType_DisableForwardProxyPolicy(r randyTypes, easy bool) *GetSpecType_DisableForwardProxyPolicy {
	this := &GetSpecType_DisableForwardProxyPolicy{}
	this.DisableForwardProxyPolicy = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedGetSpecType_ActiveForwardProxyPolicies(r randyTypes, easy bool) *GetSpecType_ActiveForwardProxyPolicies {
	this := &GetSpecType_ActiveForwardProxyPolicies{}
	this.ActiveForwardProxyPolicies = NewPopulatedActiveForwardProxyPoliciesType(r, easy)
	return this
}
func NewPopulatedGetSpecType_ForwardProxyPolicySet(r randyTypes, easy bool) *GetSpecType_ForwardProxyPolicySet {
	this := &GetSpecType_ForwardProxyPolicySet{}
	this.ForwardProxyPolicySet = ves_io_schema_views.NewPopulatedObjectRefType(r, easy)
	return this
}
func NewPopulatedGetSpecType_DisableFastAcl(r randyTypes, easy bool) *GetSpecType_DisableFastAcl {
	this := &GetSpecType_DisableFastAcl{}
	this.DisableFastAcl = ves_io_schema4.NewPopulatedEmpty(r, easy)
	return this
}
func NewPopulatedGetSpecType_ActiveFastAcls(r randyTypes, easy bool) *GetSpecType_ActiveFastAcls {
	this := &GetSpecType_ActiveFastAcls{}
	this.ActiveFastAcls = NewPopulatedActiveFastACLsType(r, easy)
	return this
}
func NewPopulatedGetSpecType_FastAclSet(r randyTypes, easy bool) *GetSpecType_FastAclSet {
	this := &GetSpecType_FastAclSet{}
	this.FastAclSet = ves_io_schema_views.NewPopulatedObjectRefType(r, easy)
	return this
}
func NewPopulatedNetworkFirewallStatus(r randyTypes, easy bool) *NetworkFirewallStatus {
	this := &NetworkFirewallStatus{}
	this.Installed = bool(bool(r.Intn(2) == 0))
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

type randyTypes interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneTypes(r randyTypes) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringTypes(r randyTypes) string {
	v7 := r.Intn(100)
	tmps := make([]rune, v7)
	for i := 0; i < v7; i++ {
		tmps[i] = randUTF8RuneTypes(r)
	}
	return string(tmps)
}
func randUnrecognizedTypes(r randyTypes, maxFieldNumber int) (dAtA []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		dAtA = randFieldTypes(dAtA, r, fieldNumber, wire)
	}
	return dAtA
}
func randFieldTypes(dAtA []byte, r randyTypes, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		dAtA = encodeVarintPopulateTypes(dAtA, uint64(key))
		v8 := r.Int63()
		if r.Intn(2) == 0 {
			v8 *= -1
		}
		dAtA = encodeVarintPopulateTypes(dAtA, uint64(v8))
	case 1:
		dAtA = encodeVarintPopulateTypes(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		dAtA = encodeVarintPopulateTypes(dAtA, uint64(key))
		ll := r.Intn(100)
		dAtA = encodeVarintPopulateTypes(dAtA, uint64(ll))
		for j := 0; j < ll; j++ {
			dAtA = append(dAtA, byte(r.Intn(256)))
		}
	default:
		dAtA = encodeVarintPopulateTypes(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return dAtA
}
func encodeVarintPopulateTypes(dAtA []byte, v uint64) []byte {
	for v >= 1<<7 {
		dAtA = append(dAtA, uint8(uint64(v)&0x7f|0x80))
		v >>= 7
	}
	dAtA = append(dAtA, uint8(v))
	return dAtA
}
func (m *ActiveNetworkPoliciesType) Size() (n int) {
	var l int
	_ = l
	if len(m.NetworkPolicies) > 0 {
		for _, e := range m.NetworkPolicies {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	return n
}

func (m *ActiveForwardProxyPoliciesType) Size() (n int) {
	var l int
	_ = l
	if len(m.ForwardProxyPolicies) > 0 {
		for _, e := range m.ForwardProxyPolicies {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	return n
}

func (m *ActiveFastACLsType) Size() (n int) {
	var l int
	_ = l
	if len(m.FastAcls) > 0 {
		for _, e := range m.FastAcls {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	return n
}

func (m *GlobalSpecType) Size() (n int) {
	var l int
	_ = l
	if len(m.NetworkPolicySet) > 0 {
		for _, e := range m.NetworkPolicySet {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	if len(m.ForwardProxyPolicySet) > 0 {
		for _, e := range m.ForwardProxyPolicySet {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	if len(m.FastAclSet) > 0 {
		for _, e := range m.FastAclSet {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	if m.NetworkPolicyConfigMode != nil {
		n += m.NetworkPolicyConfigMode.Size()
	}
	if m.ForwardProxyPolicyConfigMode != nil {
		n += m.ForwardProxyPolicyConfigMode.Size()
	}
	if m.FastAclConfigMode != nil {
		n += m.FastAclConfigMode.Size()
	}
	if m.ViewInternal != nil {
		l = m.ViewInternal.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *GlobalSpecType_DisableNetworkPolicy) Size() (n int) {
	var l int
	_ = l
	if m.DisableNetworkPolicy != nil {
		l = m.DisableNetworkPolicy.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_ActiveNetworkPolicies) Size() (n int) {
	var l int
	_ = l
	if m.ActiveNetworkPolicies != nil {
		l = m.ActiveNetworkPolicies.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_DisableForwardProxyPolicy) Size() (n int) {
	var l int
	_ = l
	if m.DisableForwardProxyPolicy != nil {
		l = m.DisableForwardProxyPolicy.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_ActiveForwardProxyPolicies) Size() (n int) {
	var l int
	_ = l
	if m.ActiveForwardProxyPolicies != nil {
		l = m.ActiveForwardProxyPolicies.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_NetworkPolicyLegacyMode) Size() (n int) {
	var l int
	_ = l
	if m.NetworkPolicyLegacyMode != nil {
		l = m.NetworkPolicyLegacyMode.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_ForwardProxyPolicyLegacyMode) Size() (n int) {
	var l int
	_ = l
	if m.ForwardProxyPolicyLegacyMode != nil {
		l = m.ForwardProxyPolicyLegacyMode.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_DisableFastAcl) Size() (n int) {
	var l int
	_ = l
	if m.DisableFastAcl != nil {
		l = m.DisableFastAcl.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_ActiveFastAcls) Size() (n int) {
	var l int
	_ = l
	if m.ActiveFastAcls != nil {
		l = m.ActiveFastAcls.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_FastAclLegacyMode) Size() (n int) {
	var l int
	_ = l
	if m.FastAclLegacyMode != nil {
		l = m.FastAclLegacyMode.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType) Size() (n int) {
	var l int
	_ = l
	if m.NetworkPolicyChoice != nil {
		n += m.NetworkPolicyChoice.Size()
	}
	if m.ForwardProxyPolicyChoice != nil {
		n += m.ForwardProxyPolicyChoice.Size()
	}
	if m.FastAclChoice != nil {
		n += m.FastAclChoice.Size()
	}
	return n
}

func (m *CreateSpecType_DisableNetworkPolicy) Size() (n int) {
	var l int
	_ = l
	if m.DisableNetworkPolicy != nil {
		l = m.DisableNetworkPolicy.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_ActiveNetworkPolicies) Size() (n int) {
	var l int
	_ = l
	if m.ActiveNetworkPolicies != nil {
		l = m.ActiveNetworkPolicies.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_NetworkPolicySet) Size() (n int) {
	var l int
	_ = l
	if m.NetworkPolicySet != nil {
		l = m.NetworkPolicySet.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_DisableForwardProxyPolicy) Size() (n int) {
	var l int
	_ = l
	if m.DisableForwardProxyPolicy != nil {
		l = m.DisableForwardProxyPolicy.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_ActiveForwardProxyPolicies) Size() (n int) {
	var l int
	_ = l
	if m.ActiveForwardProxyPolicies != nil {
		l = m.ActiveForwardProxyPolicies.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_ForwardProxyPolicySet) Size() (n int) {
	var l int
	_ = l
	if m.ForwardProxyPolicySet != nil {
		l = m.ForwardProxyPolicySet.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_DisableFastAcl) Size() (n int) {
	var l int
	_ = l
	if m.DisableFastAcl != nil {
		l = m.DisableFastAcl.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_ActiveFastAcls) Size() (n int) {
	var l int
	_ = l
	if m.ActiveFastAcls != nil {
		l = m.ActiveFastAcls.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_FastAclSet) Size() (n int) {
	var l int
	_ = l
	if m.FastAclSet != nil {
		l = m.FastAclSet.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType) Size() (n int) {
	var l int
	_ = l
	if m.NetworkPolicyChoice != nil {
		n += m.NetworkPolicyChoice.Size()
	}
	if m.ForwardProxyPolicyChoice != nil {
		n += m.ForwardProxyPolicyChoice.Size()
	}
	if m.FastAclChoice != nil {
		n += m.FastAclChoice.Size()
	}
	return n
}

func (m *ReplaceSpecType_DisableNetworkPolicy) Size() (n int) {
	var l int
	_ = l
	if m.DisableNetworkPolicy != nil {
		l = m.DisableNetworkPolicy.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_ActiveNetworkPolicies) Size() (n int) {
	var l int
	_ = l
	if m.ActiveNetworkPolicies != nil {
		l = m.ActiveNetworkPolicies.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_NetworkPolicySet) Size() (n int) {
	var l int
	_ = l
	if m.NetworkPolicySet != nil {
		l = m.NetworkPolicySet.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_DisableForwardProxyPolicy) Size() (n int) {
	var l int
	_ = l
	if m.DisableForwardProxyPolicy != nil {
		l = m.DisableForwardProxyPolicy.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_ActiveForwardProxyPolicies) Size() (n int) {
	var l int
	_ = l
	if m.ActiveForwardProxyPolicies != nil {
		l = m.ActiveForwardProxyPolicies.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_ForwardProxyPolicySet) Size() (n int) {
	var l int
	_ = l
	if m.ForwardProxyPolicySet != nil {
		l = m.ForwardProxyPolicySet.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_DisableFastAcl) Size() (n int) {
	var l int
	_ = l
	if m.DisableFastAcl != nil {
		l = m.DisableFastAcl.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_ActiveFastAcls) Size() (n int) {
	var l int
	_ = l
	if m.ActiveFastAcls != nil {
		l = m.ActiveFastAcls.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_FastAclSet) Size() (n int) {
	var l int
	_ = l
	if m.FastAclSet != nil {
		l = m.FastAclSet.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType) Size() (n int) {
	var l int
	_ = l
	if m.NetworkPolicyChoice != nil {
		n += m.NetworkPolicyChoice.Size()
	}
	if m.ForwardProxyPolicyChoice != nil {
		n += m.ForwardProxyPolicyChoice.Size()
	}
	if m.FastAclChoice != nil {
		n += m.FastAclChoice.Size()
	}
	return n
}

func (m *GetSpecType_DisableNetworkPolicy) Size() (n int) {
	var l int
	_ = l
	if m.DisableNetworkPolicy != nil {
		l = m.DisableNetworkPolicy.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_ActiveNetworkPolicies) Size() (n int) {
	var l int
	_ = l
	if m.ActiveNetworkPolicies != nil {
		l = m.ActiveNetworkPolicies.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_NetworkPolicySet) Size() (n int) {
	var l int
	_ = l
	if m.NetworkPolicySet != nil {
		l = m.NetworkPolicySet.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_DisableForwardProxyPolicy) Size() (n int) {
	var l int
	_ = l
	if m.DisableForwardProxyPolicy != nil {
		l = m.DisableForwardProxyPolicy.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_ActiveForwardProxyPolicies) Size() (n int) {
	var l int
	_ = l
	if m.ActiveForwardProxyPolicies != nil {
		l = m.ActiveForwardProxyPolicies.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_ForwardProxyPolicySet) Size() (n int) {
	var l int
	_ = l
	if m.ForwardProxyPolicySet != nil {
		l = m.ForwardProxyPolicySet.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_DisableFastAcl) Size() (n int) {
	var l int
	_ = l
	if m.DisableFastAcl != nil {
		l = m.DisableFastAcl.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_ActiveFastAcls) Size() (n int) {
	var l int
	_ = l
	if m.ActiveFastAcls != nil {
		l = m.ActiveFastAcls.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_FastAclSet) Size() (n int) {
	var l int
	_ = l
	if m.FastAclSet != nil {
		l = m.FastAclSet.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *NetworkFirewallStatus) Size() (n int) {
	var l int
	_ = l
	if m.Installed {
		n += 2
	}
	return n
}

func sovTypes(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozTypes(x uint64) (n int) {
	return sovTypes(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *ActiveNetworkPoliciesType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ActiveNetworkPoliciesType{`,
		`NetworkPolicies:` + strings.Replace(fmt.Sprintf("%v", this.NetworkPolicies), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ActiveForwardProxyPoliciesType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ActiveForwardProxyPoliciesType{`,
		`ForwardProxyPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ForwardProxyPolicies), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ActiveFastACLsType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ActiveFastACLsType{`,
		`FastAcls:` + strings.Replace(fmt.Sprintf("%v", this.FastAcls), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType{`,
		`NetworkPolicySet:` + strings.Replace(fmt.Sprintf("%v", this.NetworkPolicySet), "ObjectRefType", "ves_io_schema4.ObjectRefType", 1) + `,`,
		`ForwardProxyPolicySet:` + strings.Replace(fmt.Sprintf("%v", this.ForwardProxyPolicySet), "ObjectRefType", "ves_io_schema4.ObjectRefType", 1) + `,`,
		`FastAclSet:` + strings.Replace(fmt.Sprintf("%v", this.FastAclSet), "ObjectRefType", "ves_io_schema4.ObjectRefType", 1) + `,`,
		`NetworkPolicyConfigMode:` + fmt.Sprintf("%v", this.NetworkPolicyConfigMode) + `,`,
		`ForwardProxyPolicyConfigMode:` + fmt.Sprintf("%v", this.ForwardProxyPolicyConfigMode) + `,`,
		`FastAclConfigMode:` + fmt.Sprintf("%v", this.FastAclConfigMode) + `,`,
		`ViewInternal:` + strings.Replace(fmt.Sprintf("%v", this.ViewInternal), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_DisableNetworkPolicy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_DisableNetworkPolicy{`,
		`DisableNetworkPolicy:` + strings.Replace(fmt.Sprintf("%v", this.DisableNetworkPolicy), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_ActiveNetworkPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_ActiveNetworkPolicies{`,
		`ActiveNetworkPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveNetworkPolicies), "ActiveNetworkPoliciesType", "ActiveNetworkPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_DisableForwardProxyPolicy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_DisableForwardProxyPolicy{`,
		`DisableForwardProxyPolicy:` + strings.Replace(fmt.Sprintf("%v", this.DisableForwardProxyPolicy), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_ActiveForwardProxyPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_ActiveForwardProxyPolicies{`,
		`ActiveForwardProxyPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveForwardProxyPolicies), "ActiveForwardProxyPoliciesType", "ActiveForwardProxyPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_NetworkPolicyLegacyMode) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_NetworkPolicyLegacyMode{`,
		`NetworkPolicyLegacyMode:` + strings.Replace(fmt.Sprintf("%v", this.NetworkPolicyLegacyMode), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_ForwardProxyPolicyLegacyMode) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_ForwardProxyPolicyLegacyMode{`,
		`ForwardProxyPolicyLegacyMode:` + strings.Replace(fmt.Sprintf("%v", this.ForwardProxyPolicyLegacyMode), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_DisableFastAcl) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_DisableFastAcl{`,
		`DisableFastAcl:` + strings.Replace(fmt.Sprintf("%v", this.DisableFastAcl), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_ActiveFastAcls) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_ActiveFastAcls{`,
		`ActiveFastAcls:` + strings.Replace(fmt.Sprintf("%v", this.ActiveFastAcls), "ActiveFastACLsType", "ActiveFastACLsType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_FastAclLegacyMode) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_FastAclLegacyMode{`,
		`FastAclLegacyMode:` + strings.Replace(fmt.Sprintf("%v", this.FastAclLegacyMode), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType{`,
		`NetworkPolicyChoice:` + fmt.Sprintf("%v", this.NetworkPolicyChoice) + `,`,
		`ForwardProxyPolicyChoice:` + fmt.Sprintf("%v", this.ForwardProxyPolicyChoice) + `,`,
		`FastAclChoice:` + fmt.Sprintf("%v", this.FastAclChoice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_DisableNetworkPolicy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_DisableNetworkPolicy{`,
		`DisableNetworkPolicy:` + strings.Replace(fmt.Sprintf("%v", this.DisableNetworkPolicy), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_ActiveNetworkPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_ActiveNetworkPolicies{`,
		`ActiveNetworkPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveNetworkPolicies), "ActiveNetworkPoliciesType", "ActiveNetworkPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_NetworkPolicySet) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_NetworkPolicySet{`,
		`NetworkPolicySet:` + strings.Replace(fmt.Sprintf("%v", this.NetworkPolicySet), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_DisableForwardProxyPolicy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_DisableForwardProxyPolicy{`,
		`DisableForwardProxyPolicy:` + strings.Replace(fmt.Sprintf("%v", this.DisableForwardProxyPolicy), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_ActiveForwardProxyPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_ActiveForwardProxyPolicies{`,
		`ActiveForwardProxyPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveForwardProxyPolicies), "ActiveForwardProxyPoliciesType", "ActiveForwardProxyPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_ForwardProxyPolicySet) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_ForwardProxyPolicySet{`,
		`ForwardProxyPolicySet:` + strings.Replace(fmt.Sprintf("%v", this.ForwardProxyPolicySet), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_DisableFastAcl) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_DisableFastAcl{`,
		`DisableFastAcl:` + strings.Replace(fmt.Sprintf("%v", this.DisableFastAcl), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_ActiveFastAcls) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_ActiveFastAcls{`,
		`ActiveFastAcls:` + strings.Replace(fmt.Sprintf("%v", this.ActiveFastAcls), "ActiveFastACLsType", "ActiveFastACLsType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_FastAclSet) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_FastAclSet{`,
		`FastAclSet:` + strings.Replace(fmt.Sprintf("%v", this.FastAclSet), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType{`,
		`NetworkPolicyChoice:` + fmt.Sprintf("%v", this.NetworkPolicyChoice) + `,`,
		`ForwardProxyPolicyChoice:` + fmt.Sprintf("%v", this.ForwardProxyPolicyChoice) + `,`,
		`FastAclChoice:` + fmt.Sprintf("%v", this.FastAclChoice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_DisableNetworkPolicy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_DisableNetworkPolicy{`,
		`DisableNetworkPolicy:` + strings.Replace(fmt.Sprintf("%v", this.DisableNetworkPolicy), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_ActiveNetworkPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_ActiveNetworkPolicies{`,
		`ActiveNetworkPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveNetworkPolicies), "ActiveNetworkPoliciesType", "ActiveNetworkPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_NetworkPolicySet) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_NetworkPolicySet{`,
		`NetworkPolicySet:` + strings.Replace(fmt.Sprintf("%v", this.NetworkPolicySet), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_DisableForwardProxyPolicy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_DisableForwardProxyPolicy{`,
		`DisableForwardProxyPolicy:` + strings.Replace(fmt.Sprintf("%v", this.DisableForwardProxyPolicy), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_ActiveForwardProxyPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_ActiveForwardProxyPolicies{`,
		`ActiveForwardProxyPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveForwardProxyPolicies), "ActiveForwardProxyPoliciesType", "ActiveForwardProxyPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_ForwardProxyPolicySet) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_ForwardProxyPolicySet{`,
		`ForwardProxyPolicySet:` + strings.Replace(fmt.Sprintf("%v", this.ForwardProxyPolicySet), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_DisableFastAcl) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_DisableFastAcl{`,
		`DisableFastAcl:` + strings.Replace(fmt.Sprintf("%v", this.DisableFastAcl), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_ActiveFastAcls) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_ActiveFastAcls{`,
		`ActiveFastAcls:` + strings.Replace(fmt.Sprintf("%v", this.ActiveFastAcls), "ActiveFastACLsType", "ActiveFastACLsType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_FastAclSet) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_FastAclSet{`,
		`FastAclSet:` + strings.Replace(fmt.Sprintf("%v", this.FastAclSet), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType{`,
		`NetworkPolicyChoice:` + fmt.Sprintf("%v", this.NetworkPolicyChoice) + `,`,
		`ForwardProxyPolicyChoice:` + fmt.Sprintf("%v", this.ForwardProxyPolicyChoice) + `,`,
		`FastAclChoice:` + fmt.Sprintf("%v", this.FastAclChoice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_DisableNetworkPolicy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_DisableNetworkPolicy{`,
		`DisableNetworkPolicy:` + strings.Replace(fmt.Sprintf("%v", this.DisableNetworkPolicy), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_ActiveNetworkPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_ActiveNetworkPolicies{`,
		`ActiveNetworkPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveNetworkPolicies), "ActiveNetworkPoliciesType", "ActiveNetworkPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_NetworkPolicySet) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_NetworkPolicySet{`,
		`NetworkPolicySet:` + strings.Replace(fmt.Sprintf("%v", this.NetworkPolicySet), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_DisableForwardProxyPolicy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_DisableForwardProxyPolicy{`,
		`DisableForwardProxyPolicy:` + strings.Replace(fmt.Sprintf("%v", this.DisableForwardProxyPolicy), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_ActiveForwardProxyPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_ActiveForwardProxyPolicies{`,
		`ActiveForwardProxyPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveForwardProxyPolicies), "ActiveForwardProxyPoliciesType", "ActiveForwardProxyPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_ForwardProxyPolicySet) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_ForwardProxyPolicySet{`,
		`ForwardProxyPolicySet:` + strings.Replace(fmt.Sprintf("%v", this.ForwardProxyPolicySet), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_DisableFastAcl) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_DisableFastAcl{`,
		`DisableFastAcl:` + strings.Replace(fmt.Sprintf("%v", this.DisableFastAcl), "Empty", "ves_io_schema4.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_ActiveFastAcls) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_ActiveFastAcls{`,
		`ActiveFastAcls:` + strings.Replace(fmt.Sprintf("%v", this.ActiveFastAcls), "ActiveFastACLsType", "ActiveFastACLsType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_FastAclSet) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_FastAclSet{`,
		`FastAclSet:` + strings.Replace(fmt.Sprintf("%v", this.FastAclSet), "ObjectRefType", "ves_io_schema_views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NetworkFirewallStatus) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkFirewallStatus{`,
		`Installed:` + fmt.Sprintf("%v", this.Installed) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringTypes(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *ActiveNetworkPoliciesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActiveNetworkPoliciesType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActiveNetworkPoliciesType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkPolicies = append(m.NetworkPolicies, &ves_io_schema_views.ObjectRefType{})
			if err := m.NetworkPolicies[len(m.NetworkPolicies)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActiveForwardProxyPoliciesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActiveForwardProxyPoliciesType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActiveForwardProxyPoliciesType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardProxyPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ForwardProxyPolicies = append(m.ForwardProxyPolicies, &ves_io_schema_views.ObjectRefType{})
			if err := m.ForwardProxyPolicies[len(m.ForwardProxyPolicies)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActiveFastACLsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActiveFastACLsType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActiveFastACLsType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FastAcls", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FastAcls = append(m.FastAcls, &ves_io_schema_views.ObjectRefType{})
			if err := m.FastAcls[len(m.FastAcls)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GlobalSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GlobalSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GlobalSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkPolicySet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkPolicySet = append(m.NetworkPolicySet, &ves_io_schema4.ObjectRefType{})
			if err := m.NetworkPolicySet[len(m.NetworkPolicySet)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardProxyPolicySet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ForwardProxyPolicySet = append(m.ForwardProxyPolicySet, &ves_io_schema4.ObjectRefType{})
			if err := m.ForwardProxyPolicySet[len(m.ForwardProxyPolicySet)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FastAclSet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FastAclSet = append(m.FastAclSet, &ves_io_schema4.ObjectRefType{})
			if err := m.FastAclSet[len(m.FastAclSet)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableNetworkPolicy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyConfigMode = &GlobalSpecType_DisableNetworkPolicy{v}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveNetworkPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveNetworkPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyConfigMode = &GlobalSpecType_ActiveNetworkPolicies{v}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableForwardProxyPolicy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyConfigMode = &GlobalSpecType_DisableForwardProxyPolicy{v}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveForwardProxyPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveForwardProxyPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyConfigMode = &GlobalSpecType_ActiveForwardProxyPolicies{v}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkPolicyLegacyMode", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyConfigMode = &GlobalSpecType_NetworkPolicyLegacyMode{v}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardProxyPolicyLegacyMode", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyConfigMode = &GlobalSpecType_ForwardProxyPolicyLegacyMode{v}
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableFastAcl", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclConfigMode = &GlobalSpecType_DisableFastAcl{v}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveFastAcls", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveFastACLsType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclConfigMode = &GlobalSpecType_ActiveFastAcls{v}
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FastAclLegacyMode", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclConfigMode = &GlobalSpecType_FastAclLegacyMode{v}
			iNdEx = postIndex
		case 1000:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewInternal", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ViewInternal == nil {
				m.ViewInternal = &ves_io_schema_views.ObjectRefType{}
			}
			if err := m.ViewInternal.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableNetworkPolicy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &CreateSpecType_DisableNetworkPolicy{v}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveNetworkPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveNetworkPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &CreateSpecType_ActiveNetworkPolicies{v}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkPolicySet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &CreateSpecType_NetworkPolicySet{v}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableForwardProxyPolicy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyChoice = &CreateSpecType_DisableForwardProxyPolicy{v}
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveForwardProxyPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveForwardProxyPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyChoice = &CreateSpecType_ActiveForwardProxyPolicies{v}
			iNdEx = postIndex
		case 27:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardProxyPolicySet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyChoice = &CreateSpecType_ForwardProxyPolicySet{v}
			iNdEx = postIndex
		case 29:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableFastAcl", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclChoice = &CreateSpecType_DisableFastAcl{v}
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveFastAcls", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveFastACLsType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclChoice = &CreateSpecType_ActiveFastAcls{v}
			iNdEx = postIndex
		case 31:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FastAclSet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclChoice = &CreateSpecType_FastAclSet{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReplaceSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReplaceSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReplaceSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableNetworkPolicy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &ReplaceSpecType_DisableNetworkPolicy{v}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveNetworkPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveNetworkPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &ReplaceSpecType_ActiveNetworkPolicies{v}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkPolicySet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &ReplaceSpecType_NetworkPolicySet{v}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableForwardProxyPolicy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyChoice = &ReplaceSpecType_DisableForwardProxyPolicy{v}
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveForwardProxyPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveForwardProxyPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyChoice = &ReplaceSpecType_ActiveForwardProxyPolicies{v}
			iNdEx = postIndex
		case 27:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardProxyPolicySet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyChoice = &ReplaceSpecType_ForwardProxyPolicySet{v}
			iNdEx = postIndex
		case 29:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableFastAcl", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclChoice = &ReplaceSpecType_DisableFastAcl{v}
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveFastAcls", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveFastACLsType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclChoice = &ReplaceSpecType_ActiveFastAcls{v}
			iNdEx = postIndex
		case 31:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FastAclSet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclChoice = &ReplaceSpecType_FastAclSet{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableNetworkPolicy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &GetSpecType_DisableNetworkPolicy{v}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveNetworkPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveNetworkPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &GetSpecType_ActiveNetworkPolicies{v}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkPolicySet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &GetSpecType_NetworkPolicySet{v}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableForwardProxyPolicy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyChoice = &GetSpecType_DisableForwardProxyPolicy{v}
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveForwardProxyPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveForwardProxyPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyChoice = &GetSpecType_ActiveForwardProxyPolicies{v}
			iNdEx = postIndex
		case 27:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardProxyPolicySet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyChoice = &GetSpecType_ForwardProxyPolicySet{v}
			iNdEx = postIndex
		case 29:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableFastAcl", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema4.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclChoice = &GetSpecType_DisableFastAcl{v}
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveFastAcls", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveFastACLsType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclChoice = &GetSpecType_ActiveFastAcls{v}
			iNdEx = postIndex
		case 31:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FastAclSet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ves_io_schema_views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclChoice = &GetSpecType_FastAclSet{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkFirewallStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkFirewallStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkFirewallStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Installed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Installed = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTypes(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthTypes
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowTypes
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipTypes(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthTypes = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTypes   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("ves.io/schema/network_firewall/types.proto", fileDescriptorTypes) }
func init() {
	golang_proto.RegisterFile("ves.io/schema/network_firewall/types.proto", fileDescriptorTypes)
}

var fileDescriptorTypes = []byte{
	// 1346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0xcf, 0x6f, 0xda, 0xe6,
	0x1b, 0xcf, 0x9b, 0xf8, 0x0b, 0xe6, 0x4d, 0x4a, 0xde, 0xba, 0x90, 0x00, 0x01, 0x07, 0xf1, 0x3d,
	0xac, 0xda, 0x1c, 0x08, 0xa4, 0x6d, 0xda, 0x1d, 0xaa, 0x95, 0x6a, 0xfd, 0x61, 0x75, 0x5b, 0x45,
	0x3b, 0x55, 0x9a, 0xb6, 0x32, 0x63, 0x5e, 0xa8, 0x57, 0x83, 0x2d, 0xfb, 0x0d, 0x29, 0xd5, 0x90,
	0x2a, 0x4d, 0x9a, 0x34, 0xa9, 0x93, 0xa6, 0x1e, 0xb6, 0x7f, 0x61, 0xcb, 0x5f, 0x30, 0xcd, 0x97,
	0x68, 0xa7, 0x69, 0x27, 0x8e, 0x3d, 0x4d, 0x8b, 0x2b, 0xad, 0xd9, 0xad, 0xc7, 0x1d, 0x27, 0x8c,
	0x01, 0x1b, 0xec, 0x84, 0xb6, 0x93, 0x7a, 0xe1, 0x06, 0x7e, 0x7e, 0x7c, 0x9e, 0xf7, 0xf3, 0x3c,
	0xcf, 0xe7, 0xb5, 0x0c, 0xdf, 0x6e, 0x61, 0x3d, 0x2b, 0x29, 0x39, 0x5d, 0xbc, 0x87, 0x1b, 0x42,
	0xae, 0x89, 0xc9, 0xae, 0xa2, 0xdd, 0x2f, 0xd7, 0x24, 0x0d, 0xef, 0x0a, 0xb2, 0x9c, 0x23, 0x6d,
	0x15, 0xeb, 0x59, 0x55, 0x53, 0x88, 0xc2, 0xb0, 0x7d, 0xdf, 0x6c, 0xdf, 0x37, 0x3b, 0xee, 0x9b,
	0xd8, 0xa8, 0x4b, 0xe4, 0xde, 0x4e, 0x25, 0x2b, 0x2a, 0x8d, 0x5c, 0x5d, 0xa9, 0x2b, 0x39, 0x2b,
	0xac, 0xb2, 0x53, 0xb3, 0xfe, 0x59, 0x7f, 0xac, 0x5f, 0xfd, 0x74, 0x89, 0xf5, 0xba, 0xa2, 0xd4,
	0x65, 0x3c, 0xf2, 0x22, 0x52, 0x03, 0xeb, 0x44, 0x68, 0xa8, 0xb6, 0xc3, 0xea, 0x44, 0x6d, 0xb6,
	0x61, 0xcd, 0x6d, 0x50, 0x54, 0x22, 0x29, 0x4d, 0xbb, 0xca, 0x44, 0xca, 0x6d, 0x54, 0x5b, 0xa4,
	0xec, 0x38, 0x44, 0x22, 0xee, 0x36, 0x3b, 0x4d, 0x49, 0xb7, 0xa9, 0x25, 0xc8, 0x52, 0x55, 0x20,
	0xd8, 0xb6, 0xa6, 0xc7, 0xac, 0x12, 0xde, 0x2d, 0xbb, 0x91, 0xd7, 0x27, 0x3d, 0x74, 0x27, 0x40,
	0xe6, 0x07, 0x00, 0xe3, 0x97, 0x44, 0x22, 0xb5, 0xf0, 0x87, 0x7d, 0xee, 0x6e, 0x2a, 0xb2, 0x24,
	0x4a, 0x58, 0xbf, 0xdd, 0x56, 0x31, 0xf3, 0x10, 0xa2, 0x01, 0xa5, 0xaa, 0xfd, 0x3c, 0x06, 0xd2,
	0x0b, 0xa7, 0x17, 0x0b, 0x99, 0xac, 0x9b, 0x79, 0x2b, 0x73, 0xf6, 0xa3, 0xca, 0x17, 0x58, 0x24,
	0x25, 0x5c, 0xeb, 0x45, 0x17, 0xdf, 0xd9, 0xeb, 0x9c, 0x72, 0x85, 0xb7, 0xcb, 0x3d, 0xb7, 0x5f,
	0xfe, 0xde, 0x5f, 0x08, 0x3c, 0x01, 0x0b, 0xe8, 0x11, 0xe8, 0xfd, 0xfc, 0xdf, 0x13, 0x30, 0x4f,
	0x83, 0xd2, 0x72, 0xd3, 0x8d, 0x9f, 0xf9, 0x09, 0x40, 0xb6, 0x5f, 0xd9, 0x15, 0x45, 0xdb, 0x15,
	0xb4, 0xea, 0x4d, 0x4d, 0x79, 0xd0, 0x76, 0x95, 0xf7, 0x35, 0x80, 0x2b, 0xb5, 0xbe, 0xb1, 0xac,
	0xf6, 0xac, 0xaf, 0x52, 0x25, 0xb7, 0xd7, 0x89, 0x78, 0x24, 0x69, 0x7b, 0x97, 0x39, 0x70, 0x75,
	0x15, 0x93, 0xd9, 0x85, 0x8c, 0x5d, 0xaa, 0xa0, 0x93, 0x4b, 0x97, 0x6f, 0xf4, 0xcb, 0x13, 0x60,
	0xa8, 0x26, 0xe8, 0xa4, 0x2c, 0x88, 0xf2, 0xcb, 0x14, 0x94, 0xde, 0xeb, 0xd0, 0x83, 0x38, 0xef,
	0x22, 0x2c, 0xf3, 0x25, 0x51, 0xd6, 0x33, 0x7f, 0x2c, 0xc1, 0xf0, 0x55, 0x59, 0xa9, 0x08, 0xf2,
	0x2d, 0x15, 0x8b, 0x16, 0xaa, 0x02, 0x99, 0x31, 0xd2, 0x75, 0x4c, 0x6c, 0xf8, 0xe4, 0x18, 0xbc,
	0x1b, 0xf8, 0xff, 0x7b, 0x1d, 0x8f, 0xd0, 0x43, 0x03, 0x0c, 0xb1, 0x11, 0x28, 0x21, 0x67, 0x9f,
	0xda, 0xb7, 0x30, 0x61, 0x1e, 0xc2, 0x98, 0x17, 0x7f, 0x16, 0xec, 0xfc, 0x94, 0xb0, 0x3a, 0xd6,
	0x5a, 0x92, 0x88, 0xfd, 0x61, 0xa3, 0x13, 0xbc, 0x5b, 0xd8, 0x9f, 0xc1, 0xa5, 0x01, 0x55, 0x16,
	0x1e, 0x35, 0x05, 0x5e, 0x6a, 0xaf, 0xe3, 0x0a, 0x1a, 0x43, 0x82, 0x36, 0xb9, 0xbd, 0xf4, 0x1f,
	0xc3, 0x95, 0xaa, 0xa4, 0x0b, 0x15, 0x19, 0x97, 0xdd, 0xc4, 0xc4, 0x02, 0x69, 0x70, 0x7a, 0xb1,
	0x10, 0x19, 0x03, 0x7a, 0xbf, 0xa1, 0x92, 0x76, 0x31, 0xf8, 0xb4, 0x03, 0x7a, 0x49, 0xaf, 0xcd,
	0x95, 0x22, 0x76, 0xb8, 0x73, 0xb9, 0xda, 0xcc, 0x97, 0x70, 0x55, 0xb0, 0xc6, 0xa5, 0x3c, 0xb1,
	0x5d, 0x41, 0x2b, 0xef, 0x85, 0xec, 0xd1, 0xba, 0x96, 0xf5, 0x5d, 0x59, 0x27, 0x78, 0x54, 0xf0,
	0xf2, 0x62, 0x3e, 0x87, 0xc9, 0xc1, 0xa1, 0xbc, 0xfa, 0x16, 0x0b, 0x4d, 0x73, 0x34, 0x50, 0x8a,
	0xdb, 0x49, 0x26, 0xb6, 0xb3, 0xcd, 0x3c, 0x06, 0x30, 0x65, 0x1f, 0xd0, 0x67, 0x3d, 0xa1, 0x85,
	0x71, 0x71, 0xba, 0x63, 0xfa, 0xed, 0xbf, 0xb3, 0x9a, 0x84, 0xe0, 0xeb, 0xca, 0x7c, 0x0a, 0x13,
	0x63, 0x63, 0x2d, 0xe3, 0xba, 0x20, 0xb6, 0xcb, 0x0d, 0xa5, 0x8a, 0x63, 0x4b, 0xd3, 0x75, 0x72,
	0xd5, 0x35, 0xf7, 0x37, 0xac, 0x04, 0x1f, 0x28, 0x55, 0xcc, 0xd4, 0x61, 0xda, 0x73, 0xfc, 0x9d,
	0x18, 0xe1, 0xe9, 0x28, 0x4d, 0x4e, 0x0e, 0xb9, 0x03, 0xe8, 0x3a, 0x44, 0xc3, 0xbe, 0xd9, 0xe3,
	0x1b, 0x43, 0xd3, 0x24, 0x9e, 0x2f, 0x85, 0x07, 0xbd, 0xea, 0x8f, 0x36, 0x53, 0x87, 0x68, 0xd0,
	0x9f, 0xa1, 0x40, 0x9d, 0xb4, 0x52, 0x15, 0xa6, 0x6c, 0x89, 0x43, 0xe7, 0x5c, 0x40, 0xc2, 0xc8,
	0x2c, 0xca, 0x3a, 0x73, 0x13, 0x46, 0x86, 0xab, 0xe6, 0x24, 0x84, 0x99, 0xae, 0xee, 0x93, 0xf6,
	0x2e, 0x3a, 0x58, 0xb8, 0x0b, 0x4f, 0x58, 0xf7, 0x9c, 0xd4, 0x24, 0x58, 0x6b, 0x0a, 0x72, 0xec,
	0xb0, 0xbf, 0x32, 0xd3, 0x28, 0x6b, 0x64, 0xaf, 0xe3, 0x0e, 0xee, 0xc1, 0x94, 0x96, 0x7a, 0x8f,
	0xae, 0xdb, 0x4f, 0x8a, 0x9b, 0x13, 0xc3, 0x22, 0x2a, 0xcd, 0x9a, 0x54, 0xb7, 0xea, 0x66, 0x98,
	0x7d, 0x03, 0x04, 0xba, 0x06, 0x58, 0x34, 0x0d, 0x10, 0x38, 0xc7, 0x6d, 0x73, 0xf9, 0x42, 0x71,
	0xdb, 0x67, 0x00, 0x9c, 0x71, 0xa7, 0xf6, 0x0d, 0x10, 0xea, 0x1a, 0xe0, 0x84, 0x69, 0x80, 0xe0,
	0x05, 0x2e, 0xbf, 0xc9, 0xe5, 0xcf, 0x14, 0x39, 0x07, 0x39, 0x4e, 0xe7, 0xc8, 0xbe, 0x01, 0x50,
	0xd7, 0x00, 0xcb, 0xa6, 0x01, 0xe8, 0xfc, 0x39, 0x2e, 0xbf, 0xcd, 0xe5, 0xcf, 0xf3, 0x14, 0xbd,
	0x80, 0x28, 0x9e, 0xa2, 0x17, 0xd1, 0x12, 0x4f, 0xd1, 0x27, 0x50, 0x98, 0xa7, 0xe8, 0x65, 0x84,
	0x78, 0x8a, 0x3e, 0x85, 0x22, 0x3c, 0x45, 0x47, 0x50, 0x94, 0xa7, 0xe8, 0x28, 0x5a, 0xe1, 0x29,
	0x7a, 0x05, 0xad, 0xf2, 0x14, 0xbd, 0x8a, 0x62, 0x3c, 0x45, 0xc7, 0x50, 0x9c, 0xa7, 0xe8, 0x38,
	0x4a, 0xf0, 0x14, 0x9d, 0x40, 0x6b, 0x3c, 0x45, 0xaf, 0xa1, 0x24, 0x4f, 0xd1, 0x49, 0x94, 0xe2,
	0x29, 0x3a, 0x85, 0x58, 0x9e, 0xa2, 0x59, 0xb4, 0xce, 0x53, 0xf4, 0x3a, 0x4a, 0xf3, 0x01, 0xfa,
	0xaf, 0x20, 0x7a, 0x1e, 0xe4, 0x03, 0xf4, 0xf3, 0x20, 0x3a, 0x0c, 0x66, 0x1e, 0x87, 0x60, 0xf8,
	0xb2, 0x86, 0x05, 0x82, 0x87, 0x17, 0xcc, 0x0d, 0x5f, 0x51, 0x8c, 0xfa, 0x77, 0xd5, 0x57, 0x0b,
	0x75, 0x7f, 0x2d, 0x5c, 0x79, 0x4d, 0x2d, 0xf4, 0x97, 0x40, 0xc9, 0xf3, 0x8e, 0x5c, 0x9d, 0x7a,
	0x90, 0xa2, 0x9e, 0x37, 0xe5, 0xb5, 0x39, 0x8f, 0xdb, 0xf1, 0xce, 0x31, 0x6a, 0x1b, 0x3f, 0x82,
	0xb3, 0x23, 0x45, 0xf6, 0xab, 0x63, 0x45, 0x36, 0xf1, 0x5f, 0x88, 0xec, 0x31, 0xda, 0x4a, 0x8e,
	0xb8, 0xfc, 0xd7, 0x5e, 0x8a, 0xcf, 0xc9, 0x57, 0x80, 0x6b, 0xbe, 0xd7, 0xfe, 0x7b, 0x1e, 0x52,
	0x98, 0x3a, 0x82, 0xc8, 0x49, 0x05, 0xbc, 0xeb, 0xa1, 0x80, 0xec, 0xab, 0x2a, 0xa0, 0x87, 0xf0,
	0x8d, 0xbf, 0x98, 0xac, 0xbf, 0x2e, 0x17, 0xf3, 0xce, 0x17, 0x93, 0x77, 0xef, 0xfc, 0x7e, 0x71,
	0xec, 0xbd, 0xef, 0x57, 0x03, 0x14, 0x61, 0x02, 0x46, 0xec, 0x2e, 0xa5, 0x2d, 0xc6, 0xd2, 0xf6,
	0xac, 0xcc, 0x17, 0xce, 0xc0, 0x08, 0x0c, 0xdb, 0x6b, 0x30, 0x7a, 0xba, 0x09, 0xc3, 0x90, 0xee,
	0xd5, 0x9c, 0xee, 0x71, 0x32, 0x5f, 0x38, 0x5f, 0xdc, 0x80, 0xd1, 0x71, 0xf9, 0xbb, 0xa7, 0x48,
	0x62, 0x5f, 0x94, 0xa2, 0x5d, 0x03, 0x44, 0x7a, 0xa2, 0x54, 0xc8, 0x73, 0x85, 0x02, 0x57, 0xd8,
	0x2a, 0x6e, 0xc1, 0x35, 0x6f, 0xed, 0x1b, 0x05, 0xc5, 0xbb, 0x06, 0x88, 0x59, 0x41, 0x67, 0xb9,
	0xc2, 0x39, 0xae, 0xb0, 0x5d, 0x7c, 0x0b, 0x2e, 0x8f, 0x74, 0x6f, 0xe4, 0x98, 0xea, 0x1a, 0x20,
	0x69, 0x39, 0x5e, 0xe0, 0xb6, 0x36, 0xb9, 0xad, 0xfc, 0x50, 0xd4, 0xfa, 0x12, 0x96, 0x44, 0xa9,
	0xcc, 0xb7, 0x21, 0xb8, 0x5c, 0xc2, 0xaa, 0x2c, 0x88, 0x33, 0x3d, 0x9a, 0xe9, 0xd1, 0x4c, 0x8f,
	0x66, 0x7a, 0xf4, 0x66, 0xf5, 0xe8, 0x9b, 0x10, 0x5c, 0xbc, 0x8a, 0xc9, 0x4c, 0x8b, 0x66, 0x5a,
	0x34, 0xd3, 0xa2, 0x99, 0x16, 0xbd, 0x51, 0x2d, 0x3a, 0x0b, 0xa3, 0xf6, 0x21, 0xae, 0xd8, 0xed,
	0xb8, 0x45, 0x04, 0xb2, 0xa3, 0x33, 0x49, 0x18, 0x92, 0x9a, 0x3a, 0x11, 0x64, 0x19, 0x57, 0x63,
	0x20, 0x0d, 0x4e, 0xd3, 0xa5, 0xd1, 0x83, 0xe2, 0xf7, 0xa0, 0x7b, 0xc0, 0xce, 0x3d, 0x3d, 0x60,
	0xe7, 0x5e, 0x1c, 0xb0, 0xe0, 0x9f, 0x03, 0x16, 0x3c, 0x32, 0x59, 0xf0, 0xa3, 0xc9, 0x82, 0x9f,
	0x4d, 0x16, 0xec, 0x9b, 0x2c, 0xf8, 0xcd, 0x64, 0x41, 0xd7, 0x64, 0xc1, 0x53, 0x93, 0x05, 0x7f,
	0x9a, 0x2c, 0x38, 0x34, 0xd9, 0xb9, 0x17, 0x26, 0x0b, 0xbe, 0x7b, 0xc6, 0xce, 0xed, 0x3f, 0x63,
	0xc1, 0x27, 0xb7, 0xeb, 0x8a, 0x7a, 0xbf, 0x9e, 0x6d, 0x29, 0x32, 0xc1, 0x9a, 0x26, 0x64, 0x77,
	0xf4, 0x9c, 0xf5, 0xa3, 0xa6, 0x68, 0x8d, 0x0d, 0x55, 0x53, 0x5a, 0x52, 0x15, 0x6b, 0x1b, 0x03,
	0x73, 0x4e, 0xad, 0xd4, 0x95, 0x1c, 0x7e, 0x40, 0xec, 0x8f, 0xd2, 0x3e, 0xdf, 0xf9, 0x2b, 0x01,
	0xeb, 0x0b, 0xf5, 0xd6, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xec, 0x2d, 0x07, 0x3b, 0x10, 0x18,
	0x00, 0x00,
}
